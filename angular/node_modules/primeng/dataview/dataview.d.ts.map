{"version":3,"file":"dataview.d.ts","sources":["dataview.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\nimport { BlockableUI } from 'primeng/api';\nexport declare class DataView implements OnInit, AfterContentInit, BlockableUI, OnChanges {\n    el: ElementRef;\n    cd: ChangeDetectorRef;\n    layout: string;\n    paginator: boolean;\n    rows: number;\n    totalRecords: number;\n    pageLinks: number;\n    rowsPerPageOptions: any[];\n    paginatorPosition: string;\n    alwaysShowPaginator: boolean;\n    paginatorDropdownAppendTo: any;\n    paginatorDropdownScrollHeight: string;\n    currentPageReportTemplate: string;\n    showCurrentPageReport: boolean;\n    showJumpToPageDropdown: boolean;\n    showPageLinks: boolean;\n    lazy: boolean;\n    emptyMessage: string;\n    onLazyLoad: EventEmitter<any>;\n    style: any;\n    styleClass: string;\n    trackBy: Function;\n    filterBy: string;\n    filterLocale: string;\n    loading: boolean;\n    loadingIcon: string;\n    first: number;\n    sortField: string;\n    sortOrder: number;\n    value: any[];\n    onPage: EventEmitter<any>;\n    onSort: EventEmitter<any>;\n    onChangeLayout: EventEmitter<any>;\n    header: any;\n    footer: any;\n    templates: QueryList<any>;\n    _value: any[];\n    listItemTemplate: TemplateRef<any>;\n    gridItemTemplate: TemplateRef<any>;\n    itemTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    footerTemplate: TemplateRef<any>;\n    paginatorLeftTemplate: TemplateRef<any>;\n    paginatorRightTemplate: TemplateRef<any>;\n    filteredValue: any[];\n    filterValue: string;\n    initialized: boolean;\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngOnChanges(simpleChanges: SimpleChanges): void;\n    ngAfterContentInit(): void;\n    updateItemTemplate(): void;\n    changeLayout(layout: string): void;\n    updateTotalRecords(): void;\n    paginate(event: any): void;\n    sort(): void;\n    isEmpty(): boolean;\n    createLazyLoadMetadata(): any;\n    getBlockableElement(): HTMLElement;\n    filter(filter: string, filterMatchMode?: string): void;\n    hasFilter(): boolean;\n}\nexport declare class DataViewLayoutOptions {\n    dv: DataView;\n    style: any;\n    styleClass: string;\n    constructor(dv: DataView);\n    changeLayout(event: Event, layout: string): void;\n}\nexport declare class DataViewModule {\n}\n"]}