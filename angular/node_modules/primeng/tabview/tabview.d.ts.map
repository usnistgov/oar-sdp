{"version":3,"file":"tabview.d.ts","sources":["tabview.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, EventEmitter, AfterContentInit, QueryList, TemplateRef, EmbeddedViewRef, ViewContainerRef, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { BlockableUI } from 'primeng/api';\nexport declare class TabPanel implements AfterContentInit, OnDestroy {\n    viewContainer: ViewContainerRef;\n    cd: ChangeDetectorRef;\n    closable: boolean;\n    headerStyle: any;\n    headerStyleClass: string;\n    cache: boolean;\n    tooltip: any;\n    tooltipPosition: string;\n    tooltipPositionStyle: string;\n    tooltipStyleClass: string;\n    templates: QueryList<any>;\n    closed: boolean;\n    view: EmbeddedViewRef<any>;\n    _selected: boolean;\n    _disabled: boolean;\n    _header: string;\n    _leftIcon: string;\n    _rightIcon: string;\n    loaded: boolean;\n    id: string;\n    contentTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    tabView: TabView;\n    constructor(tabView: any, viewContainer: ViewContainerRef, cd: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    get selected(): boolean;\n    set selected(val: boolean);\n    get disabled(): boolean;\n    set disabled(disabled: boolean);\n    get header(): string;\n    set header(header: string);\n    get leftIcon(): string;\n    set leftIcon(leftIcon: string);\n    get rightIcon(): string;\n    set rightIcon(rightIcon: string);\n    ngOnDestroy(): void;\n}\nexport declare class TabView implements AfterContentInit, AfterViewChecked, BlockableUI {\n    el: ElementRef;\n    cd: ChangeDetectorRef;\n    orientation: string;\n    style: any;\n    styleClass: string;\n    controlClose: boolean;\n    navbar: ElementRef;\n    inkbar: ElementRef;\n    tabPanels: QueryList<TabPanel>;\n    onChange: EventEmitter<any>;\n    onClose: EventEmitter<any>;\n    activeIndexChange: EventEmitter<number>;\n    initialized: boolean;\n    tabs: TabPanel[];\n    _activeIndex: number;\n    preventActiveIndexPropagation: boolean;\n    tabChanged: boolean;\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    ngAfterViewChecked(): void;\n    initTabs(): void;\n    open(event: Event, tab: TabPanel): void;\n    close(event: Event, tab: TabPanel): void;\n    closeTab(tab: TabPanel): void;\n    findSelectedTab(): TabPanel;\n    findTabIndex(tab: TabPanel): number;\n    getBlockableElement(): HTMLElement;\n    get activeIndex(): number;\n    set activeIndex(val: number);\n    updateInkBar(): void;\n}\nexport declare class TabViewModule {\n}\n"]}