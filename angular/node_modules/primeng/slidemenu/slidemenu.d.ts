import { ElementRef, AfterViewChecked, OnDestroy, Renderer2, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { MenuItem } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/router';
export declare class SlideMenuSub implements OnDestroy {
    item: MenuItem;
    root: boolean;
    backLabel: string;
    menuWidth: number;
    effectDuration: any;
    easing: string;
    index: number;
    slideMenu: SlideMenu;
    constructor(slideMenu: any);
    activeItem: any;
    itemClick(event: any, item: MenuItem, listitem: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlideMenuSub, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SlideMenuSub, "p-slideMenuSub", never, { "backLabel": "backLabel"; "easing": "easing"; "item": "item"; "root": "root"; "menuWidth": "menuWidth"; "effectDuration": "effectDuration"; "index": "index"; }, {}, never, never>;
}
export declare class SlideMenu implements AfterViewChecked, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private cd;
    model: MenuItem[];
    popup: boolean;
    style: any;
    styleClass: string;
    menuWidth: number;
    viewportHeight: number;
    effectDuration: any;
    easing: string;
    backLabel: string;
    appendTo: any;
    autoZIndex: boolean;
    baseZIndex: number;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    containerViewChild: ElementRef;
    backwardViewChild: ElementRef;
    slideMenuContentViewChild: ElementRef;
    documentClickListener: any;
    documentResizeListener: any;
    preventDocumentDefault: boolean;
    left: number;
    animating: boolean;
    target: any;
    visible: boolean;
    viewportUpdated: boolean;
    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef);
    ngAfterViewChecked(): void;
    container: ElementRef;
    backward: ElementRef;
    slideMenuContent: ElementRef;
    updateViewPort(): void;
    toggle(event: any): void;
    show(event: any): void;
    onOverlayAnimationStart(event: AnimationEvent): void;
    appendOverlay(): void;
    restoreOverlayAppend(): void;
    moveOnTop(): void;
    hide(): void;
    onWindowResize(): void;
    onClick(event: any): void;
    goBack(): void;
    bindDocumentClickListener(): void;
    unbindDocumentClickListener(): void;
    bindDocumentResizeListener(): void;
    unbindDocumentResizeListener(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlideMenu, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SlideMenu, "p-slideMenu", never, { "menuWidth": "menuWidth"; "viewportHeight": "viewportHeight"; "effectDuration": "effectDuration"; "easing": "easing"; "backLabel": "backLabel"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "model": "model"; "popup": "popup"; "style": "style"; "styleClass": "styleClass"; "appendTo": "appendTo"; }, { "onShow": "onShow"; "onHide": "onHide"; }, never, never>;
}
export declare class SlideMenuModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<SlideMenuModule, [typeof SlideMenu, typeof SlideMenuSub], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.RouterModule], [typeof SlideMenu, typeof ɵngcc2.RouterModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<SlideMenuModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVtZW51LmQudHMiLCJzb3VyY2VzIjpbInNsaWRlbWVudS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7O0FBYUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0RBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBBZnRlclZpZXdDaGVja2VkLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiwgRXZlbnRFbWl0dGVyLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQW5pbWF0aW9uRXZlbnQgfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcbmltcG9ydCB7IE1lbnVJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2xpZGVNZW51U3ViIGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgICBpdGVtOiBNZW51SXRlbTtcbiAgICByb290OiBib29sZWFuO1xuICAgIGJhY2tMYWJlbDogc3RyaW5nO1xuICAgIG1lbnVXaWR0aDogbnVtYmVyO1xuICAgIGVmZmVjdER1cmF0aW9uOiBhbnk7XG4gICAgZWFzaW5nOiBzdHJpbmc7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBzbGlkZU1lbnU6IFNsaWRlTWVudTtcbiAgICBjb25zdHJ1Y3RvcihzbGlkZU1lbnU6IGFueSk7XG4gICAgYWN0aXZlSXRlbTogYW55O1xuICAgIGl0ZW1DbGljayhldmVudDogYW55LCBpdGVtOiBNZW51SXRlbSwgbGlzdGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNsaWRlTWVudSBpbXBsZW1lbnRzIEFmdGVyVmlld0NoZWNrZWQsIE9uRGVzdHJveSB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBwcml2YXRlIGNkO1xuICAgIG1vZGVsOiBNZW51SXRlbVtdO1xuICAgIHBvcHVwOiBib29sZWFuO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIG1lbnVXaWR0aDogbnVtYmVyO1xuICAgIHZpZXdwb3J0SGVpZ2h0OiBudW1iZXI7XG4gICAgZWZmZWN0RHVyYXRpb246IGFueTtcbiAgICBlYXNpbmc6IHN0cmluZztcbiAgICBiYWNrTGFiZWw6IHN0cmluZztcbiAgICBhcHBlbmRUbzogYW55O1xuICAgIGF1dG9aSW5kZXg6IGJvb2xlYW47XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIG9uU2hvdzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25IaWRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjb250YWluZXJWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgYmFja3dhcmRWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgc2xpZGVNZW51Q29udGVudFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBkb2N1bWVudENsaWNrTGlzdGVuZXI6IGFueTtcbiAgICBkb2N1bWVudFJlc2l6ZUxpc3RlbmVyOiBhbnk7XG4gICAgcHJldmVudERvY3VtZW50RGVmYXVsdDogYm9vbGVhbjtcbiAgICBsZWZ0OiBudW1iZXI7XG4gICAgYW5pbWF0aW5nOiBib29sZWFuO1xuICAgIHRhcmdldDogYW55O1xuICAgIHZpc2libGU6IGJvb2xlYW47XG4gICAgdmlld3BvcnRVcGRhdGVkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIGNvbnRhaW5lcjogRWxlbWVudFJlZjtcbiAgICBiYWNrd2FyZDogRWxlbWVudFJlZjtcbiAgICBzbGlkZU1lbnVDb250ZW50OiBFbGVtZW50UmVmO1xuICAgIHVwZGF0ZVZpZXdQb3J0KCk6IHZvaWQ7XG4gICAgdG9nZ2xlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHNob3coZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25PdmVybGF5QW5pbWF0aW9uU3RhcnQoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBhcHBlbmRPdmVybGF5KCk6IHZvaWQ7XG4gICAgcmVzdG9yZU92ZXJsYXlBcHBlbmQoKTogdm9pZDtcbiAgICBtb3ZlT25Ub3AoKTogdm9pZDtcbiAgICBoaWRlKCk6IHZvaWQ7XG4gICAgb25XaW5kb3dSZXNpemUoKTogdm9pZDtcbiAgICBvbkNsaWNrKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGdvQmFjaygpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudENsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICB1bmJpbmREb2N1bWVudENsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICBiaW5kRG9jdW1lbnRSZXNpemVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZERvY3VtZW50UmVzaXplTGlzdGVuZXIoKTogdm9pZDtcbiAgICBvbk92ZXJsYXlIaWRlKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNsaWRlTWVudU1vZHVsZSB7XG59XG4iXX0=