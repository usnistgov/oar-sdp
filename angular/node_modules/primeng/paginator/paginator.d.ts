import { OnInit, ChangeDetectorRef, EventEmitter, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { SelectItem } from 'primeng/api';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "primeng/dropdown";
import * as i3 from "primeng/inputnumber";
import * as i4 from "@angular/forms";
import * as i5 from "primeng/api";
import * as i6 from "primeng/ripple";
export declare class Paginator implements OnInit, OnChanges {
    private cd;
    pageLinkSize: number;
    onPageChange: EventEmitter<any>;
    style: any;
    styleClass: string;
    alwaysShow: boolean;
    templateLeft: TemplateRef<any>;
    templateRight: TemplateRef<any>;
    dropdownAppendTo: any;
    dropdownScrollHeight: string;
    currentPageReportTemplate: string;
    showCurrentPageReport: boolean;
    showFirstLastIcon: boolean;
    totalRecords: number;
    rows: number;
    rowsPerPageOptions: any[];
    showJumpToPageDropdown: boolean;
    showJumpToPageInput: boolean;
    showPageLinks: boolean;
    dropdownItemTemplate: TemplateRef<any>;
    pageLinks: number[];
    pageItems: SelectItem[];
    rowsPerPageItems: SelectItem[];
    paginatorState: any;
    _first: number;
    _page: number;
    constructor(cd: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(simpleChange: SimpleChanges): void;
    get first(): number;
    set first(val: number);
    updateRowsPerPageOptions(): void;
    isFirstPage(): boolean;
    isLastPage(): boolean;
    getPageCount(): number;
    calculatePageLinkBoundaries(): number[];
    updatePageLinks(): void;
    changePage(p: number): void;
    updateFirst(): void;
    getPage(): number;
    changePageToFirst(event: any): void;
    changePageToPrev(event: any): void;
    changePageToNext(event: any): void;
    changePageToLast(event: any): void;
    onPageLinkClick(event: any, page: any): void;
    onRppChange(event: any): void;
    onPageDropdownChange(event: any): void;
    updatePaginatorState(): void;
    empty(): boolean;
    currentPage(): number;
    get currentPageReport(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<Paginator, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<Paginator, "p-paginator", never, { "pageLinkSize": "pageLinkSize"; "style": "style"; "styleClass": "styleClass"; "alwaysShow": "alwaysShow"; "templateLeft": "templateLeft"; "templateRight": "templateRight"; "dropdownAppendTo": "dropdownAppendTo"; "dropdownScrollHeight": "dropdownScrollHeight"; "currentPageReportTemplate": "currentPageReportTemplate"; "showCurrentPageReport": "showCurrentPageReport"; "showFirstLastIcon": "showFirstLastIcon"; "totalRecords": "totalRecords"; "rows": "rows"; "rowsPerPageOptions": "rowsPerPageOptions"; "showJumpToPageDropdown": "showJumpToPageDropdown"; "showJumpToPageInput": "showJumpToPageInput"; "showPageLinks": "showPageLinks"; "dropdownItemTemplate": "dropdownItemTemplate"; "first": "first"; }, { "onPageChange": "onPageChange"; }, never, never>;
}
export declare class PaginatorModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<PaginatorModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<PaginatorModule, [typeof Paginator], [typeof i1.CommonModule, typeof i2.DropdownModule, typeof i3.InputNumberModule, typeof i4.FormsModule, typeof i5.SharedModule, typeof i6.RippleModule], [typeof Paginator, typeof i2.DropdownModule, typeof i3.InputNumberModule, typeof i4.FormsModule, typeof i5.SharedModule]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<PaginatorModule>;
}
