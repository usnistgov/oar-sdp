{"version":3,"file":"spinner.d.ts","sources":["spinner.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const SPINNER_VALUE_ACCESSOR: any;\nexport declare class Spinner implements OnInit, ControlValueAccessor {\n    el: ElementRef;\n    cd: ChangeDetectorRef;\n    onChange: EventEmitter<any>;\n    onFocus: EventEmitter<any>;\n    onBlur: EventEmitter<any>;\n    min: number;\n    max: number;\n    maxlength: number;\n    size: number;\n    placeholder: string;\n    inputId: string;\n    disabled: boolean;\n    readonly: boolean;\n    tabindex: number;\n    required: boolean;\n    name: string;\n    ariaLabelledBy: string;\n    inputStyle: any;\n    inputStyleClass: string;\n    formatInput: boolean;\n    decimalSeparator: string;\n    thousandSeparator: string;\n    precision: number;\n    value: any;\n    _step: number;\n    formattedValue: string;\n    onModelChange: Function;\n    onModelTouched: Function;\n    keyPattern: RegExp;\n    timer: any;\n    focus: boolean;\n    filled: boolean;\n    negativeSeparator: string;\n    localeDecimalSeparator: string;\n    localeThousandSeparator: string;\n    thousandRegExp: RegExp;\n    calculatedPrecision: number;\n    inputfieldViewChild: ElementRef;\n    get step(): number;\n    set step(val: number);\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    repeat(event: Event, interval: number, dir: number): void;\n    spin(event: Event, dir: number): void;\n    getPrecision(): number;\n    toFixed(value: number, precision: number): string;\n    onUpButtonMousedown(event: Event): void;\n    onUpButtonMouseup(event: Event): void;\n    onUpButtonMouseleave(event: Event): void;\n    onDownButtonMousedown(event: Event): void;\n    onDownButtonMouseup(event: Event): void;\n    onDownButtonMouseleave(event: Event): void;\n    onInputKeydown(event: KeyboardEvent): void;\n    onInputChange(event: Event): void;\n    onInput(event: KeyboardEvent): void;\n    onInputBlur(event: any): void;\n    onInputFocus(event: any): void;\n    parseValue(val: string): number;\n    formatValue(): void;\n    clearTimer(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    updateFilledState(): void;\n}\nexport declare class SpinnerModule {\n}\n"]}