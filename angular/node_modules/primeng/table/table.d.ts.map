{"version":3,"file":"table.d.ts","sources":["table.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnDestroy, AfterViewInit, AfterContentInit, EventEmitter, ElementRef, TemplateRef, QueryList, NgZone, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { PrimeTemplate } from 'primeng/api';\nimport { SortMeta } from 'primeng/api';\nimport { FilterMetadata } from 'primeng/api';\nimport { BlockableUI } from 'primeng/api';\nimport { Subscription } from 'rxjs';\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nexport declare class TableService {\n    private sortSource;\n    private selectionSource;\n    private contextMenuSource;\n    private valueSource;\n    private totalRecordsSource;\n    private columnsSource;\n    sortSource$: import(\"rxjs\").Observable<SortMeta | SortMeta[]>;\n    selectionSource$: import(\"rxjs\").Observable<unknown>;\n    contextMenuSource$: import(\"rxjs\").Observable<any>;\n    valueSource$: import(\"rxjs\").Observable<any>;\n    totalRecordsSource$: import(\"rxjs\").Observable<any>;\n    columnsSource$: import(\"rxjs\").Observable<unknown>;\n    onSort(sortMeta: SortMeta | SortMeta[]): void;\n    onSelectionChange(): void;\n    onContextMenu(data: any): void;\n    onValueChange(value: any): void;\n    onTotalRecordsChange(value: number): void;\n    onColumnsChange(columns: any[]): void;\n}\nexport declare class Table implements OnInit, AfterViewInit, AfterContentInit, BlockableUI, OnChanges {\n    el: ElementRef;\n    zone: NgZone;\n    tableService: TableService;\n    cd: ChangeDetectorRef;\n    frozenColumns: any[];\n    frozenValue: any[];\n    style: any;\n    styleClass: string;\n    tableStyle: any;\n    tableStyleClass: string;\n    paginator: boolean;\n    pageLinks: number;\n    rowsPerPageOptions: any[];\n    alwaysShowPaginator: boolean;\n    paginatorPosition: string;\n    paginatorDropdownAppendTo: any;\n    paginatorDropdownScrollHeight: string;\n    currentPageReportTemplate: string;\n    showCurrentPageReport: boolean;\n    showJumpToPageDropdown: boolean;\n    showPageLinks: boolean;\n    defaultSortOrder: number;\n    sortMode: string;\n    resetPageOnSort: boolean;\n    selectionMode: string;\n    selectionChange: EventEmitter<any>;\n    contextMenuSelection: any;\n    contextMenuSelectionChange: EventEmitter<any>;\n    contextMenuSelectionMode: string;\n    dataKey: string;\n    metaKeySelection: boolean;\n    rowTrackBy: Function;\n    lazy: boolean;\n    lazyLoadOnInit: boolean;\n    compareSelectionBy: string;\n    csvSeparator: string;\n    exportFilename: string;\n    filters: {\n        [s: string]: FilterMetadata;\n    };\n    globalFilterFields: string[];\n    filterDelay: number;\n    filterLocale: string;\n    expandedRowKeys: {\n        [s: string]: boolean;\n    };\n    editingRowKeys: {\n        [s: string]: boolean;\n    };\n    rowExpandMode: string;\n    scrollable: boolean;\n    scrollHeight: string;\n    virtualScroll: boolean;\n    virtualScrollDelay: number;\n    virtualRowHeight: number;\n    frozenWidth: string;\n    responsive: boolean;\n    contextMenu: any;\n    resizableColumns: boolean;\n    columnResizeMode: string;\n    reorderableColumns: boolean;\n    loading: boolean;\n    loadingIcon: string;\n    showLoader: boolean;\n    rowHover: boolean;\n    customSort: boolean;\n    autoLayout: boolean;\n    exportFunction: any;\n    stateKey: string;\n    stateStorage: string;\n    editMode: string;\n    minBufferPx: number;\n    maxBufferPx: number;\n    onRowSelect: EventEmitter<any>;\n    onRowUnselect: EventEmitter<any>;\n    onPage: EventEmitter<any>;\n    onSort: EventEmitter<any>;\n    onFilter: EventEmitter<any>;\n    onLazyLoad: EventEmitter<any>;\n    onRowExpand: EventEmitter<any>;\n    onRowCollapse: EventEmitter<any>;\n    onContextMenuSelect: EventEmitter<any>;\n    onColResize: EventEmitter<any>;\n    onColReorder: EventEmitter<any>;\n    onRowReorder: EventEmitter<any>;\n    onEditInit: EventEmitter<any>;\n    onEditComplete: EventEmitter<any>;\n    onEditCancel: EventEmitter<any>;\n    onHeaderCheckboxToggle: EventEmitter<any>;\n    sortFunction: EventEmitter<any>;\n    firstChange: EventEmitter<number>;\n    rowsChange: EventEmitter<number>;\n    onStateSave: EventEmitter<any>;\n    onStateRestore: EventEmitter<any>;\n    containerViewChild: ElementRef;\n    resizeHelperViewChild: ElementRef;\n    reorderIndicatorUpViewChild: ElementRef;\n    reorderIndicatorDownViewChild: ElementRef;\n    tableViewChild: ElementRef;\n    scrollableViewChild: any;\n    scrollableFrozenViewChild: any;\n    templates: QueryList<PrimeTemplate>;\n    _value: any[];\n    _columns: any[];\n    _totalRecords: number;\n    _first: number;\n    _rows: number;\n    filteredValue: any[];\n    headerTemplate: TemplateRef<any>;\n    bodyTemplate: TemplateRef<any>;\n    loadingBodyTemplate: TemplateRef<any>;\n    captionTemplate: TemplateRef<any>;\n    frozenRowsTemplate: TemplateRef<any>;\n    footerTemplate: TemplateRef<any>;\n    summaryTemplate: TemplateRef<any>;\n    colGroupTemplate: TemplateRef<any>;\n    expandedRowTemplate: TemplateRef<any>;\n    frozenHeaderTemplate: TemplateRef<any>;\n    frozenBodyTemplate: TemplateRef<any>;\n    frozenFooterTemplate: TemplateRef<any>;\n    frozenColGroupTemplate: TemplateRef<any>;\n    emptyMessageTemplate: TemplateRef<any>;\n    paginatorLeftTemplate: TemplateRef<any>;\n    paginatorRightTemplate: TemplateRef<any>;\n    selectionKeys: any;\n    lastResizerHelperX: number;\n    reorderIconWidth: number;\n    reorderIconHeight: number;\n    draggedColumn: any;\n    draggedRowIndex: number;\n    droppedRowIndex: number;\n    rowDragging: boolean;\n    dropPosition: number;\n    editingCell: Element;\n    editingCellData: any;\n    editingCellField: any;\n    editingCellRowIndex: number;\n    editingCellClick: boolean;\n    documentEditListener: any;\n    _multiSortMeta: SortMeta[];\n    _sortField: string;\n    _sortOrder: number;\n    preventSelectionSetterPropagation: boolean;\n    _selection: any;\n    anchorRowIndex: number;\n    rangeRowIndex: number;\n    filterTimeout: any;\n    initialized: boolean;\n    rowTouched: boolean;\n    restoringSort: boolean;\n    restoringFilter: boolean;\n    stateRestored: boolean;\n    columnOrderStateRestored: boolean;\n    columnWidthsState: string;\n    tableWidthState: string;\n    constructor(el: ElementRef, zone: NgZone, tableService: TableService, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    clearCache(): void;\n    ngOnChanges(simpleChange: SimpleChanges): void;\n    get value(): any[];\n    set value(val: any[]);\n    get columns(): any[];\n    set columns(cols: any[]);\n    get first(): number;\n    set first(val: number);\n    get rows(): number;\n    set rows(val: number);\n    get totalRecords(): number;\n    set totalRecords(val: number);\n    get sortField(): string;\n    set sortField(val: string);\n    get sortOrder(): number;\n    set sortOrder(val: number);\n    get multiSortMeta(): SortMeta[];\n    set multiSortMeta(val: SortMeta[]);\n    get selection(): any;\n    set selection(val: any);\n    updateSelectionKeys(): void;\n    onPageChange(event: any): void;\n    sort(event: any): void;\n    sortSingle(): void;\n    sortMultiple(): void;\n    multisortField(data1: any, data2: any, multiSortMeta: any, index: any): any;\n    getSortMeta(field: string): SortMeta;\n    isSorted(field: string): boolean;\n    handleRowClick(event: any): void;\n    handleRowTouchEnd(event: any): void;\n    handleRowRightClick(event: any): void;\n    selectRange(event: MouseEvent, rowIndex: number): void;\n    clearSelectionRange(event: MouseEvent): void;\n    isSelected(rowData: any): boolean;\n    findIndexInSelection(rowData: any): number;\n    toggleRowWithRadio(event: any, rowData: any): void;\n    toggleRowWithCheckbox(event: any, rowData: any): void;\n    toggleRowsWithCheckbox(event: Event, check: boolean): void;\n    equals(data1: any, data2: any): boolean;\n    filter(value: any, field: any, matchMode: any): void;\n    filterGlobal(value: any, matchMode: any): void;\n    isFilterBlank(filter: any): boolean;\n    _filter(): void;\n    hasFilter(): boolean;\n    createLazyLoadMetadata(): any;\n    clear(): void;\n    reset(): void;\n    exportCSV(options?: any): void;\n    resetScrollTop(): void;\n    scrollToVirtualIndex(index: number): void;\n    scrollTo(options: any): void;\n    updateEditingCell(cell: any, data: any, field: any, index: any): void;\n    isEditingCellValid(): boolean;\n    bindDocumentEditListener(): void;\n    unbindDocumentEditListener(): void;\n    initRowEdit(rowData: any): void;\n    saveRowEdit(rowData: any, rowElement: HTMLTableRowElement): void;\n    cancelRowEdit(rowData: any): void;\n    toggleRow(rowData: any, event?: Event): void;\n    isRowExpanded(rowData: any): boolean;\n    isRowEditing(rowData: any): boolean;\n    isSingleSelectionMode(): boolean;\n    isMultipleSelectionMode(): boolean;\n    onColumnResizeBegin(event: any): void;\n    onColumnResize(event: any): void;\n    onColumnResizeEnd(event: any, column: any): void;\n    setScrollableItemsWidthOnExpandResize(column: any, newColumnWidth: any, delta: any): void;\n    findParentScrollableView(column: any): any;\n    resizeColGroup(table: any, resizeColumnIndex: any, newColumnWidth: any, nextColumnWidth: any): void;\n    onColumnDragStart(event: any, columnElement: any): void;\n    onColumnDragEnter(event: any, dropHeader: any): void;\n    onColumnDragLeave(event: any): void;\n    onColumnDrop(event: any, dropColumn: any): void;\n    onRowDragStart(event: any, index: any): void;\n    onRowDragOver(event: any, index: any, rowElement: any): void;\n    onRowDragLeave(event: any, rowElement: any): void;\n    onRowDragEnd(event: any): void;\n    onRowDrop(event: any, rowElement: any): void;\n    isEmpty(): boolean;\n    getBlockableElement(): HTMLElement;\n    getStorage(): Storage;\n    isStateful(): boolean;\n    saveState(): void;\n    clearState(): void;\n    restoreState(): void;\n    saveColumnWidths(state: any): void;\n    restoreColumnWidths(): void;\n    saveColumnOrder(state: any): void;\n    restoreColumnOrder(): void;\n    findColumnByKey(key: any): any;\n    ngOnDestroy(): void;\n}\nexport declare class TableBody implements OnDestroy {\n    dt: Table;\n    tableService: TableService;\n    cd: ChangeDetectorRef;\n    columns: any[];\n    template: TemplateRef<any>;\n    frozen: boolean;\n    subscription: Subscription;\n    constructor(dt: Table, tableService: TableService, cd: ChangeDetectorRef);\n    ngOnDestroy(): void;\n}\nexport declare class ScrollableView implements AfterViewInit, OnDestroy {\n    dt: Table;\n    el: ElementRef;\n    zone: NgZone;\n    columns: any[];\n    frozen: boolean;\n    scrollHeaderViewChild: ElementRef;\n    scrollHeaderBoxViewChild: ElementRef;\n    scrollBodyViewChild: ElementRef;\n    scrollTableViewChild: ElementRef;\n    scrollFooterViewChild: ElementRef;\n    scrollFooterBoxViewChild: ElementRef;\n    scrollableAlignerViewChild: ElementRef;\n    virtualScrollBody: CdkVirtualScrollViewport;\n    headerScrollListener: any;\n    bodyScrollListener: any;\n    footerScrollListener: any;\n    frozenSiblingBody: HTMLDivElement;\n    preventBodyScrollPropagation: boolean;\n    loadedPages: number[];\n    _scrollHeight: string;\n    get scrollHeight(): string;\n    set scrollHeight(val: string);\n    constructor(dt: Table, el: ElementRef, zone: NgZone);\n    ngAfterViewInit(): void;\n    bindEvents(): void;\n    unbindEvents(): void;\n    onHeaderScroll(): void;\n    onFooterScroll(): void;\n    onBodyScroll(event: any): void;\n    onScrollIndexChange(index: number): void;\n    createPageRange(page: number): number[];\n    loadPage(page: number): void;\n    clearCache(): void;\n    getPageCount(): number;\n    scrollToVirtualIndex(index: number): void;\n    scrollTo(options: any): void;\n    ngOnDestroy(): void;\n}\nexport declare class SortableColumn implements OnInit, OnDestroy {\n    dt: Table;\n    field: string;\n    pSortableColumnDisabled: boolean;\n    sorted: boolean;\n    sortOrder: string;\n    subscription: Subscription;\n    constructor(dt: Table);\n    ngOnInit(): void;\n    updateSortState(): void;\n    onClick(event: MouseEvent): void;\n    onEnterKey(event: MouseEvent): void;\n    isEnabled(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class SortIcon implements OnInit, OnDestroy {\n    dt: Table;\n    cd: ChangeDetectorRef;\n    field: string;\n    subscription: Subscription;\n    sortOrder: number;\n    constructor(dt: Table, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    onClick(event: any): void;\n    updateSortState(): void;\n    ngOnDestroy(): void;\n}\nexport declare class SelectableRow implements OnInit, OnDestroy {\n    dt: Table;\n    tableService: TableService;\n    data: any;\n    index: number;\n    pSelectableRowDisabled: boolean;\n    selected: boolean;\n    subscription: Subscription;\n    constructor(dt: Table, tableService: TableService);\n    ngOnInit(): void;\n    onClick(event: Event): void;\n    onTouchEnd(event: Event): void;\n    onArrowDownKeyDown(event: KeyboardEvent): void;\n    onArrowUpKeyDown(event: KeyboardEvent): void;\n    onEnterKeyDown(event: KeyboardEvent): void;\n    findNextSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement;\n    findPrevSelectableRow(row: HTMLTableRowElement): HTMLTableRowElement;\n    isEnabled(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class SelectableRowDblClick implements OnInit, OnDestroy {\n    dt: Table;\n    tableService: TableService;\n    data: any;\n    index: number;\n    pSelectableRowDisabled: boolean;\n    selected: boolean;\n    subscription: Subscription;\n    constructor(dt: Table, tableService: TableService);\n    ngOnInit(): void;\n    onClick(event: Event): void;\n    isEnabled(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class ContextMenuRow {\n    dt: Table;\n    tableService: TableService;\n    private el;\n    data: any;\n    index: number;\n    pContextMenuRowDisabled: boolean;\n    selected: boolean;\n    subscription: Subscription;\n    constructor(dt: Table, tableService: TableService, el: ElementRef);\n    onContextMenu(event: Event): void;\n    isEnabled(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class RowToggler {\n    dt: Table;\n    data: any;\n    pRowTogglerDisabled: boolean;\n    constructor(dt: Table);\n    onClick(event: Event): void;\n    isEnabled(): boolean;\n}\nexport declare class ResizableColumn implements AfterViewInit, OnDestroy {\n    dt: Table;\n    el: ElementRef;\n    zone: NgZone;\n    pResizableColumnDisabled: boolean;\n    resizer: HTMLSpanElement;\n    resizerMouseDownListener: any;\n    documentMouseMoveListener: any;\n    documentMouseUpListener: any;\n    constructor(dt: Table, el: ElementRef, zone: NgZone);\n    ngAfterViewInit(): void;\n    bindDocumentEvents(): void;\n    unbindDocumentEvents(): void;\n    onMouseDown(event: MouseEvent): void;\n    onDocumentMouseMove(event: MouseEvent): void;\n    onDocumentMouseUp(event: MouseEvent): void;\n    isEnabled(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class ReorderableColumn implements AfterViewInit, OnDestroy {\n    dt: Table;\n    el: ElementRef;\n    zone: NgZone;\n    pReorderableColumnDisabled: boolean;\n    dragStartListener: any;\n    dragOverListener: any;\n    dragEnterListener: any;\n    dragLeaveListener: any;\n    mouseDownListener: any;\n    constructor(dt: Table, el: ElementRef, zone: NgZone);\n    ngAfterViewInit(): void;\n    bindEvents(): void;\n    unbindEvents(): void;\n    onMouseDown(event: any): void;\n    onDragStart(event: any): void;\n    onDragOver(event: any): void;\n    onDragEnter(event: any): void;\n    onDragLeave(event: any): void;\n    onDrop(event: any): void;\n    isEnabled(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class EditableColumn implements AfterViewInit {\n    dt: Table;\n    el: ElementRef;\n    zone: NgZone;\n    data: any;\n    field: any;\n    rowIndex: number;\n    pEditableColumnDisabled: boolean;\n    pFocusCellSelector: string;\n    constructor(dt: Table, el: ElementRef, zone: NgZone);\n    ngAfterViewInit(): void;\n    onClick(event: MouseEvent): void;\n    openCell(): void;\n    closeEditingCell(completed: any, event: any): void;\n    onEnterKeyDown(event: KeyboardEvent): void;\n    onEscapeKeyDown(event: KeyboardEvent): void;\n    onShiftKeyDown(event: KeyboardEvent): void;\n    findCell(element: any): any;\n    moveToPreviousCell(event: KeyboardEvent): void;\n    moveToNextCell(event: KeyboardEvent): void;\n    findPreviousEditableColumn(cell: Element): any;\n    findNextEditableColumn(cell: Element): any;\n    isEnabled(): boolean;\n}\nexport declare class EditableRow {\n    el: ElementRef;\n    data: any;\n    pEditableRowDisabled: boolean;\n    constructor(el: ElementRef);\n    isEnabled(): boolean;\n}\nexport declare class InitEditableRow {\n    dt: Table;\n    editableRow: EditableRow;\n    constructor(dt: Table, editableRow: EditableRow);\n    onClick(event: Event): void;\n}\nexport declare class SaveEditableRow {\n    dt: Table;\n    editableRow: EditableRow;\n    constructor(dt: Table, editableRow: EditableRow);\n    onClick(event: Event): void;\n}\nexport declare class CancelEditableRow {\n    dt: Table;\n    editableRow: EditableRow;\n    constructor(dt: Table, editableRow: EditableRow);\n    onClick(event: Event): void;\n}\nexport declare class CellEditor implements AfterContentInit {\n    dt: Table;\n    editableColumn: EditableColumn;\n    editableRow: EditableRow;\n    templates: QueryList<PrimeTemplate>;\n    inputTemplate: TemplateRef<any>;\n    outputTemplate: TemplateRef<any>;\n    constructor(dt: Table, editableColumn: EditableColumn, editableRow: EditableRow);\n    ngAfterContentInit(): void;\n    get editing(): boolean;\n}\nexport declare class TableRadioButton {\n    dt: Table;\n    tableService: TableService;\n    cd: ChangeDetectorRef;\n    disabled: boolean;\n    value: any;\n    index: number;\n    inputId: string;\n    name: string;\n    ariaLabel: string;\n    boxViewChild: ElementRef;\n    checked: boolean;\n    subscription: Subscription;\n    constructor(dt: Table, tableService: TableService, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    onClick(event: Event): void;\n    onFocus(): void;\n    onBlur(): void;\n    ngOnDestroy(): void;\n}\nexport declare class TableCheckbox {\n    dt: Table;\n    tableService: TableService;\n    cd: ChangeDetectorRef;\n    disabled: boolean;\n    value: any;\n    index: number;\n    inputId: string;\n    name: string;\n    required: boolean;\n    ariaLabel: string;\n    boxViewChild: ElementRef;\n    checked: boolean;\n    subscription: Subscription;\n    constructor(dt: Table, tableService: TableService, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    onClick(event: Event): void;\n    onFocus(): void;\n    onBlur(): void;\n    ngOnDestroy(): void;\n}\nexport declare class TableHeaderCheckbox {\n    dt: Table;\n    tableService: TableService;\n    cd: ChangeDetectorRef;\n    boxViewChild: ElementRef;\n    disabled: boolean;\n    inputId: string;\n    name: string;\n    ariaLabel: string;\n    checked: boolean;\n    selectionChangeSubscription: Subscription;\n    valueChangeSubscription: Subscription;\n    constructor(dt: Table, tableService: TableService, cd: ChangeDetectorRef);\n    ngOnInit(): void;\n    onClick(event: Event): void;\n    onFocus(): void;\n    onBlur(): void;\n    isDisabled(): boolean;\n    ngOnDestroy(): void;\n    updateCheckedState(): boolean;\n    isAllFilteredValuesChecked(): boolean;\n}\nexport declare class ReorderableRowHandle implements AfterViewInit {\n    el: ElementRef;\n    index: number;\n    constructor(el: ElementRef);\n    ngAfterViewInit(): void;\n}\nexport declare class ReorderableRow implements AfterViewInit {\n    dt: Table;\n    el: ElementRef;\n    zone: NgZone;\n    index: number;\n    pReorderableRowDisabled: boolean;\n    mouseDownListener: any;\n    dragStartListener: any;\n    dragEndListener: any;\n    dragOverListener: any;\n    dragLeaveListener: any;\n    dropListener: any;\n    constructor(dt: Table, el: ElementRef, zone: NgZone);\n    ngAfterViewInit(): void;\n    bindEvents(): void;\n    unbindEvents(): void;\n    onMouseDown(event: any): void;\n    onDragStart(event: any): void;\n    onDragEnd(event: any): void;\n    onDragOver(event: any): void;\n    onDragLeave(event: any): void;\n    isEnabled(): boolean;\n    onDrop(event: any): void;\n}\nexport declare class TableModule {\n}\n"]}