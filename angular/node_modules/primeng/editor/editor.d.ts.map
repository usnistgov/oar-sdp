{"version":3,"file":"editor.d.ts","sources":["editor.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, AfterViewInit, EventEmitter, QueryList, AfterContentInit, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const EDITOR_VALUE_ACCESSOR: any;\nexport declare class Editor implements AfterViewInit, AfterContentInit, ControlValueAccessor {\n    el: ElementRef;\n    onTextChange: EventEmitter<any>;\n    onSelectionChange: EventEmitter<any>;\n    toolbar: any;\n    style: any;\n    styleClass: string;\n    placeholder: string;\n    formats: string[];\n    modules: any;\n    bounds: any;\n    scrollingContainer: any;\n    debug: string;\n    onInit: EventEmitter<any>;\n    templates: QueryList<any>;\n    value: string;\n    _readonly: boolean;\n    onModelChange: Function;\n    onModelTouched: Function;\n    quill: any;\n    toolbarTemplate: TemplateRef<any>;\n    constructor(el: ElementRef);\n    ngAfterViewInit(): void;\n    ngAfterContentInit(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    getQuill(): any;\n    get readonly(): boolean;\n    set readonly(val: boolean);\n}\nexport declare class EditorModule {\n}\n"]}