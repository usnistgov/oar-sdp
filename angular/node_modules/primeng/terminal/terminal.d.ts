import { AfterViewInit, AfterViewChecked, OnDestroy, ElementRef } from '@angular/core';
import { TerminalService } from './terminalservice';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
export declare class Terminal implements AfterViewInit, AfterViewChecked, OnDestroy {
    el: ElementRef;
    terminalService: TerminalService;
    welcomeMessage: string;
    prompt: string;
    style: any;
    styleClass: string;
    commands: any[];
    command: string;
    container: Element;
    commandProcessed: boolean;
    subscription: Subscription;
    constructor(el: ElementRef, terminalService: TerminalService);
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    response: string;
    handleCommand(event: KeyboardEvent): void;
    focus(element: HTMLElement): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Terminal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Terminal, "p-terminal", never, { "response": "response"; "welcomeMessage": "welcomeMessage"; "prompt": "prompt"; "style": "style"; "styleClass": "styleClass"; }, {}, never, never>;
}
export declare class TerminalModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<TerminalModule, [typeof Terminal], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.FormsModule], [typeof Terminal]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<TerminalModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVybWluYWwuZC50cyIsInNvdXJjZXMiOlsidGVybWluYWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQWZ0ZXJWaWV3Q2hlY2tlZCwgT25EZXN0cm95LCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUZXJtaW5hbFNlcnZpY2UgfSBmcm9tICcuL3Rlcm1pbmFsc2VydmljZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRlcm1pbmFsIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgQWZ0ZXJWaWV3Q2hlY2tlZCwgT25EZXN0cm95IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICB0ZXJtaW5hbFNlcnZpY2U6IFRlcm1pbmFsU2VydmljZTtcbiAgICB3ZWxjb21lTWVzc2FnZTogc3RyaW5nO1xuICAgIHByb21wdDogc3RyaW5nO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGNvbW1hbmRzOiBhbnlbXTtcbiAgICBjb21tYW5kOiBzdHJpbmc7XG4gICAgY29udGFpbmVyOiBFbGVtZW50O1xuICAgIGNvbW1hbmRQcm9jZXNzZWQ6IGJvb2xlYW47XG4gICAgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHRlcm1pbmFsU2VydmljZTogVGVybWluYWxTZXJ2aWNlKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKTogdm9pZDtcbiAgICByZXNwb25zZTogc3RyaW5nO1xuICAgIGhhbmRsZUNvbW1hbmQoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIGZvY3VzKGVsZW1lbnQ6IEhUTUxFbGVtZW50KTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGVybWluYWxNb2R1bGUge1xufVxuIl19