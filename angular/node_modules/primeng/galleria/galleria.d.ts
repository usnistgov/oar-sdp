import { ElementRef, OnDestroy, EventEmitter, QueryList, TemplateRef, OnInit, OnChanges, AfterContentChecked, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class Galleria implements OnChanges, OnDestroy {
    element: ElementRef;
    activeIndex: number;
    fullScreen: boolean;
    id: string;
    value: any[];
    numVisible: number;
    responsiveOptions: any[];
    showItemNavigators: boolean;
    showThumbnailNavigators: boolean;
    showItemNavigatorsOnHover: boolean;
    changeItemOnIndicatorHover: boolean;
    circular: boolean;
    autoPlay: boolean;
    transitionInterval: number;
    showThumbnails: boolean;
    thumbnailsPosition: string;
    verticalThumbnailViewPortHeight: string;
    showIndicators: boolean;
    showIndicatorsOnItem: boolean;
    indicatorsPosition: string;
    baseZIndex: number;
    maskClass: string;
    containerClass: string;
    containerStyle: any;
    mask: ElementRef;
    visible: boolean;
    activeIndexChange: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    templates: QueryList<any>;
    _visible: boolean;
    _activeIndex: number;
    headerFacet: any;
    footerFacet: any;
    indicatorFacet: any;
    captionFacet: any;
    zIndex: string;
    constructor(element: ElementRef);
    ngAfterContentInit(): void;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    onMaskHide(): void;
    onActiveItemChange(index: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Galleria, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Galleria, "p-galleria", never, { "fullScreen": "fullScreen"; "numVisible": "numVisible"; "showItemNavigators": "showItemNavigators"; "showThumbnailNavigators": "showThumbnailNavigators"; "showItemNavigatorsOnHover": "showItemNavigatorsOnHover"; "changeItemOnIndicatorHover": "changeItemOnIndicatorHover"; "circular": "circular"; "autoPlay": "autoPlay"; "transitionInterval": "transitionInterval"; "showThumbnails": "showThumbnails"; "thumbnailsPosition": "thumbnailsPosition"; "verticalThumbnailViewPortHeight": "verticalThumbnailViewPortHeight"; "showIndicators": "showIndicators"; "showIndicatorsOnItem": "showIndicatorsOnItem"; "indicatorsPosition": "indicatorsPosition"; "baseZIndex": "baseZIndex"; "activeIndex": "activeIndex"; "visible": "visible"; "id": "id"; "value": "value"; "responsiveOptions": "responsiveOptions"; "maskClass": "maskClass"; "containerClass": "containerClass"; "containerStyle": "containerStyle"; }, { "activeIndexChange": "activeIndexChange"; "visibleChange": "visibleChange"; }, ["templates"], never>;
}
export declare class GalleriaContent {
    galleria: Galleria;
    activeIndex: number;
    maskHide: EventEmitter<any>;
    activeItemChange: EventEmitter<any>;
    id: string;
    slideShowActicve: boolean;
    _activeIndex: number;
    slideShowActive: boolean;
    interval: any;
    styleClass: string;
    constructor(galleria: Galleria);
    galleriaClass(): string;
    startSlideShow(): void;
    stopSlideShow(): void;
    getPositionClass(preClassName: any, position: any): string;
    isVertical(): boolean;
    onActiveIndexChange(index: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaContent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaContent, "p-galleriaContent", never, { "activeIndex": "activeIndex"; }, { "maskHide": "maskHide"; "activeItemChange": "activeItemChange"; }, never, never>;
}
export declare class GalleriaItemSlot {
    templates: QueryList<any>;
    index: number;
    item: any;
    type: string;
    contentTemplate: TemplateRef<any>;
    context: any;
    _item: any;
    ngAfterContentInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaItemSlot, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaItemSlot, "p-galleriaItemSlot", never, { "item": "item"; "templates": "templates"; "index": "index"; "type": "type"; }, {}, never, never>;
}
export declare class GalleriaItem implements OnInit {
    circular: boolean;
    value: any[];
    showItemNavigators: boolean;
    showIndicators: boolean;
    slideShowActive: boolean;
    changeItemOnIndicatorHover: boolean;
    autoPlay: boolean;
    templates: QueryList<any>;
    indicatorFacet: any;
    captionFacet: any;
    startSlideShow: EventEmitter<any>;
    stopSlideShow: EventEmitter<any>;
    onActiveIndexChange: EventEmitter<any>;
    activeIndex: number;
    _activeIndex: number;
    activeItem: any;
    ngOnInit(): void;
    next(): void;
    prev(): void;
    stopTheSlideShow(): void;
    navForward(e: any): void;
    navBackward(e: any): void;
    onIndicatorClick(index: any): void;
    onIndicatorMouseEnter(index: any): void;
    onIndicatorKeyDown(index: any): void;
    isNavForwardDisabled(): boolean;
    isNavBackwardDisabled(): boolean;
    isIndicatorItemActive(index: any): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaItem, "p-galleriaItem", never, { "circular": "circular"; "showItemNavigators": "showItemNavigators"; "showIndicators": "showIndicators"; "slideShowActive": "slideShowActive"; "changeItemOnIndicatorHover": "changeItemOnIndicatorHover"; "autoPlay": "autoPlay"; "activeIndex": "activeIndex"; "value": "value"; "templates": "templates"; "indicatorFacet": "indicatorFacet"; "captionFacet": "captionFacet"; }, { "startSlideShow": "startSlideShow"; "stopSlideShow": "stopSlideShow"; "onActiveIndexChange": "onActiveIndexChange"; }, never, never>;
}
export declare class GalleriaThumbnails implements OnInit, AfterContentChecked, OnDestroy {
    containerId: string;
    value: any[];
    isVertical: boolean;
    slideShowActive: boolean;
    circular: boolean;
    responsiveOptions: any[];
    contentHeight: string;
    showThumbnailNavigators: boolean;
    templates: QueryList<any>;
    onActiveIndexChange: EventEmitter<any>;
    stopSlideShow: EventEmitter<any>;
    itemsContainer: ElementRef;
    numVisible: number;
    activeIndex: number;
    index: number;
    startPos: any;
    thumbnailsStyle: any;
    sortedResponsiveOptions: any;
    totalShiftedItems: number;
    page: number;
    documentResizeListener: any;
    _numVisible: number;
    d_numVisible: number;
    _oldNumVisible: number;
    _activeIndex: number;
    _oldactiveIndex: number;
    ngOnInit(): void;
    ngAfterContentChecked(): void;
    createStyle(): void;
    calculatePosition(): void;
    getTabIndex(index: any): number;
    navForward(e: any): void;
    navBackward(e: any): void;
    onItemClick(index: any): void;
    step(dir: any): void;
    stopTheSlideShow(): void;
    changePageOnTouch(e: any, diff: any): void;
    getTotalPageNumber(): number;
    getMedianItemIndex(): number;
    onTransitionEnd(): void;
    onTouchEnd(e: any): void;
    onTouchMove(e: any): void;
    onTouchStart(e: any): void;
    isNavBackwardDisabled(): boolean;
    isNavForwardDisabled(): boolean;
    firstItemAciveIndex(): number;
    lastItemActiveIndex(): number;
    isItemActive(index: any): boolean;
    bindDocumentListeners(): void;
    unbindDocumentListeners(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<GalleriaThumbnails, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<GalleriaThumbnails, "p-galleriaThumbnails", never, { "isVertical": "isVertical"; "slideShowActive": "slideShowActive"; "circular": "circular"; "contentHeight": "contentHeight"; "showThumbnailNavigators": "showThumbnailNavigators"; "numVisible": "numVisible"; "activeIndex": "activeIndex"; "containerId": "containerId"; "value": "value"; "responsiveOptions": "responsiveOptions"; "templates": "templates"; }, { "onActiveIndexChange": "onActiveIndexChange"; "stopSlideShow": "stopSlideShow"; }, never, never>;
}
export declare class GalleriaModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<GalleriaModule, [typeof Galleria, typeof GalleriaContent, typeof GalleriaItemSlot, typeof GalleriaItem, typeof GalleriaThumbnails], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.SharedModule], [typeof ɵngcc1.CommonModule, typeof Galleria, typeof GalleriaContent, typeof GalleriaItemSlot, typeof GalleriaItem, typeof GalleriaThumbnails, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<GalleriaModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyaWEuZC50cyIsInNvdXJjZXMiOlsiZ2FsbGVyaWEuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTs7Ozs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOEJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcURBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgT25Jbml0LCBPbkNoYW5nZXMsIEFmdGVyQ29udGVudENoZWNrZWQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdhbGxlcmlhIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgYWN0aXZlSW5kZXg6IG51bWJlcjtcbiAgICBmdWxsU2NyZWVuOiBib29sZWFuO1xuICAgIGlkOiBzdHJpbmc7XG4gICAgdmFsdWU6IGFueVtdO1xuICAgIG51bVZpc2libGU6IG51bWJlcjtcbiAgICByZXNwb25zaXZlT3B0aW9uczogYW55W107XG4gICAgc2hvd0l0ZW1OYXZpZ2F0b3JzOiBib29sZWFuO1xuICAgIHNob3dUaHVtYm5haWxOYXZpZ2F0b3JzOiBib29sZWFuO1xuICAgIHNob3dJdGVtTmF2aWdhdG9yc09uSG92ZXI6IGJvb2xlYW47XG4gICAgY2hhbmdlSXRlbU9uSW5kaWNhdG9ySG92ZXI6IGJvb2xlYW47XG4gICAgY2lyY3VsYXI6IGJvb2xlYW47XG4gICAgYXV0b1BsYXk6IGJvb2xlYW47XG4gICAgdHJhbnNpdGlvbkludGVydmFsOiBudW1iZXI7XG4gICAgc2hvd1RodW1ibmFpbHM6IGJvb2xlYW47XG4gICAgdGh1bWJuYWlsc1Bvc2l0aW9uOiBzdHJpbmc7XG4gICAgdmVydGljYWxUaHVtYm5haWxWaWV3UG9ydEhlaWdodDogc3RyaW5nO1xuICAgIHNob3dJbmRpY2F0b3JzOiBib29sZWFuO1xuICAgIHNob3dJbmRpY2F0b3JzT25JdGVtOiBib29sZWFuO1xuICAgIGluZGljYXRvcnNQb3NpdGlvbjogc3RyaW5nO1xuICAgIGJhc2VaSW5kZXg6IG51bWJlcjtcbiAgICBtYXNrQ2xhc3M6IHN0cmluZztcbiAgICBjb250YWluZXJDbGFzczogc3RyaW5nO1xuICAgIGNvbnRhaW5lclN0eWxlOiBhbnk7XG4gICAgbWFzazogRWxlbWVudFJlZjtcbiAgICB2aXNpYmxlOiBib29sZWFuO1xuICAgIGFjdGl2ZUluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB2aXNpYmxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIF92aXNpYmxlOiBib29sZWFuO1xuICAgIF9hY3RpdmVJbmRleDogbnVtYmVyO1xuICAgIGhlYWRlckZhY2V0OiBhbnk7XG4gICAgZm9vdGVyRmFjZXQ6IGFueTtcbiAgICBpbmRpY2F0b3JGYWNldDogYW55O1xuICAgIGNhcHRpb25GYWNldDogYW55O1xuICAgIHpJbmRleDogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKHNpbXBsZUNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xuICAgIG9uTWFza0hpZGUoKTogdm9pZDtcbiAgICBvbkFjdGl2ZUl0ZW1DaGFuZ2UoaW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEdhbGxlcmlhQ29udGVudCB7XG4gICAgZ2FsbGVyaWE6IEdhbGxlcmlhO1xuICAgIGFjdGl2ZUluZGV4OiBudW1iZXI7XG4gICAgbWFza0hpZGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGFjdGl2ZUl0ZW1DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGlkOiBzdHJpbmc7XG4gICAgc2xpZGVTaG93QWN0aWN2ZTogYm9vbGVhbjtcbiAgICBfYWN0aXZlSW5kZXg6IG51bWJlcjtcbiAgICBzbGlkZVNob3dBY3RpdmU6IGJvb2xlYW47XG4gICAgaW50ZXJ2YWw6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZ2FsbGVyaWE6IEdhbGxlcmlhKTtcbiAgICBnYWxsZXJpYUNsYXNzKCk6IHN0cmluZztcbiAgICBzdGFydFNsaWRlU2hvdygpOiB2b2lkO1xuICAgIHN0b3BTbGlkZVNob3coKTogdm9pZDtcbiAgICBnZXRQb3NpdGlvbkNsYXNzKHByZUNsYXNzTmFtZTogYW55LCBwb3NpdGlvbjogYW55KTogc3RyaW5nO1xuICAgIGlzVmVydGljYWwoKTogYm9vbGVhbjtcbiAgICBvbkFjdGl2ZUluZGV4Q2hhbmdlKGluZGV4OiBhbnkpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR2FsbGVyaWFJdGVtU2xvdCB7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIGl0ZW06IGFueTtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGNvbnRleHQ6IGFueTtcbiAgICBfaXRlbTogYW55O1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR2FsbGVyaWFJdGVtIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBjaXJjdWxhcjogYm9vbGVhbjtcbiAgICB2YWx1ZTogYW55W107XG4gICAgc2hvd0l0ZW1OYXZpZ2F0b3JzOiBib29sZWFuO1xuICAgIHNob3dJbmRpY2F0b3JzOiBib29sZWFuO1xuICAgIHNsaWRlU2hvd0FjdGl2ZTogYm9vbGVhbjtcbiAgICBjaGFuZ2VJdGVtT25JbmRpY2F0b3JIb3ZlcjogYm9vbGVhbjtcbiAgICBhdXRvUGxheTogYm9vbGVhbjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIGluZGljYXRvckZhY2V0OiBhbnk7XG4gICAgY2FwdGlvbkZhY2V0OiBhbnk7XG4gICAgc3RhcnRTbGlkZVNob3c6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHN0b3BTbGlkZVNob3c6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uQWN0aXZlSW5kZXhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGFjdGl2ZUluZGV4OiBudW1iZXI7XG4gICAgX2FjdGl2ZUluZGV4OiBudW1iZXI7XG4gICAgYWN0aXZlSXRlbTogYW55O1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmV4dCgpOiB2b2lkO1xuICAgIHByZXYoKTogdm9pZDtcbiAgICBzdG9wVGhlU2xpZGVTaG93KCk6IHZvaWQ7XG4gICAgbmF2Rm9yd2FyZChlOiBhbnkpOiB2b2lkO1xuICAgIG5hdkJhY2t3YXJkKGU6IGFueSk6IHZvaWQ7XG4gICAgb25JbmRpY2F0b3JDbGljayhpbmRleDogYW55KTogdm9pZDtcbiAgICBvbkluZGljYXRvck1vdXNlRW50ZXIoaW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgb25JbmRpY2F0b3JLZXlEb3duKGluZGV4OiBhbnkpOiB2b2lkO1xuICAgIGlzTmF2Rm9yd2FyZERpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgaXNOYXZCYWNrd2FyZERpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgaXNJbmRpY2F0b3JJdGVtQWN0aXZlKGluZGV4OiBhbnkpOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR2FsbGVyaWFUaHVtYm5haWxzIGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRDaGVja2VkLCBPbkRlc3Ryb3kge1xuICAgIGNvbnRhaW5lcklkOiBzdHJpbmc7XG4gICAgdmFsdWU6IGFueVtdO1xuICAgIGlzVmVydGljYWw6IGJvb2xlYW47XG4gICAgc2xpZGVTaG93QWN0aXZlOiBib29sZWFuO1xuICAgIGNpcmN1bGFyOiBib29sZWFuO1xuICAgIHJlc3BvbnNpdmVPcHRpb25zOiBhbnlbXTtcbiAgICBjb250ZW50SGVpZ2h0OiBzdHJpbmc7XG4gICAgc2hvd1RodW1ibmFpbE5hdmlnYXRvcnM6IGJvb2xlYW47XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBvbkFjdGl2ZUluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBzdG9wU2xpZGVTaG93OiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpdGVtc0NvbnRhaW5lcjogRWxlbWVudFJlZjtcbiAgICBudW1WaXNpYmxlOiBudW1iZXI7XG4gICAgYWN0aXZlSW5kZXg6IG51bWJlcjtcbiAgICBpbmRleDogbnVtYmVyO1xuICAgIHN0YXJ0UG9zOiBhbnk7XG4gICAgdGh1bWJuYWlsc1N0eWxlOiBhbnk7XG4gICAgc29ydGVkUmVzcG9uc2l2ZU9wdGlvbnM6IGFueTtcbiAgICB0b3RhbFNoaWZ0ZWRJdGVtczogbnVtYmVyO1xuICAgIHBhZ2U6IG51bWJlcjtcbiAgICBkb2N1bWVudFJlc2l6ZUxpc3RlbmVyOiBhbnk7XG4gICAgX251bVZpc2libGU6IG51bWJlcjtcbiAgICBkX251bVZpc2libGU6IG51bWJlcjtcbiAgICBfb2xkTnVtVmlzaWJsZTogbnVtYmVyO1xuICAgIF9hY3RpdmVJbmRleDogbnVtYmVyO1xuICAgIF9vbGRhY3RpdmVJbmRleDogbnVtYmVyO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlckNvbnRlbnRDaGVja2VkKCk6IHZvaWQ7XG4gICAgY3JlYXRlU3R5bGUoKTogdm9pZDtcbiAgICBjYWxjdWxhdGVQb3NpdGlvbigpOiB2b2lkO1xuICAgIGdldFRhYkluZGV4KGluZGV4OiBhbnkpOiBudW1iZXI7XG4gICAgbmF2Rm9yd2FyZChlOiBhbnkpOiB2b2lkO1xuICAgIG5hdkJhY2t3YXJkKGU6IGFueSk6IHZvaWQ7XG4gICAgb25JdGVtQ2xpY2soaW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgc3RlcChkaXI6IGFueSk6IHZvaWQ7XG4gICAgc3RvcFRoZVNsaWRlU2hvdygpOiB2b2lkO1xuICAgIGNoYW5nZVBhZ2VPblRvdWNoKGU6IGFueSwgZGlmZjogYW55KTogdm9pZDtcbiAgICBnZXRUb3RhbFBhZ2VOdW1iZXIoKTogbnVtYmVyO1xuICAgIGdldE1lZGlhbkl0ZW1JbmRleCgpOiBudW1iZXI7XG4gICAgb25UcmFuc2l0aW9uRW5kKCk6IHZvaWQ7XG4gICAgb25Ub3VjaEVuZChlOiBhbnkpOiB2b2lkO1xuICAgIG9uVG91Y2hNb3ZlKGU6IGFueSk6IHZvaWQ7XG4gICAgb25Ub3VjaFN0YXJ0KGU6IGFueSk6IHZvaWQ7XG4gICAgaXNOYXZCYWNrd2FyZERpc2FibGVkKCk6IGJvb2xlYW47XG4gICAgaXNOYXZGb3J3YXJkRGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBmaXJzdEl0ZW1BY2l2ZUluZGV4KCk6IG51bWJlcjtcbiAgICBsYXN0SXRlbUFjdGl2ZUluZGV4KCk6IG51bWJlcjtcbiAgICBpc0l0ZW1BY3RpdmUoaW5kZXg6IGFueSk6IGJvb2xlYW47XG4gICAgYmluZERvY3VtZW50TGlzdGVuZXJzKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRMaXN0ZW5lcnMoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgR2FsbGVyaWFNb2R1bGUge1xufVxuIl19