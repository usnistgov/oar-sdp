{"version":3,"file":"galleria.d.ts","sources":["galleria.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnDestroy, EventEmitter, QueryList, TemplateRef, OnInit, OnChanges, AfterContentChecked, SimpleChanges, ChangeDetectorRef } from '@angular/core';\nexport declare class Galleria implements OnChanges, OnDestroy {\n    element: ElementRef;\n    cd: ChangeDetectorRef;\n    get activeIndex(): number;\n    set activeIndex(activeIndex: number);\n    fullScreen: boolean;\n    id: string;\n    value: any[];\n    numVisible: number;\n    responsiveOptions: any[];\n    showItemNavigators: boolean;\n    showThumbnailNavigators: boolean;\n    showItemNavigatorsOnHover: boolean;\n    changeItemOnIndicatorHover: boolean;\n    circular: boolean;\n    autoPlay: boolean;\n    transitionInterval: number;\n    showThumbnails: boolean;\n    thumbnailsPosition: string;\n    verticalThumbnailViewPortHeight: string;\n    showIndicators: boolean;\n    showIndicatorsOnItem: boolean;\n    indicatorsPosition: string;\n    baseZIndex: number;\n    maskClass: string;\n    containerClass: string;\n    containerStyle: any;\n    mask: ElementRef;\n    get visible(): boolean;\n    set visible(visible: boolean);\n    activeIndexChange: EventEmitter<any>;\n    visibleChange: EventEmitter<any>;\n    templates: QueryList<any>;\n    _visible: boolean;\n    _activeIndex: number;\n    headerFacet: any;\n    footerFacet: any;\n    indicatorFacet: any;\n    captionFacet: any;\n    zIndex: string;\n    constructor(element: ElementRef, cd: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    ngOnChanges(simpleChanges: SimpleChanges): void;\n    onMaskHide(): void;\n    onActiveItemChange(index: any): void;\n    ngOnDestroy(): void;\n}\nexport declare class GalleriaContent {\n    galleria: Galleria;\n    cd: ChangeDetectorRef;\n    get activeIndex(): number;\n    set activeIndex(activeIndex: number);\n    value: any[];\n    maskHide: EventEmitter<any>;\n    activeItemChange: EventEmitter<any>;\n    id: string;\n    slideShowActicve: boolean;\n    _activeIndex: number;\n    slideShowActive: boolean;\n    interval: any;\n    styleClass: string;\n    constructor(galleria: Galleria, cd: ChangeDetectorRef);\n    galleriaClass(): string;\n    startSlideShow(): void;\n    stopSlideShow(): void;\n    getPositionClass(preClassName: any, position: any): string;\n    isVertical(): boolean;\n    onActiveIndexChange(index: any): void;\n}\nexport declare class GalleriaItemSlot {\n    templates: QueryList<any>;\n    index: number;\n    get item(): any;\n    set item(item: any);\n    type: string;\n    contentTemplate: TemplateRef<any>;\n    context: any;\n    _item: any;\n    ngAfterContentInit(): void;\n}\nexport declare class GalleriaItem implements OnInit {\n    circular: boolean;\n    value: any[];\n    showItemNavigators: boolean;\n    showIndicators: boolean;\n    slideShowActive: boolean;\n    changeItemOnIndicatorHover: boolean;\n    autoPlay: boolean;\n    templates: QueryList<any>;\n    indicatorFacet: any;\n    captionFacet: any;\n    startSlideShow: EventEmitter<any>;\n    stopSlideShow: EventEmitter<any>;\n    onActiveIndexChange: EventEmitter<any>;\n    get activeIndex(): number;\n    set activeIndex(activeIndex: number);\n    _activeIndex: number;\n    activeItem: any;\n    ngOnInit(): void;\n    next(): void;\n    prev(): void;\n    stopTheSlideShow(): void;\n    navForward(e: any): void;\n    navBackward(e: any): void;\n    onIndicatorClick(index: any): void;\n    onIndicatorMouseEnter(index: any): void;\n    onIndicatorKeyDown(index: any): void;\n    isNavForwardDisabled(): boolean;\n    isNavBackwardDisabled(): boolean;\n    isIndicatorItemActive(index: any): boolean;\n}\nexport declare class GalleriaThumbnails implements OnInit, AfterContentChecked, OnDestroy {\n    containerId: string;\n    value: any[];\n    isVertical: boolean;\n    slideShowActive: boolean;\n    circular: boolean;\n    responsiveOptions: any[];\n    contentHeight: string;\n    showThumbnailNavigators: boolean;\n    templates: QueryList<any>;\n    onActiveIndexChange: EventEmitter<any>;\n    stopSlideShow: EventEmitter<any>;\n    itemsContainer: ElementRef;\n    get numVisible(): number;\n    set numVisible(numVisible: number);\n    get activeIndex(): number;\n    set activeIndex(activeIndex: number);\n    index: number;\n    startPos: any;\n    thumbnailsStyle: any;\n    sortedResponsiveOptions: any;\n    totalShiftedItems: number;\n    page: number;\n    documentResizeListener: any;\n    _numVisible: number;\n    d_numVisible: number;\n    _oldNumVisible: number;\n    _activeIndex: number;\n    _oldactiveIndex: number;\n    ngOnInit(): void;\n    ngAfterContentChecked(): void;\n    createStyle(): void;\n    calculatePosition(): void;\n    getTabIndex(index: any): number;\n    navForward(e: any): void;\n    navBackward(e: any): void;\n    onItemClick(index: any): void;\n    step(dir: any): void;\n    stopTheSlideShow(): void;\n    changePageOnTouch(e: any, diff: any): void;\n    getTotalPageNumber(): number;\n    getMedianItemIndex(): number;\n    onTransitionEnd(): void;\n    onTouchEnd(e: any): void;\n    onTouchMove(e: any): void;\n    onTouchStart(e: any): void;\n    isNavBackwardDisabled(): boolean;\n    isNavForwardDisabled(): boolean;\n    firstItemAciveIndex(): number;\n    lastItemActiveIndex(): number;\n    isItemActive(index: any): boolean;\n    bindDocumentListeners(): void;\n    unbindDocumentListeners(): void;\n    ngOnDestroy(): void;\n}\nexport declare class GalleriaModule {\n}\n"]}