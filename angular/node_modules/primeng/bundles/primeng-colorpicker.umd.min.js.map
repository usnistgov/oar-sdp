{"version":3,"sources":["../../src/app/components/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","value","validateHSB","h","Math","floor","max","min","pageY","s","b","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","colorDragging","pickColor","rect","left","scrollLeft","saturation","pageX","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","markForCheck","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","bindDocumentResizeListener","bindScrollListener","onOverlayHide","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","preventDefault","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","documentTarget","ownerDocument","listen","unbindDocumentClickListener","documentMousemoveListener","unbindDocumentMousemoveListener","documentMouseupListener","unbindDocumentMouseupListener","documentResizeListener","onWindowResize","bind","addEventListener","unbindDocumentResizeListener","removeEventListener","scrollHandler","ConnectedOverlayScrollHandler","containerViewChild","unbindScrollListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","destroy","Component","args","selector","template","animations","trigger","transition","opacity","transform","animate","providers","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ChangeDetectorRef","Input","Output","ViewChild","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'p-colorpicker p-component':true,'p-colorpicker-overlay':!inline,'p-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"p-colorpicker-preview p-inputtext\" readonly=\"readonly\" [ngClass]=\"{'p-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'p-colorpicker-panel': true, 'p-colorpicker-overlay-panel':!inline, 'p-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <div class=\"p-colorpicker-content\">\n                    <div #colorSelector class=\"p-colorpicker-color-selector\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"p-colorpicker-color\">\n                            <div #colorHandle class=\"p-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"p-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\">\n                        <div #hueHandle class=\"p-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            transition(':enter', [\n                style({opacity: 0, transform: 'scaleY(0.8)'}),\n                animate('{{showTransitionParams}}')\n              ]),\n              transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n              ])\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./colorpicker.css']\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inline: boolean;\n\n    @Input() format: string = 'hex';\n\n    @Input() appendTo: string;\n\n    @Input() disabled: boolean;\n\n    @Input() tabindex: string;\n\n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() hideTransitionOptions: string = '.1s linear';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container') containerViewChild: ElementRef;\n\n    @ViewChild('input') inputViewChild: ElementRef;\n\n    value: any;\n\n    inputBgColor: string;\n\n    shown: boolean;\n\n    overlayVisible: boolean;\n\n    defaultColor: string = 'ff0000';\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    documentClickListener: Function;\n\n    documentResizeListener: any;\n\n    documentMousemoveListener: Function;\n\n    documentMouseupListener: Function;\n\n    documentHueMoveListener: Function;\n\n    scrollHandler: any;\n\n    selfClick: boolean;\n\n    colorDragging: boolean;\n\n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n\n    colorHandleViewChild: ElementRef;\n\n    hueViewChild: ElementRef;\n\n    hueHandleViewChild: ElementRef;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n\n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n\n    pickHue(event: MouseEvent) {\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n\n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n\n    pickColor(event: MouseEvent) {\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, (event.pageX - left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n\n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n\n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n\n            case 'hsb':\n                val = this.value;\n            break;\n        }\n\n        return val;\n    }\n\n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n\n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n\n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n\n        this.updateColorSelector();\n        this.updateUI();\n        this.cd.markForCheck();\n    }\n\n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n\n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n\n    onInputFocus() {\n        this.onModelTouched();\n    }\n\n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n                    this.bindDocumentResizeListener();\n                    this.bindScrollListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n\n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n\n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n\n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n\n    onPanelClick() {\n        this.selfClick = true;\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n\n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n\n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMousemoveListener = this.renderer.listen(documentTarget, 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n\n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n\n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n\n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\n\n            this.documentMouseupListener = this.renderer.listen(documentTarget, 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n\n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n\n    onWindowResize() {\n        this.hide();\n    }\n\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.scrollHandler.bindScrollListener();\n    }\n\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n\n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n\n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n\n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n\n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n\n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n\n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        }\n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n\n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n\n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }\n\n        return hex.join('');\n    }\n\n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindScrollListener();\n        this.unbindDocumentResizeListener();\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n\n    ngOnDestroy() {\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}