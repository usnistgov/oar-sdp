{"version":3,"sources":["ng://primeng/colorpicker/colorpicker.ts"],"names":["COLORPICKER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPicker","multi","el","renderer","cd","this","format","autoZIndex","baseZIndex","showTransitionOptions","hideTransitionOptions","onChange","EventEmitter","defaultColor","onModelChange","onModelTouched","Object","defineProperty","prototype","element","colorSelectorViewChild","colorHandleViewChild","hueViewChild","hueHandleViewChild","onHueMousedown","event","disabled","bindDocumentMousemoveListener","bindDocumentMouseupListener","hueDragging","pickHue","top","nativeElement","getBoundingClientRect","window","pageYOffset","document","documentElement","scrollTop","body","value","validateHSB","h","Math","floor","max","min","pageY","s","b","updateColorSelector","updateUI","updateModel","emit","originalEvent","getValueToUpdate","onColorMousedown","colorDragging","pickColor","rect","left","scrollLeft","saturation","pageX","brightness","val","HSBtoHEX","HSBtoRGB","writeValue","HEXtoHSB","RGBtoHSB","hsb","style","backgroundColor","inputBgColor","onInputFocus","show","overlayVisible","onOverlayAnimationStart","toState","inline","overlay","appendOverlay","zIndex","String","DomHandler","zindex","alignOverlay","bindDocumentClickListener","onOverlayHide","appendTo","appendChild","restoreOverlayAppend","absolutePosition","inputViewChild","relativePosition","hide","onInputClick","selfClick","togglePanel","onInputKeydown","which","preventDefault","onPanelClick","registerOnChange","fn","registerOnTouched","setDisabledState","_this","documentClickListener","listen","unbindDocumentClickListener","markForCheck","documentMousemoveListener","unbindDocumentMousemoveListener","documentMouseupListener","unbindDocumentMouseupListener","validateRGB","rgb","r","g","validateHEX","hex","len","length","o","i","push","join","HEXtoRGB","hexValue","parseInt","indexOf","substring","delta","v","t1","t2","t3","round","RGBtoHEX","toString","key","ngOnDestroy","ElementRef","Renderer2","ChangeDetectorRef","__decorate","Input","Output","ViewChild","Component","selector","template","animations","trigger","state","transform","opacity","transition","animate","providers","changeDetection","ChangeDetectionStrategy","Default","ColorPickerModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, Input, Output, OnDestroy, EventEmitter, forwardRef, Renderer2, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { trigger, state, style, transition, animate, AnimationEvent } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport const COLORPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPicker),\n    multi: true\n};\n\n@Component({\n    selector: 'p-colorPicker',\n    template: `\n        <div [ngStyle]=\"style\" [class]=\"styleClass\" [ngClass]=\"{'ui-colorpicker ui-widget':true,'ui-colorpicker-overlay':!inline,'ui-colorpicker-dragging':colorDragging||hueDragging}\">\n            <input #input type=\"text\" *ngIf=\"!inline\" class=\"ui-colorpicker-preview ui-inputtext ui-state-default ui-corner-all\" readonly=\"readonly\" [ngClass]=\"{'ui-state-disabled': disabled}\"\n                (focus)=\"onInputFocus()\" (click)=\"onInputClick()\" (keydown)=\"onInputKeydown($event)\" [attr.id]=\"inputId\" [attr.tabindex]=\"tabindex\" [disabled]=\"disabled\"\n                [style.backgroundColor]=\"inputBgColor\">\n            <div *ngIf=\"inline || overlayVisible\" [ngClass]=\"{'ui-colorpicker-panel ui-corner-all': true, 'ui-colorpicker-overlay-panel ui-shadow':!inline, 'ui-state-disabled': disabled}\" (click)=\"onPanelClick()\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" [@.disabled]=\"inline === true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <div class=\"ui-colorpicker-content\">\n                    <div #colorSelector class=\"ui-colorpicker-color-selector\" (mousedown)=\"onColorMousedown($event)\">\n                        <div class=\"ui-colorpicker-color\">\n                            <div #colorHandle class=\"ui-colorpicker-color-handle\"></div>\n                        </div>\n                    </div>\n                    <div #hue class=\"ui-colorpicker-hue\" (mousedown)=\"onHueMousedown($event)\">\n                        <div #hueHandle class=\"ui-colorpicker-hue-handle\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('overlayAnimation', [\n            state('void', style({\n                transform: 'translateY(5%)',\n                opacity: 0\n            })),\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => visible', animate('{{showTransitionParams}}')),\n            transition('visible => void', animate('{{hideTransitionParams}}'))\n        ])\n    ],\n    providers: [COLORPICKER_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ColorPicker implements ControlValueAccessor, OnDestroy {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n    \n    @Input() inline: boolean;\n    \n    @Input() format: string = 'hex';\n    \n    @Input() appendTo: string;\n    \n    @Input() disabled: boolean;\n    \n    @Input() tabindex: string;\n    \n    @Input() inputId: string;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n\n    @Input() showTransitionOptions: string = '225ms ease-out';\n\n    @Input() hideTransitionOptions: string = '195ms ease-in';\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('input') inputViewChild: ElementRef;\n    \n    value: any;\n    \n    inputBgColor: string;\n    \n    shown: boolean;\n    \n    overlayVisible: boolean;\n    \n    defaultColor: string = 'ff0000';\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    documentClickListener: Function;\n    \n    documentMousemoveListener: Function;\n    \n    documentMouseupListener: Function;\n    \n    documentHueMoveListener: Function;\n                \n    selfClick: boolean;\n    \n    colorDragging: boolean;\n    \n    hueDragging: boolean;\n\n    overlay: HTMLDivElement;\n\n    colorSelectorViewChild: ElementRef;\n    \n    colorHandleViewChild: ElementRef;\n    \n    hueViewChild: ElementRef;\n    \n    hueHandleViewChild: ElementRef;\n                \n    constructor(public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\n        \n    @ViewChild('colorSelector') set colorSelector(element: ElementRef) {\n        this.colorSelectorViewChild = element;\n    }\n\n    @ViewChild('colorHandle') set colorHandle(element: ElementRef) {\n        this.colorHandleViewChild = element;\n    }\n\n    @ViewChild('hue') set hue(element: ElementRef) {\n        this.hueViewChild = element;\n    }\n\n    @ViewChild('hueHandle') set hueHandle(element: ElementRef) {\n        this.hueHandleViewChild = element;\n    }\n\n    onHueMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        \n        this.hueDragging = true;\n        this.pickHue(event);\n    }\n    \n    pickHue(event: MouseEvent) {\n        let top: number = this.hueViewChild.nativeElement.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        this.value = this.validateHSB({\n            h: Math.floor(360 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150),\n            s: this.value.s,\n            b: this.value.b\n        });\n        \n        this.updateColorSelector();\n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n    \n    onColorMousedown(event: MouseEvent) {\n        if (this.disabled) {\n            return;\n        }\n        \n        this.bindDocumentMousemoveListener();\n        this.bindDocumentMouseupListener();\n        \n        this.colorDragging = true;\n        this.pickColor(event);\n    }\n    \n    pickColor(event: MouseEvent) {\n        let rect = this.colorSelectorViewChild.nativeElement.getBoundingClientRect();\n        let top = rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\n        let left = rect.left + document.body.scrollLeft;\n        let saturation = Math.floor(100 * (Math.max(0, Math.min(150, (event.pageX - left)))) / 150);\n        let brightness = Math.floor(100 * (150 - Math.max(0, Math.min(150, (event.pageY - top)))) / 150);\n        this.value = this.validateHSB({\n            h: this.value.h,\n            s: saturation,\n            b: brightness\n        });\n        \n        this.updateUI();\n        this.updateModel();\n        this.onChange.emit({originalEvent: event, value: this.getValueToUpdate()});\n    }\n    \n    getValueToUpdate() {\n        let val: any;\n        switch(this.format) {\n            case 'hex':\n                val = '#' + this.HSBtoHEX(this.value);\n            break;\n            \n            case 'rgb':\n                val = this.HSBtoRGB(this.value);\n            break;\n            \n            case 'hsb':\n                val = this.value;\n            break;\n        }\n        \n        return val;\n    }\n    \n    updateModel(): void {\n        this.onModelChange(this.getValueToUpdate());\n    }\n\n    writeValue(value: any): void {\n        if (value) {\n            switch(this.format) {\n                case 'hex':\n                    this.value = this.HEXtoHSB(value);\n                break;\n                \n                case 'rgb':\n                    this.value = this.RGBtoHSB(value);\n                break;\n                \n                case 'hsb':\n                    this.value = value;\n                break;\n            }\n        }\n        else {\n            this.value = this.HEXtoHSB(this.defaultColor);\n        }\n        \n        this.updateColorSelector();\n        this.updateUI();\n    }\n    \n    updateColorSelector() {\n        if (this.colorSelectorViewChild) {\n            const hsb: any = {};\n            hsb.s = 100;\n            hsb.b = 100;\n            hsb.h = this.value.h;\n\n            this.colorSelectorViewChild.nativeElement.style.backgroundColor = '#' + this.HSBtoHEX(hsb);\n        }\n    }\n        \n    updateUI() {\n        if (this.colorHandleViewChild && this.hueHandleViewChild.nativeElement) {\n            this.colorHandleViewChild.nativeElement.style.left =  Math.floor(150 * this.value.s / 100) + 'px';\n            this.colorHandleViewChild.nativeElement.style.top =  Math.floor(150 * (100 - this.value.b) / 100) + 'px';\n            this.hueHandleViewChild.nativeElement.style.top = Math.floor(150 - (150 * this.value.h / 360)) + 'px';\n\n        }\n\n        this.inputBgColor = '#' + this.HSBtoHEX(this.value);\n    }\n    \n    onInputFocus() {\n        this.onModelTouched();\n    }\n    \n    show() {\n        this.overlayVisible = true;\n    }\n\n    onOverlayAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                if (!this.inline) {\n                    this.overlay = event.element;\n                    this.appendOverlay();\n                    if (this.autoZIndex) {\n                        this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                    }\n                    this.alignOverlay();\n                    this.bindDocumentClickListener();\n\n                    this.updateColorSelector();\n                    this.updateUI();\n                }\n            break;\n\n            case 'void':\n                this.onOverlayHide();\n            break;\n        }\n    }\n\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n        }\n    }\n\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    \n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, this.inputViewChild.nativeElement);\n        else\n            DomHandler.relativePosition(this.overlay, this.inputViewChild.nativeElement);\n    }\n    \n    hide() {\n        this.overlayVisible = false;\n    }\n         \n    onInputClick() {\n        this.selfClick = true;\n        this.togglePanel();\n    }\n    \n    togglePanel() {\n        if (!this.overlayVisible)\n            this.show();\n        else\n            this.hide();\n    }\n    \n    onInputKeydown(event: KeyboardEvent) {\n        switch(event.which) {\n            //space\n            case 32:\n                this.togglePanel();\n                event.preventDefault();\n            break;\n                        \n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n            break;\n        }\n    }\n        \n    onPanelClick() {\n        this.selfClick = true;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', () => {\n                if (!this.selfClick) {\n                    this.overlayVisible = false;\n                    this.unbindDocumentClickListener();\n                }\n                \n                this.selfClick = false;\n                this.cd.markForCheck();\n            });\n        }    \n    }\n    \n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    \n    bindDocumentMousemoveListener() {\n        if (!this.documentMousemoveListener) {\n            this.documentMousemoveListener = this.renderer.listen('document', 'mousemove', (event: MouseEvent) => {\n                if (this.colorDragging) {\n                    this.pickColor(event);\n                }\n                \n                if (this.hueDragging) {\n                    this.pickHue(event);\n                }\n            });\n        }\n    }\n    \n    unbindDocumentMousemoveListener() {\n        if (this.documentMousemoveListener) {\n            this.documentMousemoveListener();\n            this.documentMousemoveListener = null;\n        }\n    }\n    \n    bindDocumentMouseupListener() {\n        if (!this.documentMouseupListener) {\n            this.documentMouseupListener = this.renderer.listen('document', 'mouseup', () => {\n                this.colorDragging = false;\n                this.hueDragging = false;\n                this.unbindDocumentMousemoveListener();\n                this.unbindDocumentMouseupListener();\n            });\n        }\n    }\n    \n    unbindDocumentMouseupListener() {\n        if (this.documentMouseupListener) {\n            this.documentMouseupListener();\n            this.documentMouseupListener = null;\n        }\n    }\n\n    validateHSB(hsb) {\n        return {\n            h: Math.min(360, Math.max(0, hsb.h)),\n            s: Math.min(100, Math.max(0, hsb.s)),\n            b: Math.min(100, Math.max(0, hsb.b))\n        };\n    }\n    \n    validateRGB(rgb) {\n        return {\n            r: Math.min(255, Math.max(0, rgb.r)),\n            g: Math.min(255, Math.max(0, rgb.g)),\n            b: Math.min(255, Math.max(0, rgb.b))\n        };\n    }\n    \n    validateHEX(hex) {\n        var len = 6 - hex.length;\n        if (len > 0) {\n            var o = [];\n            for (var i=0; i<len; i++) {\n                o.push('0');\n            }\n            o.push(hex);\n            hex = o.join('');\n        }\n        return hex;\n    }\n    \n    HEXtoRGB(hex) {\n        let hexValue = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n        return {r: hexValue >> 16, g: (hexValue & 0x00FF00) >> 8, b: (hexValue & 0x0000FF)};\n    }\n    \n    HEXtoHSB(hex) {\n        return this.RGBtoHSB(this.HEXtoRGB(hex));\n    }\n    \n    RGBtoHSB(rgb) {\n        var hsb = {\n            h: 0,\n            s: 0,\n            b: 0\n        };\n        var min = Math.min(rgb.r, rgb.g, rgb.b);\n        var max = Math.max(rgb.r, rgb.g, rgb.b);\n        var delta = max - min;\n        hsb.b = max;\n        hsb.s = max != 0 ? 255 * delta / max : 0;\n        if (hsb.s != 0) {\n            if (rgb.r == max) {\n                hsb.h = (rgb.g - rgb.b) / delta;\n            } else if (rgb.g == max) {\n                hsb.h = 2 + (rgb.b - rgb.r) / delta;\n            } else {\n                hsb.h = 4 + (rgb.r - rgb.g) / delta;\n            }\n        } else {\n            hsb.h = -1;\n        }\n        hsb.h *= 60;\n        if (hsb.h < 0) {\n            hsb.h += 360;\n        }\n        hsb.s *= 100/255;\n        hsb.b *= 100/255;\n        return hsb;\n    }\n    \n    HSBtoRGB(hsb) {\n        var rgb = {\n            r: null, g: null, b: null\n        };\n        let h: number = hsb.h;\n        let s: number = hsb.s*255/100;\n        let v: number = hsb.b*255/100;\n        if (s == 0) {\n            rgb = {\n                r: v,\n                g: v,\n                b: v\n            }\n        } \n        else {\n            let t1: number = v;\n            let t2: number = (255-s)*v/255;\n            let t3: number = (t1-t2)*(h%60)/60;\n            if (h==360) h = 0;\n            if (h<60) {rgb.r=t1;\trgb.b=t2; rgb.g=t2+t3}\n            else if (h<120) {rgb.g=t1; rgb.b=t2;\trgb.r=t1-t3}\n            else if (h<180) {rgb.g=t1; rgb.r=t2;\trgb.b=t2+t3}\n            else if (h<240) {rgb.b=t1; rgb.r=t2;\trgb.g=t1-t3}\n            else if (h<300) {rgb.b=t1; rgb.g=t2;\trgb.r=t2+t3}\n            else if (h<360) {rgb.r=t1; rgb.g=t2;\trgb.b=t1-t3}\n            else {rgb.r=0; rgb.g=0;\trgb.b=0}\n        }\n        return {r:Math.round(rgb.r), g:Math.round(rgb.g), b:Math.round(rgb.b)};\n    }\n    \n    RGBtoHEX(rgb) {\n        var hex = [\n            rgb.r.toString(16),\n            rgb.g.toString(16),\n            rgb.b.toString(16)\n        ];\n        \n        for(var key in hex) {\n            if (hex[key].length == 1) {\n                hex[key] = '0' + hex[key];\n            }\n        }        \n\n        return hex.join('');\n    }\n    \n    HSBtoHEX(hsb) {\n        return this.RGBtoHEX(this.HSBtoRGB(hsb));\n    }\n\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.overlay = null;\n    }\n    \n    ngOnDestroy() {\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ColorPicker],\n    declarations: [ColorPicker]\n})\nexport class ColorPickerModule { }\n"]}