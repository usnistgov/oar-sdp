{"version":3,"sources":["ng://primeng/terminal/terminalservice.ts","ng://primeng/terminal/terminal.ts"],"names":["TerminalService","this","commandSource","Subject","responseSource","commandHandler","asObservable","responseHandler","prototype","sendCommand","command","next","sendResponse","response","__decorate","Injectable","Terminal","el","terminalService","_this","commands","subscription","subscribe","length","commandProcessed","ngAfterViewInit","container","DomHandler","find","nativeElement","ngAfterViewChecked","scrollTop","scrollHeight","Object","defineProperty","value","handleCommand","event","keyCode","push","text","focus","element","ngOnDestroy","unsubscribe","ElementRef","Input","__decorate$1","Component","selector","template","changeDetection","ChangeDetectionStrategy","Default","TerminalModule","NgModule","imports","CommonModule","FormsModule","exports","declarations"],"mappings":"y1BAAAA,EAAA,WAIA,SAAAA,IAEYC,KAAAC,cAAgB,IAAIC,EAAAA,QACpBF,KAAAG,eAAiB,IAAID,EAAAA,QAE7BF,KAAAI,eAAiBJ,KAAKC,cAAcI,eACpCL,KAAAM,gBAAkBN,KAAKG,eAAeE,eAa1C,OAXIN,EAAAQ,UAAAC,YAAA,SAAYC,GACJA,GACAT,KAAKC,cAAcS,KAAKD,IAIhCV,EAAAQ,UAAAI,aAAA,SAAaC,GACLA,GACAZ,KAAKG,eAAeO,KAAKE,IAhBxBb,EAAec,EAAA,CAD3BC,EAAAA,cACYf,GAJb,gWCAAgB,EAAA,WA+CI,SAAAA,EAAmBC,EAAuBC,GAA1C,IAAAC,EAAAlB,KAAmBA,KAAAgB,GAAAA,EAAuBhB,KAAAiB,gBAAAA,EAV1CjB,KAAAmB,SAAkB,GAWdnB,KAAKoB,aAAeH,EAAgBX,gBAAgBe,WAAU,SAAAT,GAC1DM,EAAKC,SAASD,EAAKC,SAASG,OAAS,GAAGV,SAAWA,EACnDM,EAAKK,kBAAmB,KAyCpC,OArCIR,EAAAR,UAAAiB,gBAAA,WACIxB,KAAKyB,UAAYC,EAAAA,WAAWC,KAAK3B,KAAKgB,GAAGY,cAAe,gBAAgB,IAG5Eb,EAAAR,UAAAsB,mBAAA,WACQ7B,KAAKuB,mBACLvB,KAAKyB,UAAUK,UAAY9B,KAAKyB,UAAUM,aAC1C/B,KAAKuB,kBAAmB,IAKhCS,OAAAC,eAAIlB,EAAAR,UAAA,WAAQ,KAAZ,SAAa2B,GACLA,IACAlC,KAAKmB,SAASnB,KAAKmB,SAASG,OAAS,GAAGV,SAAWsB,EACnDlC,KAAKuB,kBAAmB,oCAIhCR,EAAAR,UAAA4B,cAAA,SAAcC,GACW,IAAjBA,EAAMC,UACNrC,KAAKmB,SAASmB,KAAK,CAACC,KAAMvC,KAAKS,UAC/BT,KAAKiB,gBAAgBT,YAAYR,KAAKS,SACtCT,KAAKS,QAAU,KAIvBM,EAAAR,UAAAiC,MAAA,SAAMC,GACFA,EAAQD,SAGZzB,EAAAR,UAAAmC,YAAA,WACQ1C,KAAKoB,cACLpB,KAAKoB,aAAauB,wDAxCHC,EAAAA,kBAAoC7C,KAlBlDc,EAAAA,CAARgC,EAAAA,8CAEQhC,EAAAA,CAARgC,EAAAA,sCAEQhC,EAAAA,CAARgC,EAAAA,qCAEQhC,EAAAA,CAARgC,EAAAA,0CA+BDhC,EAAAA,CADCgC,EAAAA,sCAtCQ9B,EAAQ+B,EAAA,CApBpBC,EAAAA,UAAU,CACPC,SAAU,aACVC,SAAU,0zBAgBVC,gBAAiBC,EAAAA,wBAAwBC,WAEhCrC,GA3Bb,gBAkGA,SAAAsC,KAA8B,OAAjBA,EAAcP,EAAA,CAL1BQ,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,aAAaC,EAAAA,aACvBC,QAAS,CAAC3C,GACV4C,aAAc,CAAC5C,MAENsC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TerminalService {\n    \n    private commandSource = new Subject<string>();\n    private responseSource = new Subject<string>();\n    \n    commandHandler = this.commandSource.asObservable();\n    responseHandler = this.responseSource.asObservable();\n    \n    sendCommand(command: string) {\n        if (command) {\n            this.commandSource.next(command);\n        }\n    }\n    \n    sendResponse(response: string) {\n        if (response) {\n            this.responseSource.next(response);\n        }\n    }\n}","import {NgModule,Component,AfterViewInit,AfterViewChecked,OnDestroy,Input,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {TerminalService} from './terminalservice';\nimport {Subscription}   from 'rxjs';\n\n@Component({\n    selector: 'p-terminal',\n    template: `\n        <div [ngClass]=\"'ui-terminal ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"focus(in)\">\n            <div *ngIf=\"welcomeMessage\">{{welcomeMessage}}</div>\n            <div class=\"ui-terminal-content\">\n                <div *ngFor=\"let command of commands\">\n                    <span>{{prompt}}</span>\n                    <span class=\"ui-terminal-command\">{{command.text}}</span>\n                    <div>{{command.response}}</div>\n                </div>\n            </div>\n            <div>\n                <span class=\"ui-terminal-content-prompt\">{{prompt}}</span>\n                <input #in type=\"text\" [(ngModel)]=\"command\" class=\"ui-terminal-input\" autocomplete=\"off\" (keydown)=\"handleCommand($event)\" autofocus>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Terminal implements AfterViewInit,AfterViewChecked,OnDestroy {\n\n    @Input() welcomeMessage: string;\n\n    @Input() prompt: string;\n        \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n            \n    commands: any[] = [];\n    \n    command: string;\n    \n    container: Element;\n    \n    commandProcessed: boolean;\n    \n    subscription: Subscription;\n    \n    constructor(public el: ElementRef, public terminalService: TerminalService) {\n        this.subscription = terminalService.responseHandler.subscribe(response => {\n            this.commands[this.commands.length - 1].response = response;\n            this.commandProcessed = true;\n        });\n    }\n    \n    ngAfterViewInit() {\n        this.container = DomHandler.find(this.el.nativeElement, '.ui-terminal')[0];\n    }\n    \n    ngAfterViewChecked() {\n        if (this.commandProcessed) {\n            this.container.scrollTop = this.container.scrollHeight;\n            this.commandProcessed = false;\n        }\n    }\n                \n    @Input()\n    set response(value: string) {\n        if (value) {\n            this.commands[this.commands.length - 1].response = value;\n            this.commandProcessed = true;\n        }\n    }\n    \n    handleCommand(event: KeyboardEvent) {\n        if (event.keyCode == 13) {\n            this.commands.push({text: this.command});\n            this.terminalService.sendCommand(this.command);\n            this.command = '';\n        }\n    }\n    \n    focus(element: HTMLElement) {\n        element.focus();\n    }\n    \n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    \n}\n\n@NgModule({\n    imports: [CommonModule,FormsModule],\n    exports: [Terminal],\n    declarations: [Terminal]\n})\nexport class TerminalModule { }"]}