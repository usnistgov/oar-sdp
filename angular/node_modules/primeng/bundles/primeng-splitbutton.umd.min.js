!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/animations"),require("@angular/common"),require("primeng/dom"),require("primeng/button"),require("@angular/router"),require("primeng/utils")):"function"==typeof define&&define.amd?define("primeng/splitbutton",["exports","@angular/core","@angular/animations","@angular/common","primeng/dom","primeng/button","@angular/router","primeng/utils"],t):t(((e=e||self).primeng=e.primeng||{},e.primeng.splitbutton={}),e.ng.core,e.ng.animations,e.ng.common,e.primeng.dom,e.primeng.button,e.ng.router,e.primeng.utils)}(this,(function(e,t,i,n,o,r,s,l){"use strict";var a=this&&this.__decorate||function(e,t,i,n){var o,r=arguments.length,s=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,i):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,i,n);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(s=(r<3?o(s):r>3?o(t,i,s):o(t,i))||s);return r>3&&s&&Object.defineProperty(t,i,s),s},u=function(){function e(e,i,n,o){this.el=e,this.renderer=i,this.router=n,this.cd=o,this.iconPos="left",this.onClick=new t.EventEmitter,this.onDropdownClick=new t.EventEmitter,this.showTransitionOptions="225ms ease-out",this.hideTransitionOptions="195ms ease-in",this.overlayVisible=!1,this.ariaId=l.UniqueComponentId()+"_list"}return e.prototype.onDefaultButtonClick=function(e){this.onClick.emit(e)},e.prototype.itemClick=function(e,t){t.disabled?e.preventDefault():(t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t}),this.overlayVisible=!1)},e.prototype.show=function(){this.overlayVisible=!this.overlayVisible},e.prototype.onOverlayAnimationStart=function(e){switch(e.toState){case"visible":this.overlay=e.element,this.appendOverlay(),this.overlay.style.zIndex=String(++o.DomHandler.zindex),this.alignOverlay(),this.bindDocumentClickListener(),this.bindDocumentResizeListener();break;case"void":this.onOverlayHide()}},e.prototype.onDropdownButtonClick=function(e){this.onDropdownClick.emit(e),this.dropdownClick=!0,this.show()},e.prototype.alignOverlay=function(){this.appendTo?o.DomHandler.absolutePosition(this.overlay,this.containerViewChild.nativeElement):o.DomHandler.relativePosition(this.overlay,this.containerViewChild.nativeElement)},e.prototype.appendOverlay=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.overlay):o.DomHandler.appendChild(this.overlay,this.appendTo),this.overlay.style.minWidth||(this.overlay.style.minWidth=o.DomHandler.getWidth(this.el.nativeElement.children[0])+"px"))},e.prototype.restoreOverlayAppend=function(){this.overlay&&this.appendTo&&this.el.nativeElement.appendChild(this.overlay)},e.prototype.bindDocumentClickListener=function(){var e=this;this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",(function(){e.dropdownClick?e.dropdownClick=!1:(e.overlayVisible=!1,e.unbindDocumentClickListener(),e.cd.markForCheck())})))},e.prototype.unbindDocumentClickListener=function(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)},e.prototype.bindDocumentResizeListener=function(){this.documentResizeListener=this.onWindowResize.bind(this),window.addEventListener("resize",this.documentResizeListener)},e.prototype.unbindDocumentResizeListener=function(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)},e.prototype.onWindowResize=function(){this.overlayVisible=!1},e.prototype.onOverlayHide=function(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener(),this.overlay=null},e.prototype.ngOnDestroy=function(){this.restoreOverlayAppend(),this.onOverlayHide()},e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:s.Router},{type:t.ChangeDetectorRef}]},a([t.Input()],e.prototype,"model",void 0),a([t.Input()],e.prototype,"icon",void 0),a([t.Input()],e.prototype,"iconPos",void 0),a([t.Input()],e.prototype,"label",void 0),a([t.Output()],e.prototype,"onClick",void 0),a([t.Output()],e.prototype,"onDropdownClick",void 0),a([t.Input()],e.prototype,"style",void 0),a([t.Input()],e.prototype,"styleClass",void 0),a([t.Input()],e.prototype,"menuStyle",void 0),a([t.Input()],e.prototype,"menuStyleClass",void 0),a([t.Input()],e.prototype,"disabled",void 0),a([t.Input()],e.prototype,"tabindex",void 0),a([t.Input()],e.prototype,"appendTo",void 0),a([t.Input()],e.prototype,"dir",void 0),a([t.Input()],e.prototype,"showTransitionOptions",void 0),a([t.Input()],e.prototype,"hideTransitionOptions",void 0),a([t.ViewChild("container")],e.prototype,"containerViewChild",void 0),a([t.ViewChild("defaultbtn")],e.prototype,"buttonViewChild",void 0),e=a([t.Component({selector:"p-splitButton",template:'\n        <div #container [ngClass]="{\'ui-splitbutton ui-buttonset ui-widget\':true}" [ngStyle]="style" [class]="styleClass">\n            <button #defaultbtn type="button" pButton [icon]="icon" [iconPos]="iconPos" [label]="label" [cornerStyleClass]="dir === \'rtl\' ? \'ui-corner-right\': \'ui-corner-left\'" (click)="onDefaultButtonClick($event)" [disabled]="disabled" [attr.tabindex]="tabindex">\n            </button><button type="button" pButton class="ui-splitbutton-menubutton" icon="pi pi-chevron-down" [cornerStyleClass]="dir === \'rtl\' ? \'ui-corner-left\': \'ui-corner-right\'" (click)="onDropdownButtonClick($event)" [disabled]="disabled"></button>\n            <div [attr.id]="ariaId + \'_overlay\'" #overlay [ngClass]="\'ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow\'" *ngIf="overlayVisible"\n                    [ngStyle]="menuStyle" [class]="menuStyleClass"\n                    [@overlayAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@overlayAnimation.start)="onOverlayAnimationStart($event)">\n                <ul class="ui-menu-list ui-helper-reset" role="menu">\n                    <ng-template ngFor let-item [ngForOf]="model">\n                        <li *ngIf="item.separator" class="ui-menu-separator ui-widget-content" [ngClass]="{\'ui-helper-hidden\': item.visible === false}" role="separator">\n                        <li class="ui-menuitem ui-widget ui-corner-all" role="menuitem" *ngIf="item.visible !== false && !item.separator" role="none">\n                            <a *ngIf="!item.routerLink" [attr.href]="item.url" class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" role="menuitem"\n                                [ngClass]="{\'ui-state-disabled\':item.disabled}" (click)="itemClick($event, item)">\n                                <span [ngClass]="\'ui-menuitem-icon\'" [class]="item.icon" *ngIf="item.icon"></span>\n                                <span class="ui-menuitem-text">{{item.label}}</span>\n                            </a>\n                            <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams"\n                                class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" [ngClass]="{\'ui-state-disabled\':item.disabled}" (click)="itemClick($event, item)">\n                                <span [ngClass]="\'ui-menuitem-icon\'" [class]="item.icon" *ngIf="item.icon"></span>\n                                <span class="ui-menuitem-text">{{item.label}}</span>\n                            </a>\n                        </li>\n                    </ng-template>\n                </ul>\n            </div>\n        </div>\n    ',animations:[i.trigger("overlayAnimation",[i.state("void",i.style({transform:"translateY(5%)",opacity:0})),i.state("visible",i.style({transform:"translateY(0)",opacity:1})),i.transition("void => visible",i.animate("{{showTransitionParams}}")),i.transition("visible => void",i.animate("{{hideTransitionParams}}"))])],changeDetection:t.ChangeDetectionStrategy.Default})],e)}(),p=function(){function e(){}return e=a([t.NgModule({imports:[n.CommonModule,r.ButtonModule,s.RouterModule],exports:[u,r.ButtonModule,s.RouterModule],declarations:[u]})],e)}();e.SplitButton=u,e.SplitButtonModule=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-splitbutton.umd.min.js.map