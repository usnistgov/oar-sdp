{"version":3,"sources":["ng://primeng/inplace/inplace.ts"],"names":["InplaceDisplay","__decorate","Component","selector","template","InplaceContent","Inplace","this","closeIcon","onActivate","EventEmitter","onDeactivate","prototype","onActivateClick","$event","preventClick","activate","event","onDeactivateClick","deactivate","disabled","active","emit","hover","onKeydown","which","preventDefault","Input","Output","changeDetection","ChangeDetectionStrategy","Default","InplaceModule","NgModule","imports","CommonModule","ButtonModule","exports","declarations"],"mappings":"wwBAAAA,EAAA,WAQA,SAAAA,KAA6B,OAAhBA,EAAcC,EAAA,CAJ1BC,EAAAA,UAAU,CACPC,SAAU,mBACVC,SAAU,+BAEDJ,GARb,gBAcA,SAAAK,KAA6B,OAAhBA,EAAcJ,EAAA,CAJ1BC,EAAAA,UAAU,CACPC,SAAU,mBACVC,SAAU,+BAEDC,mBAkBb,SAAAC,IAcaC,KAAAC,UAAoB,cAEnBD,KAAAE,WAAgC,IAAIC,EAAAA,aAEpCH,KAAAI,aAAkC,IAAID,EAAAA,aAmCpD,OA/BIJ,EAAAM,UAAAC,gBAAA,SAAgBC,GACPP,KAAKQ,cACNR,KAAKS,SAASC,QAGtBX,EAAAM,UAAAM,kBAAA,SAAkBD,GACTV,KAAKQ,cACNR,KAAKY,WAAWF,IAGxBX,EAAAM,UAAAI,SAAA,SAASC,GACAV,KAAKa,WACNb,KAAKc,QAAS,EACdd,KAAKE,WAAWa,KAAKL,KAI7BX,EAAAM,UAAAO,WAAA,SAAWF,GACFV,KAAKa,WACNb,KAAKc,QAAS,EACdd,KAAKgB,OAAQ,EACbhB,KAAKI,aAAaW,KAAKL,KAI/BX,EAAAM,UAAAY,UAAA,SAAUP,GACc,KAAhBA,EAAMQ,QACNlB,KAAKS,SAASC,GACdA,EAAMS,mBAhDLzB,EAAA,CAAR0B,EAAAA,sCAEQ1B,EAAA,CAAR0B,EAAAA,wCAEQ1B,EAAA,CAAR0B,EAAAA,wCAEQ1B,EAAA,CAAR0B,EAAAA,4CAEQ1B,EAAA,CAAR0B,EAAAA,qCAEQ1B,EAAA,CAAR0B,EAAAA,0CAEQ1B,EAAA,CAAR0B,EAAAA,yCAES1B,EAAA,CAAT2B,EAAAA,2CAES3B,EAAA,CAAT2B,EAAAA,6CAlBQtB,EAAOL,EAAA,CAhBnBC,EAAAA,UAAU,CACPC,SAAU,YACVC,SAAU,6tBAYVyB,gBAAiBC,EAAAA,wBAAwBC,WAEhCzB,mBA4Db,SAAA0B,KAA6B,OAAhBA,EAAa/B,EAAA,CALzBgC,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,aAAaC,EAAAA,cACvBC,QAAS,CAAC/B,EAAQN,EAAeK,EAAe+B,EAAAA,cAChDE,aAAc,CAAChC,EAAQN,EAAeK,MAE7B2B","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonModule} from 'primeng/button';\n\n@Component({\n    selector: 'p-inplaceDisplay',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceDisplay {}\n\n@Component({\n    selector: 'p-inplaceContent',\n    template: '<ng-content></ng-content>'\n})\nexport class InplaceContent {}\n\n@Component({\n    selector: 'p-inplace',\n    template: `\n        <div [ngClass]=\"{'ui-inplace ui-widget': true, 'ui-inplace-closable': closable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"ui-inplace-display\" (click)=\"onActivateClick($event)\" tabindex=\"0\" (keydown)=\"onKeydown($event)\"   \n                [ngClass]=\"{'ui-state-disabled':disabled}\" *ngIf=\"!active\">\n                <ng-content select=\"[pInplaceDisplay]\"></ng-content>\n            </div>\n            <div class=\"ui-inplace-content\" *ngIf=\"active\">\n                <ng-content select=\"[pInplaceContent]\"></ng-content>\n                <button type=\"button\" [icon]=\"closeIcon\" pButton (click)=\"onDeactivateClick($event)\" *ngIf=\"closable\"></button>\n            </div>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Inplace {\n\n    @Input() active: boolean;\n\n    @Input() closable: boolean;\n\n    @Input() disabled: boolean;\n\n    @Input() preventClick: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Output() onActivate: EventEmitter<any> = new EventEmitter();\n\n    @Output() onDeactivate: EventEmitter<any> = new EventEmitter();\n\n    hover: boolean;\n\n    onActivateClick($event) {\n        if (!this.preventClick)\n            this.activate(event);\n    }\n\n    onDeactivateClick(event) {\n        if (!this.preventClick)\n            this.deactivate(event);\n    }\n\n    activate(event?: Event) {\n        if (!this.disabled) {\n            this.active = true;\n            this.onActivate.emit(event);\n        }\n    }\n\n    deactivate(event?: Event) {\n        if (!this.disabled) {\n            this.active = false;\n            this.hover = false;\n            this.onDeactivate.emit(event);\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (event.which === 13) {\n            this.activate(event);\n            event.preventDefault();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,ButtonModule],\n    exports: [Inplace,InplaceDisplay,InplaceContent,ButtonModule],\n    declarations: [Inplace,InplaceDisplay,InplaceContent]\n})\nexport class InplaceModule { }\n"]}