{"version":3,"sources":["ng://primeng/inputtext/inputtext.ts"],"names":["InputText","el","ngModel","this","prototype","ngDoCheck","updateFilledState","onInput","e","filled","nativeElement","value","length","model","ElementRef","NgModel","decorators","type","Optional","__decorate","HostListener","Directive","selector","host","[class.ui-inputtext]","[class.ui-corner-all]","[class.ui-state-default]","[class.ui-widget]","[class.ui-state-filled]","__param","InputTextModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"00BAAAA,EAAA,WAkBI,SAAAA,EAAmBC,EAAmCC,GAAnCC,KAAAF,GAAAA,EAAmCE,KAAAD,QAAAA,EAgB1D,OAdIF,EAAAI,UAAAC,UAAA,WACIF,KAAKG,qBAKTN,EAAAI,UAAAG,QAAA,SAAQC,GACJL,KAAKG,qBAGTN,EAAAI,UAAAE,kBAAA,WACIH,KAAKM,OAAUN,KAAKF,GAAGS,cAAcC,OAASR,KAAKF,GAAGS,cAAcC,MAAMC,QACzDT,KAAKD,SAAWC,KAAKD,QAAQW,gDAd3BC,EAAAA,kBAAwCC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KAAlCC,EAAAA,cAQpCC,EAAA,CADCC,EAAAA,aAAa,QAAS,CAAC,wCAXfpB,EAASmB,EAAA,CAVrBE,EAAAA,UAAU,CACPC,SAAU,eACVC,KAAM,CACFC,uBAAwB,OACxBC,wBAAyB,OACzBC,2BAA4B,OAC5BC,oBAAqB,OACrBC,0BAA2B,YAOKC,EAAA,EAAAX,EAAAA,aAJ3BlB,GAdb,gBAyCA,SAAA8B,KAA+B,OAAlBA,EAAeX,EAAA,CAL3BY,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAClC,GACVmC,aAAc,CAACnC,MAEN8B","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }"]}