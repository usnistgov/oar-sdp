!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("primeng/inputtextarea",["exports","@angular/core","@angular/forms","@angular/common"],t):t(((e=e||self).primeng=e.primeng||{},e.primeng.inputtextarea={}),e.ng.core,e.ng.forms,e.ng.common)}(this,(function(e,t,n,i){"use strict";var o=this&&this.__decorate||function(e,t,n,i){var o,l=arguments.length,r=l<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(l<3?o(r):l>3?o(t,n,r):o(t,n))||r);return l>3&&r&&Object.defineProperty(t,n,r),r},l=this&&this.__param||function(e,t){return function(n,i){t(n,i,e)}},r=function(){function e(e,n){this.el=e,this.ngModel=n,this.onResize=new t.EventEmitter}return e.prototype.ngDoCheck=function(){this.updateFilledState(),this.autoResize&&this.resize()},e.prototype.onInput=function(e){this.updateFilledState(),this.autoResize&&this.resize(e)},e.prototype.updateFilledState=function(){this.filled=this.el.nativeElement.value&&this.el.nativeElement.value.length||this.ngModel&&this.ngModel.model},e.prototype.onFocus=function(e){this.autoResize&&this.resize(e)},e.prototype.onBlur=function(e){this.autoResize&&this.resize(e)},e.prototype.resize=function(e){this.el.nativeElement.style.height="auto",this.el.nativeElement.style.height=this.el.nativeElement.scrollHeight+"px",parseFloat(this.el.nativeElement.style.height)>=parseFloat(this.el.nativeElement.style.maxHeight)?(this.el.nativeElement.style.overflowY="scroll",this.el.nativeElement.style.height=this.el.nativeElement.style.maxHeight):this.el.nativeElement.style.overflow="hidden",this.onResize.emit(e||{})},e.ctorParameters=function(){return[{type:t.ElementRef},{type:n.NgModel,decorators:[{type:t.Optional}]}]},o([t.Input()],e.prototype,"autoResize",void 0),o([t.Output()],e.prototype,"onResize",void 0),o([t.HostListener("input",["$event"])],e.prototype,"onInput",null),o([t.HostListener("focus",["$event"])],e.prototype,"onFocus",null),o([t.HostListener("blur",["$event"])],e.prototype,"onBlur",null),e=o([t.Directive({selector:"[pInputTextarea]",host:{"[class.ui-inputtext]":"true","[class.ui-corner-all]":"true","[class.ui-inputtextarea-resizable]":"autoResize","[class.ui-state-default]":"true","[class.ui-widget]":"true","[class.ui-state-filled]":"filled"}}),l(1,t.Optional())],e)}(),s=function(){function e(){}return e=o([t.NgModule({imports:[i.CommonModule],exports:[r],declarations:[r]})],e)}();e.InputTextarea=r,e.InputTextareaModule=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-inputtextarea.umd.min.js.map