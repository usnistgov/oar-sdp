!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("primeng/ripple"),require("@angular/forms")):"function"==typeof define&&define.amd?define("primeng/togglebutton",["exports","@angular/core","@angular/common","primeng/ripple","@angular/forms"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).primeng=e.primeng||{},e.primeng.togglebutton={}),e.ng.core,e.ng.common,e.primeng.ripple,e.ng.forms)}(this,(function(e,t,o,n,i){"use strict";var r={provide:i.NG_VALUE_ACCESSOR,useExisting:t.forwardRef((function(){return l})),multi:!0},l=function(){function e(e){this.cd=e,this.iconPos="left",this.onChange=new t.EventEmitter,this.checked=!1,this.onModelChange=function(){},this.onModelTouched=function(){}}return e.prototype.toggle=function(e){this.disabled||(this.checked=!this.checked,this.onModelChange(this.checked),this.onModelTouched(),this.onChange.emit({originalEvent:e,checked:this.checked}),this.cd.markForCheck())},e.prototype.onBlur=function(){this.onModelTouched()},e.prototype.writeValue=function(e){this.checked=e,this.cd.markForCheck()},e.prototype.registerOnChange=function(e){this.onModelChange=e},e.prototype.registerOnTouched=function(e){this.onModelTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e,this.cd.markForCheck()},Object.defineProperty(e.prototype,"hasOnLabel",{get:function(){return this.onLabel&&this.onLabel.length>0},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"hasOffLabel",{get:function(){return this.onLabel&&this.onLabel.length>0},enumerable:!1,configurable:!0}),e}();l.decorators=[{type:t.Component,args:[{selector:"p-toggleButton",template:"\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\" \n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\" \n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    ",providers:[r],changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".p-button{-moz-user-select:none;-ms-flex-align:center;-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;margin:0;overflow:hidden;position:relative;text-align:center;user-select:none;vertical-align:bottom}.p-button-label{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right{-ms-flex-order:1;order:1}.p-button:disabled{cursor:default}.p-button-icon-only{-ms-flex-pack:center;justify-content:center}.p-button-icon-only .p-button-label{-ms-flex:0 0 auto;flex:0 0 auto;visibility:hidden;width:0}.p-button-vertical{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom{-ms-flex-order:2;order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-bottom-right-radius:0;border-top-right-radius:0}.p-buttonset .p-button:last-of-type{border-bottom-left-radius:0;border-top-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}"]}]}],l.ctorParameters=function(){return[{type:t.ChangeDetectorRef}]},l.propDecorators={onLabel:[{type:t.Input}],offLabel:[{type:t.Input}],onIcon:[{type:t.Input}],offIcon:[{type:t.Input}],ariaLabelledBy:[{type:t.Input}],disabled:[{type:t.Input}],style:[{type:t.Input}],styleClass:[{type:t.Input}],inputId:[{type:t.Input}],tabindex:[{type:t.Input}],iconPos:[{type:t.Input}],onChange:[{type:t.Output}]};var s=function(){};s.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,n.RippleModule],exports:[l],declarations:[l]}]}],e.TOGGLEBUTTON_VALUE_ACCESSOR=r,e.ToggleButton=l,e.ToggleButtonModule=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-togglebutton.umd.min.js.map