{"version":3,"file":"primeng-fieldset.umd.js","sources":["ng://primeng/fieldset/fieldset.ts"],"sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-fieldset',\n    template: `\n        <fieldset [attr.id]=\"id\" [ngClass]=\"{'ui-fieldset ui-widget ui-widget-content ui-corner-all': true, 'ui-fieldset-toggleable': toggleable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <legend class=\"ui-fieldset-legend ui-corner-all ui-state-default ui-unselectable-text\">\n                <ng-container *ngIf=\"toggleable; else legendContent\">\n                    <a tabindex=\"0\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\" [attr.aria-controls]=\"id + '-content'\" [attr.aria-expanded]=\"!collapsed\">\n                        <ng-container *ngTemplateOutlet=\"legendContent\"></ng-container>\n                    </a>\n                </ng-container>\n                <ng-template #legendContent>\n                    <span class=\"ui-fieldset-toggler pi\" *ngIf=\"toggleable\" [ngClass]=\"{'pi-minus': !collapsed,'pi-plus':collapsed}\"></span>\n                    <span class=\"ui-fieldset-legend-text\">{{legend}}</span>\n                    <ng-content select=\"p-header\"></ng-content>\n                </ng-template>\n            </legend>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-fieldset-content-wrapper\" [@fieldsetContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}}\" \n                        [attr.aria-labelledby]=\"id\" [ngClass]=\"{'ui-fieldset-content-wrapper-overflown': collapsed||animating}\" [attr.aria-hidden]=\"collapsed\"\n                         (@fieldsetContent.done)=\"onToggleDone($event)\" role=\"region\">\n                <div class=\"ui-fieldset-content\">\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </fieldset>\n    `,\n    animations: [\n        trigger('fieldsetContent', [\n            state('hidden', style({\n                height: '0'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Fieldset implements BlockableUI {\n\n    @Input() legend: string;\n\n    @Input() toggleable: boolean;\n\n    @Input() collapsed: boolean = false;\n\n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    \n    public animating: boolean;\n    \n    constructor(private el: ElementRef) {}\n    \n    id: string = `ui-fieldset-${idx++}`;\n        \n    toggle(event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.collapsed)\n            this.expand(event);\n        else\n            this.collapse(event);\n            \n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});   \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElementÂ {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Fieldset,SharedModule],\n    declarations: [Fieldset]\n})\nexport class FieldsetModule { }"],"names":["EventEmitter","ElementRef","Input","Output","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","NgModule","CommonModule","SharedModule"],"mappings":"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"}