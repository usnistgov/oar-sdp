{"version":3,"file":"primeng-panelmenu.umd.js","sources":["ng://primeng/panelmenu/panelmenu.ts"],"sourcesContent":["import {NgModule,Component,Input,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\nexport class BasePanelMenuItem {\n\n    constructor(private ref: ChangeDetectorRef) {}\n        \n    handleClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        \n        item.expanded = !item.expanded;\n        this.ref.detectChanges();\n        \n        if (!item.url) {\n            event.preventDefault();\n        }\n                   \n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n}\n\n@Component({\n    selector: 'p-panelMenuSub',\n    template: `\n        <ul class=\"ui-submenu-list\" [@submenu]=\"expanded ? {value: 'visible', params: {transitionParams: transitionOptions, height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\" role=\"tree\">\n            <ng-template ngFor let-child [ngForOf]=\"item.items\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" class=\"ui-menuitem ui-corner-all\" [ngClass]=\"child.styleClass\" [class.ui-helper-hidden]=\"child.visible === false\" [ngStyle]=\"child.style\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" class=\"ui-menuitem-link ui-corner-all\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\"\n                        [ngClass]=\"{'ui-state-disabled':child.disabled, 'ui-state-active': child.expanded}\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" class=\"ui-menuitem-link ui-corner-all\" \n                        [ngClass]=\"{'ui-state-disabled':child.disabled}\" [attr.tabindex]=\"!item.expanded ? null : child.disabled ? null : '0'\" [attr.id]=\"child.id\" role=\"treeitem\" [attr.aria-expanded]=\"child.expanded\"\n                        (click)=\"handleClick($event,child)\" [attr.target]=\"child.target\" [attr.title]=\"child.title\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-caret-right':!child.expanded,'pi-caret-down':child.expanded}\" *ngIf=\"child.items\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"child.icon\" *ngIf=\"child.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-panelMenuSub [item]=\"child\" [expanded]=\"child.expanded\" [transitionOptions]=\"transitionOptions\" *ngIf=\"child.items\"></p-panelMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `,\n    animations: [\n        trigger('submenu', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ]\n})\nexport class PanelMenuSub extends BasePanelMenuItem {\n    \n    @Input() item: MenuItem;\n    \n    @Input() expanded: boolean;\n\n    @Input() transitionOptions: string;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n}\n\n@Component({\n    selector: 'p-panelMenu',\n    template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"'ui-panelmenu ui-widget'\">\n            <ng-container *ngFor=\"let item of model;let f=first;let l=last;\">\n                <div class=\"ui-panelmenu-panel\" [ngClass]=\"{'ui-helper-hidden': item.visible === false}\">\n                    <div [ngClass]=\"{'ui-widget ui-panelmenu-header ui-state-default':true,'ui-corner-top':f,'ui-corner-bottom':l&&!item.expanded,\n                    'ui-state-active':item.expanded,'ui-state-disabled':item.disabled}\" [class]=\"item.styleClass\" [ngStyle]=\"item.style\">\n                        <a *ngIf=\"!item.routerLink\" [attr.href]=\"item.url\" (click)=\"handleClick($event,item)\" [attr.tabindex]=\"item.disabled ? null : '0'\" [attr.id]=\"item.id\"\n                           [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.aria-expanded]=\"item.expanded\" [attr.id]=\"item.id + '_header'\" [attr.aria-controls]=\"item.id +'_content'\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                        <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\n                           (click)=\"handleClick($event,item)\" [attr.target]=\"item.target\" [attr.title]=\"item.title\" class=\"ui-panelmenu-header-link\" [attr.id]=\"item.id\" [attr.tabindex]=\"item.disabled ? null : '0'\"\n                           [fragment]=\"item.fragment\" [queryParamsHandling]=\"item.queryParamsHandling\" [preserveFragment]=\"item.preserveFragment\" [skipLocationChange]=\"item.skipLocationChange\" [replaceUrl]=\"item.replaceUrl\" [state]=\"item.state\">\n                        <span *ngIf=\"item.items\" class=\"ui-panelmenu-icon pi pi-fw\" [ngClass]=\"{'pi-chevron-right':!item.expanded,'pi-chevron-down':item.expanded}\"></span\n                        ><span class=\"ui-menuitem-icon\" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span\n                        ><span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </a>\n                    </div>\n                    <div *ngIf=\"item.items\" class=\"ui-panelmenu-content-wrapper\" [@rootItem]=\"item.expanded ? {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*'}} : {value: 'hidden', params: {transitionParams: transitionOptions, height: '0'}}\"  (@rootItem.done)=\"onToggleDone()\"\n                         [ngClass]=\"{'ui-panelmenu-content-wrapper-overflown': !item.expanded||animating}\">\n                        <div class=\"ui-panelmenu-content ui-widget-content\" role=\"region\" [attr.id]=\"item.id +'_content' \" [attr.aria-labelledby]=\"item.id +'_header'\">\n                            <p-panelMenuSub [item]=\"item\" [expanded]=\"true\" [transitionOptions]=\"transitionOptions\" class=\"ui-panelmenu-root-submenu\"></p-panelMenuSub>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    animations: [\n        trigger('rootItem', [\n            state('hidden', style({\n                height: '0px'\n            })),\n            state('void', style({\n                height: '{{height}}'\n            }), {params: {height: '0'}}),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible => hidden', animate('{{transitionParams}}')),\n            transition('hidden => visible', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class PanelMenu extends BasePanelMenuItem {\n    \n    @Input() model: MenuItem[];\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() multiple: boolean = true;\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n    \n    public animating: boolean;\n\n    constructor(ref: ChangeDetectorRef) {\n        super(ref);\n    }\n                \n    collapseAll() {\n    \tfor(let item of this.model) {\n    \t\tif (item.expanded) {\n    \t\t\titem.expanded = false;\n    \t\t}\n    \t}\n    }\n\n    handleClick(event, item) {\n    \tif (!this.multiple) {\n            for(let modelItem of this.model) {\n        \t\tif (item !== modelItem && modelItem.expanded) {\n        \t\t\tmodelItem.expanded = false;\n        \t\t}\n        \t}\n    \t}\n        \n        this.animating = true;\n        super.handleClick(event, item);\n    }\n    \n    onToggleDone() {\n        this.animating = false;\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule],\n    exports: [PanelMenu,RouterModule],\n    declarations: [PanelMenu,PanelMenuSub]\n})\nexport class PanelMenuModule { }\n"],"names":["ChangeDetectorRef","Input","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","NgModule","CommonModule","RouterModule"],"mappings":"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"}