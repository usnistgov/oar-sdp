!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("primeng/utils"),require("@angular/forms")):"function"==typeof define&&define.amd?define("primeng/selectbutton",["exports","@angular/core","@angular/common","primeng/utils","@angular/forms"],e):e(((t=t||self).primeng=t.primeng||{},t.primeng.selectbutton={}),t.ng.core,t.ng.common,t.primeng.utils,t.ng.forms)}(this,(function(t,e,n,o,i){"use strict";var l=this&&this.__decorate||function(t,e,n,o){var i,l=arguments.length,r=l<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,n,o);else for(var u=t.length-1;u>=0;u--)(i=t[u])&&(r=(l<3?i(r):l>3?i(e,n,r):i(e,n))||r);return l>3&&r&&Object.defineProperty(e,n,r),r},r=this&&this.__read||function(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var o,i,l=n.call(t),r=[];try{for(;(void 0===e||e-- >0)&&!(o=l.next()).done;)r.push(o.value)}catch(t){i={error:t}}finally{try{o&&!o.done&&(n=l.return)&&n.call(l)}finally{if(i)throw i.error}}return r},u=this&&this.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(r(arguments[e]));return t},a={provide:i.NG_VALUE_ACCESSOR,useExisting:e.forwardRef((function(){return s})),multi:!0},s=function(){function t(t){this.cd=t,this.tabindex=0,this.onOptionClick=new e.EventEmitter,this.onChange=new e.EventEmitter,this.onModelChange=function(){},this.onModelTouched=function(){}}return Object.defineProperty(t.prototype,"options",{get:function(){return this._options},set:function(t){},enumerable:!0,configurable:!0}),t.prototype.ngOnChanges=function(t){t.options&&(this._options=this.optionLabel?o.ObjectUtils.generateSelectItems(t.options.currentValue,this.optionLabel):t.options.currentValue)},t.prototype.writeValue=function(t){this.value=t,this.cd.markForCheck()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.prototype.onItemClick=function(t,e,n){if(!this.disabled&&!e.disabled){if(this.multiple){var o=this.findItemIndex(e);this.value=-1!=o?this.value.filter((function(t,e){return e!=o})):u(this.value||[],[e.value])}else this.value=e.value;this.onOptionClick.emit({originalEvent:t,option:e,index:n}),this.onModelChange(this.value),this.onChange.emit({originalEvent:t,value:this.value})}},t.prototype.onFocus=function(t){this.focusedItem=t.target},t.prototype.onBlur=function(t){this.focusedItem=null,this.onModelTouched()},t.prototype.isSelected=function(t){return this.multiple?-1!=this.findItemIndex(t):o.ObjectUtils.equals(t.value,this.value,this.dataKey)},t.prototype.findItemIndex=function(t){var e=-1;if(this.value)for(var n=0;n<this.value.length;n++)if(this.value[n]==t.value){e=n;break}return e},t.ctorParameters=function(){return[{type:e.ChangeDetectorRef}]},l([e.Input()],t.prototype,"tabindex",void 0),l([e.Input()],t.prototype,"multiple",void 0),l([e.Input()],t.prototype,"style",void 0),l([e.Input()],t.prototype,"styleClass",void 0),l([e.Input()],t.prototype,"ariaLabelledBy",void 0),l([e.Input()],t.prototype,"disabled",void 0),l([e.Input()],t.prototype,"dataKey",void 0),l([e.Input()],t.prototype,"optionLabel",void 0),l([e.Output()],t.prototype,"onOptionClick",void 0),l([e.Output()],t.prototype,"onChange",void 0),l([e.ContentChild(e.TemplateRef)],t.prototype,"itemTemplate",void 0),l([e.Input()],t.prototype,"options",null),t=l([e.Component({selector:"p-selectButton",template:'\n        <div [ngClass]="\'ui-selectbutton ui-buttonset ui-widget ui-corner-all ui-buttonset-\' + (options ? options.length : 0)" [ngStyle]="style" [class]="styleClass"  role="group">\n            <div *ngFor="let option of options; let i = index" #btn class="ui-button ui-widget ui-state-default ui-button-text-only {{option.styleClass}}"  role="button" [attr.aria-pressed]="isSelected(option)"\n                [ngClass]="{\'ui-state-active\':isSelected(option), \'ui-state-disabled\': disabled || option.disabled, \'ui-state-focus\': btn == focusedItem, \n                \'ui-button-text-icon-left\': (option.icon != null), \'ui-button-icon-only\': (option.icon && !option.label)}" (click)="onItemClick($event,option,i)" (keydown.enter)="onItemClick($event,option,i)"\n                [attr.title]="option.title" [attr.aria-label]="option.label" (focus)="onFocus($event)" (blur)="onBlur($event)" [attr.tabindex]="tabindex" [attr.aria-labelledby]="ariaLabelledBy">\n                <ng-container *ngIf="!itemTemplate else customcontent">\n                    <span [ngClass]="[\'ui-clickable\', \'ui-button-icon-left\']" [class]="option.icon" *ngIf="option.icon"></span>\n                    <span class="ui-button-text ui-clickable">{{option.label||\'ui-btn\'}}</span>\n                </ng-container>\n                <ng-template #customcontent>\n                    <ng-container *ngTemplateOutlet="itemTemplate; context: {$implicit: option, index: i}"></ng-container>\n                </ng-template>\n            </div>\n        </div>\n    ',providers:[a],changeDetection:e.ChangeDetectionStrategy.Default})],t)}(),p=function(){function t(){}return t=l([e.NgModule({imports:[n.CommonModule],exports:[s],declarations:[s]})],t)}();t.SELECTBUTTON_VALUE_ACCESSOR=a,t.SelectButton=s,t.SelectButtonModule=p,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=primeng-selectbutton.umd.min.js.map