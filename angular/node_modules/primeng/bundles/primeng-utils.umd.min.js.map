{"version":3,"sources":["ng://primeng/utils/objectutils.ts","ng://primeng/utils/filterutils.ts","ng://primeng/utils/uniquecomponentid.ts"],"names":["ObjectUtils","equals","obj1","obj2","field","this","resolveFieldData","equalsByValue","i","length","key","arrA","Array","isArray","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","Object","prototype","hasOwnProperty","call","data","isFunction","indexOf","fields","split","value","len","obj","constructor","apply","reorderArray","from","to","splice","generateSelectItems","val","selectItems","val_1","__values","val_1_1","next","done","item","push","label","insertIntoOrderedArray","index","arr","sourceArr","injected","findIndexInList","list","removeAccents","str","search","replace","FilterUtils","filter","filterValue","filterMatchMode","filterLocale","filteredItems","filterText","toLocaleLowerCase","value_1","value_1_1","fields_1","e_2","fields_1_1","fieldValue","String","startsWith","trim","slice","contains","endsWith","stringValue","notEquals","in","lt","lte","gt","gte","lastId"],"mappings":"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","sourcesContent":["import {SelectItem} from 'primeng/api';\n\nexport class ObjectUtils {\n\n    public static equals(obj1: any, obj2: any, field?: string): boolean {\n        if (field)\n            return (this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field));\n        else\n            return this.equalsByValue(obj1, obj2);\n    }\n\n    public static equalsByValue(obj1: any, obj2: any): boolean {\n        if (obj1 === obj2) return true;\n\n        if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {\n            var arrA = Array.isArray(obj1)\n                , arrB = Array.isArray(obj2)\n                , i\n                , length\n                , key;\n\n            if (arrA && arrB) {\n                length = obj1.length;\n                if (length != obj2.length) return false;\n                for (i = length; i-- !== 0;)\n                    if (!this.equalsByValue(obj1[i], obj2[i])) return false;\n                return true;\n            }\n\n            if (arrA != arrB) return false;\n\n            var dateA = obj1 instanceof Date\n                , dateB = obj2 instanceof Date;\n            if (dateA != dateB) return false;\n            if (dateA && dateB) return obj1.getTime() == obj2.getTime();\n\n            var regexpA = obj1 instanceof RegExp\n                , regexpB = obj2 instanceof RegExp;\n            if (regexpA != regexpB) return false;\n            if (regexpA && regexpB) return obj1.toString() == obj2.toString();\n\n            var keys = Object.keys(obj1);\n            length = keys.length;\n\n            if (length !== Object.keys(obj2).length)\n                return false;\n\n            for (i = length; i-- !== 0;)\n                if (!Object.prototype.hasOwnProperty.call(obj2, keys[i])) return false;\n\n            for (i = length; i-- !== 0;) {\n                key = keys[i];\n                if (!this.equalsByValue(obj1[key], obj2[key])) return false;\n            }\n\n            return true;\n        }\n\n        return obj1 !== obj1 && obj2 !== obj2;\n    }\n\n    public static resolveFieldData(data: any, field: any): any {\n        if (data && field) {\n            if (this.isFunction(field)) {\n                return field(data);\n            }\n            else if (field.indexOf('.') == -1) {\n                return data[field];\n            }\n            else {\n                let fields: string[] = field.split('.');\n                let value = data;\n                for(let i = 0, len = fields.length; i < len; ++i) {\n                    if (value == null) {\n                        return null;\n                    }\n                    value = value[fields[i]];\n                }\n                return value;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n\n    public static isFunction(obj: any) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    }\n\n    public static reorderArray(value: any[], from: number, to: number) {\n        let target: number;\n        if (value && from !== to) {\n            if (to >= value.length) {\n                to %= value.length;\n                from %= value.length;\n            }\n            value.splice(to, 0, value.splice(from, 1)[0]);\n        }\n    }\n\n    public static generateSelectItems(val: any[], field: string): SelectItem[] {\n        let selectItems: SelectItem[];\n        if (val && val.length) {\n            selectItems = [];\n            for(let item of val) {\n                selectItems.push({label: this.resolveFieldData(item, field), value: item});\n            }\n        }\n\n        return selectItems;\n    }\n\n    public static insertIntoOrderedArray(item: any, index: number, arr: any[], sourceArr: any[]): void {\n        if (arr.length > 0) {\n            let injected = false;\n            for(let i = 0; i < arr.length; i++) {\n                let currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n                if (currentItemIndex > index) {\n                    arr.splice(i, 0, item);\n                    injected = true;\n                    break;\n                }\n            }\n\n            if (!injected) {\n                arr.push(item);\n            }\n        }\n        else {\n            arr.push(item);\n        }\n    }\n\n    public static findIndexInList(item: any, list: any): number {\n        let index: number = -1;\n\n        if (list) {\n            for(let i = 0; i < list.length; i++) {\n                if (list[i] == item) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n\n        return index;\n    }\n\n    public static removeAccents(str) {\n        if (str && str.search(/[\\xC0-\\xFF]/g) > -1) {\n            str = str\n                    .replace(/[\\xC0-\\xC5]/g, \"A\")\n                    .replace(/[\\xC6]/g, \"AE\")\n                    .replace(/[\\xC7]/g, \"C\")\n                    .replace(/[\\xC8-\\xCB]/g, \"E\")\n                    .replace(/[\\xCC-\\xCF]/g, \"I\")\n                    .replace(/[\\xD0]/g, \"D\")\n                    .replace(/[\\xD1]/g, \"N\")\n                    .replace(/[\\xD2-\\xD6\\xD8]/g, \"O\")\n                    .replace(/[\\xD9-\\xDC]/g, \"U\")\n                    .replace(/[\\xDD]/g, \"Y\")\n                    .replace(/[\\xDE]/g, \"P\")\n                    .replace(/[\\xE0-\\xE5]/g, \"a\")\n                    .replace(/[\\xE6]/g, \"ae\")\n                    .replace(/[\\xE7]/g, \"c\")\n                    .replace(/[\\xE8-\\xEB]/g, \"e\")\n                    .replace(/[\\xEC-\\xEF]/g, \"i\")\n                    .replace(/[\\xF1]/g, \"n\")\n                    .replace(/[\\xF2-\\xF6\\xF8]/g, \"o\")\n                    .replace(/[\\xF9-\\xFC]/g, \"u\")\n                    .replace(/[\\xFE]/g, \"p\")\n                    .replace(/[\\xFD\\xFF]/g, \"y\");\n        }\n      \n        return str;\n      }\n}\n","import { ObjectUtils } from './objectutils';\n\nexport class FilterUtils {\n\n    public static filter(value: any[], fields: any[], filterValue: string, filterMatchMode: string, filterLocale?: string) {\n        let filteredItems: any[] = [];\n        let filterText = ObjectUtils.removeAccents(filterValue).toLocaleLowerCase(filterLocale);\n\n        if (value) {\n            for (let item of value) {\n                for (let field of fields) {\n                    let fieldValue = ObjectUtils.removeAccents(String(ObjectUtils.resolveFieldData(item, field))).toLocaleLowerCase(filterLocale);\n\n                    if (FilterUtils[filterMatchMode](fieldValue, filterText, filterLocale)) {\n                        filteredItems.push(item);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return filteredItems;\n    }\n\n    public static startsWith(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null || filter.trim() === '') {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n\n        return stringValue.slice(0, filterValue.length) === filterValue;\n    }\n\n    public static contains(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n\n        return stringValue.indexOf(filterValue) !== -1;\n    }\n\n    public static endsWith(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null || filter.trim() === '') {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n\n        return stringValue.indexOf(filterValue, stringValue.length - filterValue.length) !== -1;\n    }\n\n    public static equals(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        if (value.getTime && filter.getTime)\n            return value.getTime() === filter.getTime();\n        else\n            return ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale) == ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n    }\n\n    public static notEquals(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n            return false;\n        }\n\n        if (value === undefined || value === null) {\n            return true;\n        }\n\n        if (value.getTime && filter.getTime)\n            return value.getTime() !== filter.getTime();\n        else\n            return ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale) != ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n    }\n\n    public static in(value, filter: any[], filterLocale?): boolean {\n        if (filter === undefined || filter === null || filter.length === 0) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        for (let i = 0; i < filter.length; i++) {\n            if (ObjectUtils.equals(value, filter[i])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public static lt(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        if (value.getTime && filter.getTime)\n            return value.getTime() < filter.getTime();\n        else\n            return value < filter;\n    }\n\n    public static lte(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        if (value.getTime && filter.getTime)\n            return value.getTime() <= filter.getTime();\n        else\n            return value <= filter;\n    }\n\n    public static gt(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        if (value.getTime && filter.getTime)\n            return value.getTime() > filter.getTime();\n        else\n            return value > filter;\n    }\n\n    public static gte(value, filter, filterLocale?): boolean {\n        if (filter === undefined || filter === null) {\n            return true;\n        }\n\n        if (value === undefined || value === null) {\n            return false;\n        }\n\n        if (value.getTime && filter.getTime)\n            return value.getTime() >= filter.getTime();\n        else\n            return value >= filter;\n    }\n}\n","\nexport var lastId = 0;\n\nexport function UniqueComponentId () {\n    let prefix = 'pr_id_';\n    lastId++;\n    return `${prefix}${lastId}`;\n}"]}