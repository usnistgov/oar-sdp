{"version":3,"sources":["../../src/app/components/styleclass/styleclass.ts"],"names":["StyleClass","el","renderer","this","prototype","ngAfterViewInit","_this","eventListener","listen","nativeElement","target","resolveTarget","toggleClass","DomHandler","hasClass","removeClass","addClass","offsetParent","enter","leave","enterActiveClass","animating","style","height","maxHeight","scrollHeight","enterClass","enterListener","enterToClass","hideOnOutsideClick","bindDocumentListener","leaveActiveClass","leaveClass","leaveListener","leaveToClass","unbindDocumentListener","selector","nextElementSibling","previousElementSibling","parentElement","document","querySelector","documentListener","ownerDocument","event","getComputedStyle","getPropertyValue","isSameNode","contains","ngOnDestroy","Directive","args","ElementRef","Renderer2","Input","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { CommonModule} from '@angular/common';\nimport { NgModule, Directive, ElementRef, Input, Renderer2, OnDestroy, AfterViewInit } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\n\n@Directive({\n    selector: '[pStyleClass]'\n})\nexport class StyleClass implements AfterViewInit, OnDestroy {\n\n    constructor(public el: ElementRef, public renderer: Renderer2) {}\n\n    @Input('pStyleClass') selector: string;\n\n    @Input() enterClass: string;\n\n    @Input() enterActiveClass: string;\n\n    @Input() enterToClass: string;\n\n    @Input() leaveClass: string;\n\n    @Input() leaveActiveClass: string;\n\n    @Input() leaveToClass: string;\n\n    @Input() hideOnOutsideClick: boolean;\n\n    @Input() toggleClass: string;\n\n    eventListener: Function;\n\n    documentListener: Function;\n\n    target: HTMLElement;\n\n    enterListener: Function;\n\n    leaveListener: Function;\n\n    animating: boolean;\n\n    ngAfterViewInit() {\n        this.eventListener = this.renderer.listen(this.el.nativeElement, 'click', () => {\n            this.target = this.resolveTarget();\n\n            if (this.toggleClass) {\n                if (DomHandler.hasClass(this.target, this.toggleClass))\n                    DomHandler.removeClass(this.target, this.toggleClass);\n                else\n                    DomHandler.addClass(this.target, this.toggleClass);\n            }\n            else {\n                if (this.target.offsetParent === null)\n                    this.enter();\n                else\n                    this.leave();\n            }\n        });\n    }\n\n    enter() {\n        if (this.enterActiveClass) {\n            if (!this.animating) {\n                this.animating = true;\n\n                if (this.enterActiveClass === 'slidedown') {\n                    this.target.style.height = '0px';\n                    DomHandler.removeClass(this.target, 'hidden');\n                    this.target.style.maxHeight = this.target.scrollHeight + 'px';\n                    DomHandler.addClass(this.target, 'hidden');\n                    this.target.style.height = '';\n                }\n\n                DomHandler.addClass(this.target, this.enterActiveClass);\n                if (this.enterClass) {\n                    DomHandler.removeClass(this.target, this.enterClass);\n                }\n\n                this.enterListener = this.renderer.listen(this.target, 'animationend', () => {\n                    DomHandler.removeClass(this.target, this.enterActiveClass);\n                    if (this.enterToClass) {\n                        DomHandler.addClass(this.target, this.enterToClass);\n                    }\n                    this.enterListener();\n\n                    if (this.enterActiveClass === 'slidedown') {\n                        this.target.style.maxHeight = '';\n                    }\n                    this.animating = false;\n                });\n            }\n        }\n        else {\n            if (this.enterClass) {\n                DomHandler.removeClass(this.target, this.enterClass);\n            }\n\n            if (this.enterToClass) {\n                DomHandler.addClass(this.target, this.enterToClass);\n            }\n        }\n\n        if (this.hideOnOutsideClick) {\n            this.bindDocumentListener();\n        }\n    }\n\n    leave() {\n        if (this.leaveActiveClass) {\n            if (!this.animating) {\n                this.animating = true;\n                DomHandler.addClass(this.target, this.leaveActiveClass);\n                if (this.leaveClass) {\n                    DomHandler.removeClass(this.target, this.leaveClass);\n                }\n\n                this.leaveListener = this.renderer.listen(this.target, 'animationend', () => {\n                    DomHandler.removeClass(this.target, this.leaveActiveClass);\n                    if (this.leaveToClass) {\n                        DomHandler.addClass(this.target, this.leaveToClass);\n                    }\n                    this.leaveListener();\n                    this.animating = false;\n                });\n            }\n        }\n        else {\n            if (this.leaveClass) {\n                DomHandler.removeClass(this.target, this.leaveClass);\n            }\n\n            if (this.leaveToClass) {\n                DomHandler.addClass(this.target, this.leaveToClass);\n            }\n        }\n\n        if (this.hideOnOutsideClick) {\n            this.unbindDocumentListener();\n        }\n    }\n\n    resolveTarget() {\n        if (this.target) {\n            return this.target;\n        }\n\n        switch (this.selector) {\n            case '@next':\n                return this.el.nativeElement.nextElementSibling;\n\n            case '@prev':\n                return this.el.nativeElement.previousElementSibling;\n\n            case '@parent':\n                return this.el.nativeElement.parentElement;\n\n            case '@grandparent':\n                return this.el.nativeElement.parentElement.parentElement;\n\n            default:\n                return document.querySelector(this.selector);\n        }\n    }\n\n    bindDocumentListener() {\n        if (!this.documentListener) {\n            this.documentListener = this.renderer.listen(this.el.nativeElement.ownerDocument, 'click', event => {\n                if (getComputedStyle(this.target).getPropertyValue('position') === 'static') {\n                    this.unbindDocumentListener();\n                }\n                else  if (!this.el.nativeElement.isSameNode(event.target) && !this.el.nativeElement.contains(event.target) && !this.target.contains(event.target)) {\n                    this.leave();\n                }\n            });\n        }\n    }\n\n    unbindDocumentListener() {\n        if (this.documentListener) {\n            this.documentListener();\n            this.documentListener = null;\n        }\n    }\n\n    ngOnDestroy() {\n        this.target = null;\n        if (this.eventListener) {\n            this.eventListener();\n        }\n        this.unbindDocumentListener();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [StyleClass],\n    declarations: [StyleClass]\n})\nexport class StyleClassModule { }"]}