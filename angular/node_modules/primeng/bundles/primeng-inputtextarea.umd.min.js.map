{"version":3,"sources":["../../src/app/components/inputtextarea/inputtextarea.ts"],"names":["InputTextarea","el","ngModel","control","this","onResize","EventEmitter","prototype","ngOnInit","_this","ngModelSubscription","valueChanges","subscribe","updateState","ngControlSubscription","ngAfterViewInit","autoResize","resize","onInput","e","updateFilledState","filled","nativeElement","value","length","model","onFocus","onBlur","event","style","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","emit","ngOnDestroy","unsubscribe","Directive","args","selector","host","[class.p-inputtextarea]","[class.p-inputtext]","[class.p-component]","[class.p-filled]","[class.p-inputtextarea-resizable]","ElementRef","NgModel","decorators","type","Optional","NgControl","Input","Output","HostListener","NgModule","imports","CommonModule","exports","declarations"],"mappings":"weA6BI,SAAAA,EAAmBC,EAAmCC,EAAqCC,GAAxEC,KAAAH,GAAAA,EAAmCG,KAAAF,QAAAA,EAAqCE,KAAAD,QAAAA,EAVjFC,KAAAC,SAA8B,IAAIC,EAAAA,oBAY5CN,EAAAO,UAAAC,SAAA,WAAA,IAAAC,EAAAL,KACQA,KAAKF,UACLE,KAAKM,oBAAsBN,KAAKF,QAAQS,aAAaC,WAAU,WAC3DH,EAAKI,kBAITT,KAAKD,UACLC,KAAKU,sBAAwBV,KAAKD,QAAQQ,aAAaC,WAAU,WAC7DH,EAAKI,mBAKjBb,EAAAO,UAAAQ,gBAAA,WACQX,KAAKY,YACLZ,KAAKa,UAIbjB,EAAAO,UAAAW,QAAA,SAAQC,GACJf,KAAKS,eAGTb,EAAAO,UAAAa,kBAAA,WACIhB,KAAKiB,OAAUjB,KAAKH,GAAGqB,cAAcC,OAASnB,KAAKH,GAAGqB,cAAcC,MAAMC,QAAYpB,KAAKF,SAAWE,KAAKF,QAAQuB,OAIvHzB,EAAAO,UAAAmB,QAAA,SAAQP,GACAf,KAAKY,YACLZ,KAAKa,OAAOE,IAKpBnB,EAAAO,UAAAoB,OAAA,SAAOR,GACCf,KAAKY,YACLZ,KAAKa,OAAOE,IAIpBnB,EAAAO,UAAAU,OAAA,SAAOW,GACHxB,KAAKH,GAAGqB,cAAcO,MAAMC,OAAS,OACrC1B,KAAKH,GAAGqB,cAAcO,MAAMC,OAAS1B,KAAKH,GAAGqB,cAAcS,aAAe,KAEtEC,WAAW5B,KAAKH,GAAGqB,cAAcO,MAAMC,SAAWE,WAAW5B,KAAKH,GAAGqB,cAAcO,MAAMI,YACzF7B,KAAKH,GAAGqB,cAAcO,MAAMK,UAAY,SACxC9B,KAAKH,GAAGqB,cAAcO,MAAMC,OAAS1B,KAAKH,GAAGqB,cAAcO,MAAMI,WAGjE7B,KAAKH,GAAGqB,cAAcO,MAAMM,SAAW,SAG3C/B,KAAKC,SAAS+B,KAAKR,GAAO,KAG9B5B,EAAAO,UAAAM,YAAA,WACIT,KAAKgB,oBAEDhB,KAAKY,YACLZ,KAAKa,UAIbjB,EAAAO,UAAA8B,YAAA,WACQjC,KAAKM,qBACLN,KAAKM,oBAAoB4B,cAGzBlC,KAAKU,uBACLV,KAAKU,sBAAsBwB,wCAjGtCC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,mBACVC,KAAM,CACFC,0BAA2B,OAC3BC,sBAAuB,OACvBC,sBAAuB,OACvBC,mBAAoB,SACpBC,oCAAqC,2DAZlBC,EAAAA,kBACnBC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KA4ByBC,EAAAA,kBA5BvBC,EAAAA,UAASH,WAAA,CAAA,CAAAC,KA4BmDC,EAAAA,kDAZxEE,EAAAA,wBAEAC,EAAAA,wBA+BAC,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,4BASvBgB,EAAAA,aAAYhB,KAAA,CAAC,QAAS,CAAC,2BAOvBgB,EAAAA,aAAYhB,KAAA,CAAC,OAAQ,CAAC,oBA8C3B,iCALCiB,EAAAA,SAAQjB,KAAA,CAAC,CACNkB,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC5D,GACV6D,aAAc,CAAC7D","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,DoCheck,EventEmitter,Optional, AfterViewInit, AfterContentInit, OnInit, OnDestroy, AfterViewChecked} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n    }\n})\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy  {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n"]}