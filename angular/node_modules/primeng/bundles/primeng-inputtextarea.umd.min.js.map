{"version":3,"sources":["ng://primeng/inputtextarea/inputtextarea.ts"],"names":["InputTextarea","el","ngModel","this","onResize","EventEmitter","prototype","ngDoCheck","updateFilledState","autoResize","resize","onInput","e","filled","nativeElement","value","length","model","onFocus","onBlur","event","style","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","emit","ElementRef","NgModel","decorators","type","Optional","__decorate","Input","Output","HostListener","Directive","selector","host","[class.ui-inputtext]","[class.ui-corner-all]","[class.ui-inputtextarea-resizable]","[class.ui-state-default]","[class.ui-widget]","[class.ui-state-filled]","__param","InputTextareaModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"k1BAAAA,EAAA,WAyBI,SAAAA,EAAmBC,EAAmCC,GAAnCC,KAAAF,GAAAA,EAAmCE,KAAAD,QAAAA,EAN5CC,KAAAC,SAA8B,IAAIC,EAAAA,aAyDhD,OAjDIL,EAAAM,UAAAC,UAAA,WACIJ,KAAKK,oBAEDL,KAAKM,YACLN,KAAKO,UAMbV,EAAAM,UAAAK,QAAA,SAAQC,GACJT,KAAKK,oBACDL,KAAKM,YACLN,KAAKO,OAAOE,IAIpBZ,EAAAM,UAAAE,kBAAA,WACIL,KAAKU,OAAUV,KAAKF,GAAGa,cAAcC,OAASZ,KAAKF,GAAGa,cAAcC,MAAMC,QAAYb,KAAKD,SAAWC,KAAKD,QAAQe,OAIvHjB,EAAAM,UAAAY,QAAA,SAAQN,GACAT,KAAKM,YACLN,KAAKO,OAAOE,IAKpBZ,EAAAM,UAAAa,OAAA,SAAOP,GACCT,KAAKM,YACLN,KAAKO,OAAOE,IAIpBZ,EAAAM,UAAAI,OAAA,SAAOU,GACHjB,KAAKF,GAAGa,cAAcO,MAAMC,OAAS,OACrCnB,KAAKF,GAAGa,cAAcO,MAAMC,OAASnB,KAAKF,GAAGa,cAAcS,aAAe,KAEtEC,WAAWrB,KAAKF,GAAGa,cAAcO,MAAMC,SAAWE,WAAWrB,KAAKF,GAAGa,cAAcO,MAAMI,YACzFtB,KAAKF,GAAGa,cAAcO,MAAMK,UAAY,SACxCvB,KAAKF,GAAGa,cAAcO,MAAMC,OAASnB,KAAKF,GAAGa,cAAcO,MAAMI,WAGjEtB,KAAKF,GAAGa,cAAcO,MAAMM,SAAW,SAG3CxB,KAAKC,SAASwB,KAAKR,GAAO,8CAjDPS,EAAAA,kBAAwCC,EAAAA,QAAOC,WAAA,CAAA,CAAAC,KAAlCC,EAAAA,cAR3BC,EAAA,CAARC,EAAAA,0CAESD,EAAA,CAATE,EAAAA,yCAkBDF,EAAA,CADCG,EAAAA,aAAa,QAAS,CAAC,wCAaxBH,EAAA,CADCG,EAAAA,aAAa,QAAS,CAAC,wCAQxBH,EAAA,CADCG,EAAAA,aAAa,OAAQ,CAAC,uCAxCdrC,EAAakC,EAAA,CAXzBI,EAAAA,UAAU,CACPC,SAAU,mBACVC,KAAM,CACFC,uBAAwB,OACxBC,wBAAyB,OACzBC,qCAAsC,aACtCC,2BAA4B,OAC5BC,oBAAqB,OACrBC,0BAA2B,YAaKC,EAAA,EAAAd,EAAAA,aAV3BjC,GAfb,gBAmFA,SAAAgD,KAAmC,OAAtBA,EAAmBd,EAAA,CAL/Be,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACpD,GACVqD,aAAc,CAACrD,MAENgD","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,DoCheck,EventEmitter,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.ui-inputtext]': 'true',\n        '[class.ui-corner-all]': 'true',\n        '[class.ui-inputtextarea-resizable]': 'autoResize',\n        '[class.ui-state-default]': 'true',\n        '[class.ui-widget]': 'true',\n        '[class.ui-state-filled]': 'filled'\n    }\n})\nexport class InputTextarea implements DoCheck {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n        \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n    \n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) || (this.ngModel && this.ngModel.model);\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n"]}