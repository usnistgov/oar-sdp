import { ElementRef, AfterViewChecked, AfterContentInit, OnDestroy, EventEmitter, QueryList, TemplateRef, Renderer2, ChangeDetectorRef, IterableDiffers } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/inputtext';
import * as ɵngcc3 from 'primeng/button';
import * as ɵngcc4 from 'primeng/api';
export declare const AUTOCOMPLETE_VALUE_ACCESSOR: any;
export declare class AutoComplete implements AfterViewChecked, AfterContentInit, OnDestroy, ControlValueAccessor {
    el: ElementRef;
    renderer: Renderer2;
    cd: ChangeDetectorRef;
    differs: IterableDiffers;
    minLength: number;
    delay: number;
    style: any;
    panelStyle: any;
    styleClass: string;
    panelStyleClass: string;
    inputStyle: any;
    inputId: string;
    inputStyleClass: string;
    placeholder: string;
    readonly: boolean;
    disabled: boolean;
    maxlength: number;
    name: string;
    required: boolean;
    size: number;
    appendTo: any;
    autoHighlight: boolean;
    forceSelection: boolean;
    type: string;
    autoZIndex: boolean;
    baseZIndex: number;
    ariaLabel: string;
    ariaLabelledBy: string;
    dropdownIcon: string;
    unique: boolean;
    completeOnFocus: boolean;
    completeMethod: EventEmitter<any>;
    onSelect: EventEmitter<any>;
    onUnselect: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    onDropdownClick: EventEmitter<any>;
    onClear: EventEmitter<any>;
    onKeyUp: EventEmitter<any>;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    field: string;
    scrollHeight: string;
    dropdown: boolean;
    dropdownMode: string;
    multiple: boolean;
    tabindex: number;
    dataKey: string;
    emptyMessage: string;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    autofocus: boolean;
    autocomplete: string;
    inputEL: ElementRef;
    multiInputEL: ElementRef;
    multiContainerEL: ElementRef;
    dropdownButton: ElementRef;
    templates: QueryList<any>;
    overlay: HTMLDivElement;
    itemTemplate: TemplateRef<any>;
    selectedItemTemplate: TemplateRef<any>;
    value: any;
    _suggestions: any[];
    onModelChange: Function;
    onModelTouched: Function;
    timeout: any;
    overlayVisible: boolean;
    documentClickListener: any;
    suggestionsUpdated: boolean;
    highlightOption: any;
    highlightOptionChanged: boolean;
    focus: boolean;
    filled: boolean;
    inputClick: boolean;
    inputKeyDown: boolean;
    noResults: boolean;
    differ: any;
    inputFieldValue: string;
    loading: boolean;
    documentResizeListener: any;
    forceSelectionUpdateModelTimeout: any;
    listId: string;
    itemClicked: boolean;
    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, differs: IterableDiffers);
    suggestions: any[];
    ngAfterViewChecked(): void;
    handleSuggestionsChange(): void;
    ngAfterContentInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    onInput(event: Event): void;
    onInputClick(event: MouseEvent): void;
    search(event: any, query: string): void;
    selectItem(option: any, focus?: boolean): void;
    show(): void;
    onOverlayAnimationStart(event: AnimationEvent): void;
    onOverlayAnimationDone(event: AnimationEvent): void;
    appendOverlay(): void;
    resolveFieldData(value: any): any;
    restoreOverlayAppend(): void;
    alignOverlay(): void;
    hide(): void;
    handleDropdownClick(event: any): void;
    focusInput(): void;
    removeItem(item: any): void;
    onKeydown(event: any): void;
    onKeyup(event: any): void;
    onInputFocus(event: any): void;
    onInputBlur(event: any): void;
    onInputChange(event: any): void;
    onInputPaste(event: ClipboardEvent): void;
    isSelected(val: any): boolean;
    findOptionIndex(option: any): number;
    updateFilledState(): void;
    updateInputField(): void;
    bindDocumentClickListener(): void;
    isDropdownClick(event: any): boolean;
    unbindDocumentClickListener(): void;
    bindDocumentResizeListener(): void;
    unbindDocumentResizeListener(): void;
    onWindowResize(): void;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AutoComplete, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AutoComplete, "p-autoComplete", never, { "minLength": "minLength"; "delay": "delay"; "type": "type"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "dropdownIcon": "dropdownIcon"; "unique": "unique"; "completeOnFocus": "completeOnFocus"; "scrollHeight": "scrollHeight"; "dropdownMode": "dropdownMode"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "autocomplete": "autocomplete"; "suggestions": "suggestions"; "disabled": "disabled"; "style": "style"; "panelStyle": "panelStyle"; "styleClass": "styleClass"; "panelStyleClass": "panelStyleClass"; "inputStyle": "inputStyle"; "inputId": "inputId"; "inputStyleClass": "inputStyleClass"; "placeholder": "placeholder"; "readonly": "readonly"; "maxlength": "maxlength"; "name": "name"; "required": "required"; "size": "size"; "appendTo": "appendTo"; "autoHighlight": "autoHighlight"; "forceSelection": "forceSelection"; "ariaLabel": "ariaLabel"; "ariaLabelledBy": "ariaLabelledBy"; "field": "field"; "dropdown": "dropdown"; "multiple": "multiple"; "tabindex": "tabindex"; "dataKey": "dataKey"; "emptyMessage": "emptyMessage"; "autofocus": "autofocus"; }, { "completeMethod": "completeMethod"; "onSelect": "onSelect"; "onUnselect": "onUnselect"; "onFocus": "onFocus"; "onBlur": "onBlur"; "onDropdownClick": "onDropdownClick"; "onClear": "onClear"; "onKeyUp": "onKeyUp"; "onShow": "onShow"; "onHide": "onHide"; }, ["templates"], never>;
}
export declare class AutoCompleteModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<AutoCompleteModule, [typeof AutoComplete], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.InputTextModule, typeof ɵngcc3.ButtonModule, typeof ɵngcc4.SharedModule], [typeof AutoComplete, typeof ɵngcc4.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<AutoCompleteModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b2NvbXBsZXRlLmQudHMiLCJzb3VyY2VzIjpbImF1dG9jb21wbGV0ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErSEE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyVmlld0NoZWNrZWQsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBSZW5kZXJlcjIsIENoYW5nZURldGVjdG9yUmVmLCBJdGVyYWJsZURpZmZlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEFVVE9DT01QTEVURV9WQUxVRV9BQ0NFU1NPUjogYW55O1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXV0b0NvbXBsZXRlIGltcGxlbWVudHMgQWZ0ZXJWaWV3Q2hlY2tlZCwgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgZWw6IEVsZW1lbnRSZWY7XG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMjtcbiAgICBjZDogQ2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgZGlmZmVyczogSXRlcmFibGVEaWZmZXJzO1xuICAgIG1pbkxlbmd0aDogbnVtYmVyO1xuICAgIGRlbGF5OiBudW1iZXI7XG4gICAgc3R5bGU6IGFueTtcbiAgICBwYW5lbFN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHBhbmVsU3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGlucHV0U3R5bGU6IGFueTtcbiAgICBpbnB1dElkOiBzdHJpbmc7XG4gICAgaW5wdXRTdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICByZWFkb25seTogYm9vbGVhbjtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBtYXhsZW5ndGg6IG51bWJlcjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcmVxdWlyZWQ6IGJvb2xlYW47XG4gICAgc2l6ZTogbnVtYmVyO1xuICAgIGFwcGVuZFRvOiBhbnk7XG4gICAgYXV0b0hpZ2hsaWdodDogYm9vbGVhbjtcbiAgICBmb3JjZVNlbGVjdGlvbjogYm9vbGVhbjtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgYXV0b1pJbmRleDogYm9vbGVhbjtcbiAgICBiYXNlWkluZGV4OiBudW1iZXI7XG4gICAgYXJpYUxhYmVsOiBzdHJpbmc7XG4gICAgYXJpYUxhYmVsbGVkQnk6IHN0cmluZztcbiAgICBkcm9wZG93bkljb246IHN0cmluZztcbiAgICB1bmlxdWU6IGJvb2xlYW47XG4gICAgY29tcGxldGVPbkZvY3VzOiBib29sZWFuO1xuICAgIGNvbXBsZXRlTWV0aG9kOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvblNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25VbnNlbGVjdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Gb2N1czogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25CbHVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBvbkRyb3Bkb3duQ2xpY2s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uQ2xlYXI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uS2V5VXA6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIG9uU2hvdzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25IaWRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBmaWVsZDogc3RyaW5nO1xuICAgIHNjcm9sbEhlaWdodDogc3RyaW5nO1xuICAgIGRyb3Bkb3duOiBib29sZWFuO1xuICAgIGRyb3Bkb3duTW9kZTogc3RyaW5nO1xuICAgIG11bHRpcGxlOiBib29sZWFuO1xuICAgIHRhYmluZGV4OiBudW1iZXI7XG4gICAgZGF0YUtleTogc3RyaW5nO1xuICAgIGVtcHR5TWVzc2FnZTogc3RyaW5nO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGF1dG9mb2N1czogYm9vbGVhbjtcbiAgICBhdXRvY29tcGxldGU6IHN0cmluZztcbiAgICBpbnB1dEVMOiBFbGVtZW50UmVmO1xuICAgIG11bHRpSW5wdXRFTDogRWxlbWVudFJlZjtcbiAgICBtdWx0aUNvbnRhaW5lckVMOiBFbGVtZW50UmVmO1xuICAgIGRyb3Bkb3duQnV0dG9uOiBFbGVtZW50UmVmO1xuICAgIHRlbXBsYXRlczogUXVlcnlMaXN0PGFueT47XG4gICAgb3ZlcmxheTogSFRNTERpdkVsZW1lbnQ7XG4gICAgaXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHNlbGVjdGVkSXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIHZhbHVlOiBhbnk7XG4gICAgX3N1Z2dlc3Rpb25zOiBhbnlbXTtcbiAgICBvbk1vZGVsQ2hhbmdlOiBGdW5jdGlvbjtcbiAgICBvbk1vZGVsVG91Y2hlZDogRnVuY3Rpb247XG4gICAgdGltZW91dDogYW55O1xuICAgIG92ZXJsYXlWaXNpYmxlOiBib29sZWFuO1xuICAgIGRvY3VtZW50Q2xpY2tMaXN0ZW5lcjogYW55O1xuICAgIHN1Z2dlc3Rpb25zVXBkYXRlZDogYm9vbGVhbjtcbiAgICBoaWdobGlnaHRPcHRpb246IGFueTtcbiAgICBoaWdobGlnaHRPcHRpb25DaGFuZ2VkOiBib29sZWFuO1xuICAgIGZvY3VzOiBib29sZWFuO1xuICAgIGZpbGxlZDogYm9vbGVhbjtcbiAgICBpbnB1dENsaWNrOiBib29sZWFuO1xuICAgIGlucHV0S2V5RG93bjogYm9vbGVhbjtcbiAgICBub1Jlc3VsdHM6IGJvb2xlYW47XG4gICAgZGlmZmVyOiBhbnk7XG4gICAgaW5wdXRGaWVsZFZhbHVlOiBzdHJpbmc7XG4gICAgbG9hZGluZzogYm9vbGVhbjtcbiAgICBkb2N1bWVudFJlc2l6ZUxpc3RlbmVyOiBhbnk7XG4gICAgZm9yY2VTZWxlY3Rpb25VcGRhdGVNb2RlbFRpbWVvdXQ6IGFueTtcbiAgICBsaXN0SWQ6IHN0cmluZztcbiAgICBpdGVtQ2xpY2tlZDogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgY2Q6IENoYW5nZURldGVjdG9yUmVmLCBkaWZmZXJzOiBJdGVyYWJsZURpZmZlcnMpO1xuICAgIHN1Z2dlc3Rpb25zOiBhbnlbXTtcbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKTogdm9pZDtcbiAgICBoYW5kbGVTdWdnZXN0aW9uc0NoYW5nZSgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgc2V0RGlzYWJsZWRTdGF0ZSh2YWw6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG9uSW5wdXQoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbklucHV0Q2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHNlYXJjaChldmVudDogYW55LCBxdWVyeTogc3RyaW5nKTogdm9pZDtcbiAgICBzZWxlY3RJdGVtKG9wdGlvbjogYW55LCBmb2N1cz86IGJvb2xlYW4pOiB2b2lkO1xuICAgIHNob3coKTogdm9pZDtcbiAgICBvbk92ZXJsYXlBbmltYXRpb25TdGFydChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUFuaW1hdGlvbkRvbmUoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBhcHBlbmRPdmVybGF5KCk6IHZvaWQ7XG4gICAgcmVzb2x2ZUZpZWxkRGF0YSh2YWx1ZTogYW55KTogYW55O1xuICAgIHJlc3RvcmVPdmVybGF5QXBwZW5kKCk6IHZvaWQ7XG4gICAgYWxpZ25PdmVybGF5KCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIGhhbmRsZURyb3Bkb3duQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZm9jdXNJbnB1dCgpOiB2b2lkO1xuICAgIHJlbW92ZUl0ZW0oaXRlbTogYW55KTogdm9pZDtcbiAgICBvbktleWRvd24oZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25LZXl1cChldmVudDogYW55KTogdm9pZDtcbiAgICBvbklucHV0Rm9jdXMoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dEJsdXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25JbnB1dENoYW5nZShldmVudDogYW55KTogdm9pZDtcbiAgICBvbklucHV0UGFzdGUoZXZlbnQ6IENsaXBib2FyZEV2ZW50KTogdm9pZDtcbiAgICBpc1NlbGVjdGVkKHZhbDogYW55KTogYm9vbGVhbjtcbiAgICBmaW5kT3B0aW9uSW5kZXgob3B0aW9uOiBhbnkpOiBudW1iZXI7XG4gICAgdXBkYXRlRmlsbGVkU3RhdGUoKTogdm9pZDtcbiAgICB1cGRhdGVJbnB1dEZpZWxkKCk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcigpOiB2b2lkO1xuICAgIGlzRHJvcGRvd25DbGljayhldmVudDogYW55KTogYm9vbGVhbjtcbiAgICB1bmJpbmREb2N1bWVudENsaWNrTGlzdGVuZXIoKTogdm9pZDtcbiAgICBiaW5kRG9jdW1lbnRSZXNpemVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZERvY3VtZW50UmVzaXplTGlzdGVuZXIoKTogdm9pZDtcbiAgICBvbldpbmRvd1Jlc2l6ZSgpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUhpZGUoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXV0b0NvbXBsZXRlTW9kdWxlIHtcbn1cbiJdfQ==