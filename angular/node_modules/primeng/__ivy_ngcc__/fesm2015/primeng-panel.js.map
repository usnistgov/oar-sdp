{"version":3,"file":"primeng-panel.js","sources":["ng:/primeng/panel/panel.ts","ng:/primeng/panel/primeng-panel.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef,ContentChild,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Footer} from 'primeng/api';\nimport {BlockableUI} from 'primeng/api';\nimport {trigger,state,style,transition,animate} from '@angular/animations';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-panel',\n    template: `\n        <div [attr.id]=\"id\" [ngClass]=\"'ui-panel ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div [ngClass]=\"{'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all': true, 'ui-panel-titlebar-clickable': (toggleable && toggler === 'header')}\" \n                *ngIf=\"showHeader\" (click)=\"onHeaderClick($event)\" [attr.id]=\"id + '-titlebar'\">\n                <span class=\"ui-panel-title\" *ngIf=\"header\" [attr.id]=\"id + '_header'\">{{header}}</span>\n                <ng-content select=\"p-header\"></ng-content>\n                <a *ngIf=\"toggleable\" [attr.id]=\"id + '-label'\" class=\"ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default\" tabindex=\"0\"\n                    (click)=\"onIconClick($event)\" (keydown.enter)=\"onIconClick($event)\" [attr.aria-controls]=\"id + '-content'\" role=\"tab\" [attr.aria-expanded]=\"!collapsed\">\n                    <span [class]=\"collapsed ? expandIcon : collapseIcon\"></span>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"ui-panel-content-wrapper\" [@panelContent]=\"collapsed ? {value: 'hidden', params: {transitionParams: animating ? transitionOptions : '0ms', height: '0', opacity:'0'}} : {value: 'visible', params: {transitionParams: animating ? transitionOptions : '0ms', height: '*', opacity: '1'}}\" (@panelContent.done)=\"onToggleDone($event)\"\n                [ngClass]=\"{'ui-panel-content-wrapper-overflown': collapsed||animating}\"\n                role=\"region\" [attr.aria-hidden]=\"collapsed\" [attr.aria-labelledby]=\"id  + '-titlebar'\">\n                <div class=\"ui-panel-content ui-widget-content\">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class=\"ui-panel-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('panelContent', [\n            state('hidden', style({\n                height: '0',\n                opacity: 0\n            })),\n            state('void', style({\n                height: '{{height}}',\n                opacity: '{{opacity}}'\n            }), {params: {height: '0', opacity: '0'}}),\n            state('visible', style({\n                height: '*',\n                opacity: 1\n            })),\n            transition('visible <=> hidden', animate('{{transitionParams}}')),\n            transition('void => hidden', animate('{{transitionParams}}')),\n            transition('void => visible', animate('{{transitionParams}}'))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class Panel implements BlockableUI {\n\n    @Input() toggleable: boolean;\n\n    @Input() header: string;\n\n    @Input() collapsed: boolean = false;\n    \n    @Input() style: any;\n    \n    @Input() styleClass: string;\n    \n    @Input() expandIcon: string = 'pi pi-plus';\n    \n    @Input() collapseIcon: string = 'pi pi-minus';\n  \n    @Input() showHeader: boolean = true;\n\n    @Input() toggler: string = \"icon\";\n    \n    @Output() collapsedChange: EventEmitter<any> = new EventEmitter();\n\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\n\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\n    \n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChild(Footer) footerFacet;\n    \n    animating: boolean;\n    \n    id: string = `ui-panel-${idx++}`;\n    \n    constructor(private el: ElementRef) {}\n\n    onHeaderClick(event: Event) {\n        if (this.toggler === 'header') {\n            this.toggle(event);\n        }\n    }\n\n    onIconClick(event: Event) {\n        if (this.toggler === 'icon') {\n            this.toggle(event);\n        }\n    }\n    \n    toggle(event: Event) {\n        if (this.animating) {\n            return false;\n        }\n        \n        this.animating = true;\n        this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\n        \n        if (this.toggleable) {\n            if (this.collapsed)\n                this.expand(event);\n            else\n                this.collapse(event);\n        }\n        \n        event.preventDefault();\n    }\n    \n    expand(event) {\n        this.collapsed = false;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    collapse(event) {\n        this.collapsed = true;\n        this.collapsedChange.emit(this.collapsed);\n    }\n    \n    getBlockableElement(): HTMLElementÂ {\n        return this.el.nativeElement.children[0];\n    }\n    \n    onToggleDone(event: Event) {\n        this.animating = false;\n        this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Panel,SharedModule],\n    declarations: [Panel]\n})\nexport class PanelModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}