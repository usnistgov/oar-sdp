{"version":3,"file":"primeng-blockui.js","sources":["../../src/app/components/blockui/blockui.ts","../../src/app/components/blockui/primeng-blockui.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, ContentChildren, QueryList, TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {PrimeTemplate} from 'primeng/api';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask [class]=\"styleClass\" [ngClass]=\"{'p-blockui-document':!target, 'p-blockui p-component-overlay': true}\" [ngStyle]=\"{display: blocked ? 'flex' : 'none'}\">\n            <ng-content></ng-content>\n            <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./blockui.css']\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @Input() styleClass: string;\n    \n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    @ViewChild('mask') mask: ElementRef;\n    \n    _blocked: boolean;\n\n    contentTemplate: TemplateRef<any>;\n        \n    constructor(public el: ElementRef, public cd: ChangeDetectorRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            this.target.getBlockableElement().style.position = 'relative';\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}