{"version":3,"file":"primeng-defer.js","sources":["../../src/app/components/defer/defer.ts","../../src/app/components/defer/primeng-defer.ts"],"names":[],"mappings":";;;;MAOa,cAAc;AAAG,IAU1B,YAAmB,EAAc,EAAS,QAAmB,EAAS,aAA+B;AAAI,QAAtF,OAAE,GAAF,EAAE,CAAY;AAAC,QAAQ,aAAQ,GAAR,QAAQ,CAAW;AAAC,QAAQ,kBAAa,GAAb,aAAa,CAAkB;AAAC,QAR5F,WAAM,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC7D,KAO6G;AAC7G,IACI,eAAe;AACnB,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AAC/B,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC;AACxB,SAAS;AACT,QACQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;AAC9B,YAAY,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACnF,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AACvC,oBAAoB,IAAI,CAAC,IAAI,EAAE,CAAC;AAChC,oBAAoB,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAClD,oBAAoB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACvD,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK;AACL,IACI,UAAU;AAAK,QACX,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;AAC7B,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS;AACT,aAAa;AACb,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;AACrE,YAAY,IAAI,UAAU,GAAG,QAAQ,CAAC,eAAe,CAAC;AACtD,YAAY,IAAI,SAAS,GAAG,UAAU,CAAC,YAAY,CAAC;AACpD,YACY,QAAQ,SAAS,IAAI,IAAI,CAAC,GAAG,EAAE;AAC3C,SAAS;AACT,KAAK;AACL,IACI,IAAI;AAAK,QACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAC3B,KAAK;AACL,IACI,QAAQ;AACZ,QAAQ,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;AACjC,KAAK;AACL,IACI,WAAW;AACf,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QACQ,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACzC,YAAY,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC1C,SAAS;AACT,KAAK;AACL;0CA5DC,SAAS,SAAC,kBACP,QAAQ,EAAE,UAAU,cACvB;;;;;;0CACI;AAAC;AAAwC,YAPnB,UAAU;AAAI,YAChB,SAAS;AAAI,YAA9B,gBAAgB;AAAG;AAAG;AAAkC,qBAQ3D,MAAM;AAAK,uBAEX,YAAY,SAAC,WAAW;AAAM;;;;;;;;;;;oBAAE;AAAC,MA4DzB,WAAW;AAAG;uCAL1B,QAAQ,SAAC;OACN,OAAO,EAAE,CAAC,YAAY,CAAC,kBACvB,OAAO,EAAE,CAAC,cAAc,CAAC,kBACzB,YAAY,EAAE,CAAC,cAAc,CAAC,cACjC;;;;;;;;;0BACI;AAAC;ACvEN;AACA;AACA;AACA;AACA;AACU","sourcesContent":["import {NgModule,Directive,ElementRef,AfterViewInit,OnDestroy,TemplateRef,EmbeddedViewRef,\n        ViewContainerRef,Renderer2,EventEmitter,Output,ContentChild} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pDefer]'\n})\nexport class DeferredLoader implements AfterViewInit,OnDestroy {\n        \n    @Output() onLoad: EventEmitter<any> = new EventEmitter();\n    \n    @ContentChild(TemplateRef) template: TemplateRef<any>;\n        \n    documentScrollListener: Function;\n    \n    view: EmbeddedViewRef<any>;\n            \n    constructor(public el: ElementRef, public renderer: Renderer2, public viewContainer: ViewContainerRef) {}\n    \n    ngAfterViewInit() {\n        if (this.shouldLoad()) {\n            this.load();\n        }\n        \n        if (!this.isLoaded()) {\n            this.documentScrollListener = this.renderer.listen('window', 'scroll', () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.documentScrollListener();\n                    this.documentScrollListener = null;\n                }\n            });\n        }\n    }\n    \n    shouldLoad(): boolean {\n        if (this.isLoaded()) {\n            return false;\n        }\n        else {\n            let rect = this.el.nativeElement.getBoundingClientRect();\n            let docElement = document.documentElement;\n            let winHeight = docElement.clientHeight;\n            \n            return (winHeight >= rect.top);\n        }\n    }\n    \n    load(): void { \n        this.view = this.viewContainer.createEmbeddedView(this.template);\n        this.onLoad.emit();\n    }\n    \n    isLoaded() {\n        return this.view != null;\n    }\n            \n    ngOnDestroy() {\n        this.view = null;\n        \n        if (this.documentScrollListener) {\n            this.documentScrollListener();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [DeferredLoader],\n    declarations: [DeferredLoader]\n})\nexport class DeferModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}