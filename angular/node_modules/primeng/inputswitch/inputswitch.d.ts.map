{"version":3,"file":"inputswitch.d.ts","sources":["inputswitch.d.ts"],"names":[],"mappings":"AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const INPUTSWITCH_VALUE_ACCESSOR: any;\nexport declare class InputSwitch implements ControlValueAccessor {\n    private cd;\n    style: any;\n    styleClass: string;\n    tabindex: number;\n    inputId: string;\n    name: string;\n    disabled: boolean;\n    readonly: boolean;\n    ariaLabelledBy: string;\n    onChange: EventEmitter<any>;\n    checked: boolean;\n    focused: boolean;\n    onModelChange: Function;\n    onModelTouched: Function;\n    constructor(cd: ChangeDetectorRef);\n    onClick(event: Event, cb: HTMLInputElement): void;\n    onInputChange(event: Event): void;\n    toggle(event: Event): void;\n    updateModel(event: Event, value: boolean): void;\n    onFocus(event: Event): void;\n    onBlur(event: Event): void;\n    writeValue(checked: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n}\nexport declare class InputSwitchModule {\n}\n"]}