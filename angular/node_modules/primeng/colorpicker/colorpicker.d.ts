import { ElementRef, OnDestroy, EventEmitter, Renderer2, ChangeDetectorRef } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const COLORPICKER_VALUE_ACCESSOR: any;
export declare class ColorPicker implements ControlValueAccessor, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    cd: ChangeDetectorRef;
    style: any;
    styleClass: string;
    inline: boolean;
    format: string;
    appendTo: string;
    disabled: boolean;
    tabindex: string;
    inputId: string;
    autoZIndex: boolean;
    baseZIndex: number;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onChange: EventEmitter<any>;
    inputViewChild: ElementRef;
    value: any;
    inputBgColor: string;
    shown: boolean;
    overlayVisible: boolean;
    defaultColor: string;
    onModelChange: Function;
    onModelTouched: Function;
    documentClickListener: Function;
    documentMousemoveListener: Function;
    documentMouseupListener: Function;
    documentHueMoveListener: Function;
    selfClick: boolean;
    colorDragging: boolean;
    hueDragging: boolean;
    overlay: HTMLDivElement;
    colorSelectorViewChild: ElementRef;
    colorHandleViewChild: ElementRef;
    hueViewChild: ElementRef;
    hueHandleViewChild: ElementRef;
    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef);
    colorSelector: ElementRef;
    colorHandle: ElementRef;
    hue: ElementRef;
    hueHandle: ElementRef;
    onHueMousedown(event: MouseEvent): void;
    pickHue(event: MouseEvent): void;
    onColorMousedown(event: MouseEvent): void;
    pickColor(event: MouseEvent): void;
    getValueToUpdate(): any;
    updateModel(): void;
    writeValue(value: any): void;
    updateColorSelector(): void;
    updateUI(): void;
    onInputFocus(): void;
    show(): void;
    onOverlayAnimationStart(event: AnimationEvent): void;
    appendOverlay(): void;
    restoreOverlayAppend(): void;
    alignOverlay(): void;
    hide(): void;
    onInputClick(): void;
    togglePanel(): void;
    onInputKeydown(event: KeyboardEvent): void;
    onPanelClick(): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    bindDocumentClickListener(): void;
    unbindDocumentClickListener(): void;
    bindDocumentMousemoveListener(): void;
    unbindDocumentMousemoveListener(): void;
    bindDocumentMouseupListener(): void;
    unbindDocumentMouseupListener(): void;
    validateHSB(hsb: any): {
        h: number;
        s: number;
        b: number;
    };
    validateRGB(rgb: any): {
        r: number;
        g: number;
        b: number;
    };
    validateHEX(hex: any): any;
    HEXtoRGB(hex: any): {
        r: number;
        g: number;
        b: number;
    };
    HEXtoHSB(hex: any): {
        h: number;
        s: number;
        b: number;
    };
    RGBtoHSB(rgb: any): {
        h: number;
        s: number;
        b: number;
    };
    HSBtoRGB(hsb: any): {
        r: number;
        g: number;
        b: number;
    };
    RGBtoHEX(rgb: any): string;
    HSBtoHEX(hsb: any): string;
    onOverlayHide(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ColorPicker, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ColorPicker, "p-colorPicker", never, { "format": "format"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "disabled": "disabled"; "style": "style"; "styleClass": "styleClass"; "inline": "inline"; "appendTo": "appendTo"; "tabindex": "tabindex"; "inputId": "inputId"; }, { "onChange": "onChange"; }, never, never>;
}
export declare class ColorPickerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ColorPickerModule, [typeof ColorPicker], [typeof ɵngcc1.CommonModule], [typeof ColorPicker]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ColorPickerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3JwaWNrZXIuZC50cyIsInNvdXJjZXMiOlsiY29sb3JwaWNrZXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJHQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIsIFJlbmRlcmVyMiwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IENPTE9SUElDS0VSX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDb2xvclBpY2tlciBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHJlbmRlcmVyOiBSZW5kZXJlcjI7XG4gICAgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGlubGluZTogYm9vbGVhbjtcbiAgICBmb3JtYXQ6IHN0cmluZztcbiAgICBhcHBlbmRUbzogc3RyaW5nO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHRhYmluZGV4OiBzdHJpbmc7XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIGF1dG9aSW5kZXg6IGJvb2xlYW47XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBpbnB1dFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB2YWx1ZTogYW55O1xuICAgIGlucHV0QmdDb2xvcjogc3RyaW5nO1xuICAgIHNob3duOiBib29sZWFuO1xuICAgIG92ZXJsYXlWaXNpYmxlOiBib29sZWFuO1xuICAgIGRlZmF1bHRDb2xvcjogc3RyaW5nO1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICBkb2N1bWVudENsaWNrTGlzdGVuZXI6IEZ1bmN0aW9uO1xuICAgIGRvY3VtZW50TW91c2Vtb3ZlTGlzdGVuZXI6IEZ1bmN0aW9uO1xuICAgIGRvY3VtZW50TW91c2V1cExpc3RlbmVyOiBGdW5jdGlvbjtcbiAgICBkb2N1bWVudEh1ZU1vdmVMaXN0ZW5lcjogRnVuY3Rpb247XG4gICAgc2VsZkNsaWNrOiBib29sZWFuO1xuICAgIGNvbG9yRHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgaHVlRHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgb3ZlcmxheTogSFRNTERpdkVsZW1lbnQ7XG4gICAgY29sb3JTZWxlY3RvclZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBjb2xvckhhbmRsZVZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBodWVWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgaHVlSGFuZGxlVmlld0NoaWxkOiBFbGVtZW50UmVmO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBjZDogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGNvbG9yU2VsZWN0b3I6IEVsZW1lbnRSZWY7XG4gICAgY29sb3JIYW5kbGU6IEVsZW1lbnRSZWY7XG4gICAgaHVlOiBFbGVtZW50UmVmO1xuICAgIGh1ZUhhbmRsZTogRWxlbWVudFJlZjtcbiAgICBvbkh1ZU1vdXNlZG93bihldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgcGlja0h1ZShldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgb25Db2xvck1vdXNlZG93bihldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgcGlja0NvbG9yKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBnZXRWYWx1ZVRvVXBkYXRlKCk6IGFueTtcbiAgICB1cGRhdGVNb2RlbCgpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgdXBkYXRlQ29sb3JTZWxlY3RvcigpOiB2b2lkO1xuICAgIHVwZGF0ZVVJKCk6IHZvaWQ7XG4gICAgb25JbnB1dEZvY3VzKCk6IHZvaWQ7XG4gICAgc2hvdygpOiB2b2lkO1xuICAgIG9uT3ZlcmxheUFuaW1hdGlvblN0YXJ0KGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgYXBwZW5kT3ZlcmxheSgpOiB2b2lkO1xuICAgIHJlc3RvcmVPdmVybGF5QXBwZW5kKCk6IHZvaWQ7XG4gICAgYWxpZ25PdmVybGF5KCk6IHZvaWQ7XG4gICAgaGlkZSgpOiB2b2lkO1xuICAgIG9uSW5wdXRDbGljaygpOiB2b2lkO1xuICAgIHRvZ2dsZVBhbmVsKCk6IHZvaWQ7XG4gICAgb25JbnB1dEtleWRvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkO1xuICAgIG9uUGFuZWxDbGljaygpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogRnVuY3Rpb24pOiB2b2lkO1xuICAgIHNldERpc2FibGVkU3RhdGUodmFsOiBib29sZWFuKTogdm9pZDtcbiAgICBiaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRDbGlja0xpc3RlbmVyKCk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50TW91c2Vtb3ZlTGlzdGVuZXIoKTogdm9pZDtcbiAgICB1bmJpbmREb2N1bWVudE1vdXNlbW92ZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50TW91c2V1cExpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRNb3VzZXVwTGlzdGVuZXIoKTogdm9pZDtcbiAgICB2YWxpZGF0ZUhTQihoc2I6IGFueSk6IHtcbiAgICAgICAgaDogbnVtYmVyO1xuICAgICAgICBzOiBudW1iZXI7XG4gICAgICAgIGI6IG51bWJlcjtcbiAgICB9O1xuICAgIHZhbGlkYXRlUkdCKHJnYjogYW55KToge1xuICAgICAgICByOiBudW1iZXI7XG4gICAgICAgIGc6IG51bWJlcjtcbiAgICAgICAgYjogbnVtYmVyO1xuICAgIH07XG4gICAgdmFsaWRhdGVIRVgoaGV4OiBhbnkpOiBhbnk7XG4gICAgSEVYdG9SR0IoaGV4OiBhbnkpOiB7XG4gICAgICAgIHI6IG51bWJlcjtcbiAgICAgICAgZzogbnVtYmVyO1xuICAgICAgICBiOiBudW1iZXI7XG4gICAgfTtcbiAgICBIRVh0b0hTQihoZXg6IGFueSk6IHtcbiAgICAgICAgaDogbnVtYmVyO1xuICAgICAgICBzOiBudW1iZXI7XG4gICAgICAgIGI6IG51bWJlcjtcbiAgICB9O1xuICAgIFJHQnRvSFNCKHJnYjogYW55KToge1xuICAgICAgICBoOiBudW1iZXI7XG4gICAgICAgIHM6IG51bWJlcjtcbiAgICAgICAgYjogbnVtYmVyO1xuICAgIH07XG4gICAgSFNCdG9SR0IoaHNiOiBhbnkpOiB7XG4gICAgICAgIHI6IG51bWJlcjtcbiAgICAgICAgZzogbnVtYmVyO1xuICAgICAgICBiOiBudW1iZXI7XG4gICAgfTtcbiAgICBSR0J0b0hFWChyZ2I6IGFueSk6IHN0cmluZztcbiAgICBIU0J0b0hFWChoc2I6IGFueSk6IHN0cmluZztcbiAgICBvbk92ZXJsYXlIaWRlKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENvbG9yUGlja2VyTW9kdWxlIHtcbn1cbiJdfQ==