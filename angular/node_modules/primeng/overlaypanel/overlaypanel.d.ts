import { OnDestroy, EventEmitter, Renderer2, ElementRef, ChangeDetectorRef, NgZone, TemplateRef, AfterContentInit, QueryList } from '@angular/core';
import { AnimationEvent } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare class OverlayPanel implements AfterContentInit, OnDestroy {
    el: ElementRef;
    renderer: Renderer2;
    private cd;
    private zone;
    dismissable: boolean;
    showCloseIcon: boolean;
    style: any;
    styleClass: string;
    appendTo: any;
    autoZIndex: boolean;
    ariaCloseLabel: string;
    baseZIndex: number;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onShow: EventEmitter<any>;
    onHide: EventEmitter<any>;
    templates: QueryList<any>;
    container: HTMLDivElement;
    overlayVisible: boolean;
    render: boolean;
    isContainerClicked: boolean;
    documentClickListener: any;
    target: any;
    willHide: boolean;
    documentResizeListener: any;
    contentTemplate: TemplateRef<any>;
    destroyCallback: Function;
    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, zone: NgZone);
    ngAfterContentInit(): void;
    onContainerClick(): void;
    bindDocumentClickListener(): void;
    unbindDocumentClickListener(): void;
    toggle(event: any, target?: any): void;
    show(event: any, target?: any): void;
    hasTargetChanged(event: any, target: any): boolean;
    appendContainer(): void;
    restoreAppend(): void;
    align(): void;
    onAnimationStart(event: AnimationEvent): void;
    onAnimationEnd(event: AnimationEvent): void;
    hide(): void;
    onCloseClick(event: any): void;
    onWindowResize(event: any): void;
    bindDocumentResizeListener(): void;
    unbindDocumentResizeListener(): void;
    onContainerDestroy(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OverlayPanel, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OverlayPanel, "p-overlayPanel", never, { "dismissable": "dismissable"; "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "showCloseIcon": "showCloseIcon"; "style": "style"; "styleClass": "styleClass"; "appendTo": "appendTo"; "ariaCloseLabel": "ariaCloseLabel"; }, { "onShow": "onShow"; "onHide": "onHide"; }, ["templates"], ["*"]>;
}
export declare class OverlayPanelModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<OverlayPanelModule, [typeof OverlayPanel], [typeof ɵngcc1.CommonModule], [typeof OverlayPanel]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<OverlayPanelModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3ZlcmxheXBhbmVsLmQudHMiLCJzb3VyY2VzIjpbIm92ZXJsYXlwYW5lbC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0RBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgUmVuZGVyZXIyLCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiwgTmdab25lLCBUZW1wbGF0ZVJlZiwgQWZ0ZXJDb250ZW50SW5pdCwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgT3ZlcmxheVBhbmVsIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCwgT25EZXN0cm95IHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgY2Q7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIGRpc21pc3NhYmxlOiBib29sZWFuO1xuICAgIHNob3dDbG9zZUljb246IGJvb2xlYW47XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgYXBwZW5kVG86IGFueTtcbiAgICBhdXRvWkluZGV4OiBib29sZWFuO1xuICAgIGFyaWFDbG9zZUxhYmVsOiBzdHJpbmc7XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIG9uU2hvdzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25IaWRlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICB0ZW1wbGF0ZXM6IFF1ZXJ5TGlzdDxhbnk+O1xuICAgIGNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XG4gICAgb3ZlcmxheVZpc2libGU6IGJvb2xlYW47XG4gICAgcmVuZGVyOiBib29sZWFuO1xuICAgIGlzQ29udGFpbmVyQ2xpY2tlZDogYm9vbGVhbjtcbiAgICBkb2N1bWVudENsaWNrTGlzdGVuZXI6IGFueTtcbiAgICB0YXJnZXQ6IGFueTtcbiAgICB3aWxsSGlkZTogYm9vbGVhbjtcbiAgICBkb2N1bWVudFJlc2l6ZUxpc3RlbmVyOiBhbnk7XG4gICAgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIGRlc3Ryb3lDYWxsYmFjazogRnVuY3Rpb247XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgem9uZTogTmdab25lKTtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBvbkNvbnRhaW5lckNsaWNrKCk6IHZvaWQ7XG4gICAgYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHVuYmluZERvY3VtZW50Q2xpY2tMaXN0ZW5lcigpOiB2b2lkO1xuICAgIHRvZ2dsZShldmVudDogYW55LCB0YXJnZXQ/OiBhbnkpOiB2b2lkO1xuICAgIHNob3coZXZlbnQ6IGFueSwgdGFyZ2V0PzogYW55KTogdm9pZDtcbiAgICBoYXNUYXJnZXRDaGFuZ2VkKGV2ZW50OiBhbnksIHRhcmdldDogYW55KTogYm9vbGVhbjtcbiAgICBhcHBlbmRDb250YWluZXIoKTogdm9pZDtcbiAgICByZXN0b3JlQXBwZW5kKCk6IHZvaWQ7XG4gICAgYWxpZ24oKTogdm9pZDtcbiAgICBvbkFuaW1hdGlvblN0YXJ0KGV2ZW50OiBBbmltYXRpb25FdmVudCk6IHZvaWQ7XG4gICAgb25BbmltYXRpb25FbmQoZXZlbnQ6IEFuaW1hdGlvbkV2ZW50KTogdm9pZDtcbiAgICBoaWRlKCk6IHZvaWQ7XG4gICAgb25DbG9zZUNsaWNrKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uV2luZG93UmVzaXplKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGJpbmREb2N1bWVudFJlc2l6ZUxpc3RlbmVyKCk6IHZvaWQ7XG4gICAgdW5iaW5kRG9jdW1lbnRSZXNpemVMaXN0ZW5lcigpOiB2b2lkO1xuICAgIG9uQ29udGFpbmVyRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBPdmVybGF5UGFuZWxNb2R1bGUge1xufVxuIl19