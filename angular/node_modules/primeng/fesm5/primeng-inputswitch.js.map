{"version":3,"file":"primeng-inputswitch.js","sources":["ng://primeng/inputswitch/inputswitch.ts","ng://primeng/inputswitch/primeng-inputswitch.ts"],"sourcesContent":["import {NgModule,Component,Input,forwardRef,EventEmitter,Output,ChangeDetectorRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\n\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => InputSwitch),\n  multi: true\n};\n\n@Component({\n    selector: 'p-inputSwitch',\n    template: `\n        <div [ngClass]=\"{'ui-inputswitch ui-widget': true, 'ui-inputswitch-checked': checked, 'ui-state-disabled': disabled, 'ui-inputswitch-readonly': readonly, 'ui-inputswitch-focus': focused}\" \n            [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"onClick($event, cb)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.tabindex]=\"tabindex\" [checked]=\"checked\" (change)=\"onInputChange($event)\"\n                    (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" [disabled]=\"disabled\" role=\"switch\" [attr.aria-checked]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\"/>\n            </div>\n            <span class=\"ui-inputswitch-slider\"></span>\n        </div>\n    `,\n    providers: [INPUTSWITCH_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class InputSwitch implements ControlValueAccessor {\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n\n    @Input() readonly: boolean;\n\n    @Input() ariaLabelledBy: string;\n    \n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n\n    checked: boolean = false;\n\n    focused: boolean = false;\n\n    onModelChange: Function = () => {};\n\n    onModelTouched: Function = () => {};\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event: Event, cb: HTMLInputElement) {\n        if (!this.disabled && !this.readonly) {\n            event.preventDefault();\n            this.toggle(event);\n            cb.focus();\n        }\n    }\n\n    onInputChange(event: Event) {\n        if (!this.readonly) {\n            const inputChecked = (<HTMLInputElement> event.target).checked;\n            this.updateModel(event, inputChecked);\n        }\n    }\n\n    toggle(event: Event) {\n        this.updateModel(event, !this.checked);\n    }\n\n    updateModel(event: Event, value: boolean) {\n        this.checked = value;\n        this.onModelChange(this.checked);\n        this.onChange.emit({\n            originalEvent: event,\n            checked: this.checked\n        });\n    }\n\n    onFocus(event: Event) {\n        this.focused = true;\n    }\n\n    onBlur(event: Event) {\n        this.focused = false;\n        this.onModelTouched();\n    }\n\n    writeValue(checked: any) : void {\n        this.checked = checked;\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputSwitch],\n    declarations: [InputSwitch]\n})\nexport class InputSwitchModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}