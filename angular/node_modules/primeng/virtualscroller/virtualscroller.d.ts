import { ElementRef, AfterContentInit, EventEmitter, QueryList, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';
import { Header, Footer } from 'primeng/api';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { BlockableUI } from 'primeng/api';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/cdk/scrolling';
import * as ɵngcc3 from 'primeng/api';
export declare class VirtualScroller implements AfterContentInit, BlockableUI, OnChanges {
    el: ElementRef;
    value: any[];
    itemSize: number;
    style: any;
    styleClass: string;
    scrollHeight: any;
    lazy: boolean;
    rows: number;
    minBufferPx: number;
    maxBufferPx: number;
    trackBy: Function;
    header: Header;
    footer: Footer;
    templates: QueryList<any>;
    viewport: CdkVirtualScrollViewport;
    onLazyLoad: EventEmitter<any>;
    itemTemplate: TemplateRef<any>;
    loadingItemTemplate: TemplateRef<any>;
    _totalRecords: number;
    page: number;
    _first: number;
    loadedPages: number[];
    _cache: boolean;
    constructor(el: ElementRef);
    totalRecords: number;
    first: number;
    cache: boolean;
    ngAfterContentInit(): void;
    onScrollIndexChange(index: number): void;
    createPageRange(page: number): number[];
    loadPage(page: number): void;
    getBlockableElement(): HTMLElement;
    scrollTo(index: number, mode?: ScrollBehavior): void;
    scrollToIndex(index: number, mode?: ScrollBehavior): void;
    clearCache(): void;
    ngOnChanges(simpleChange: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<VirtualScroller, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<VirtualScroller, "p-virtualScroller", never, { "trackBy": "trackBy"; "totalRecords": "totalRecords"; "first": "first"; "cache": "cache"; "value": "value"; "itemSize": "itemSize"; "style": "style"; "styleClass": "styleClass"; "scrollHeight": "scrollHeight"; "lazy": "lazy"; "rows": "rows"; "minBufferPx": "minBufferPx"; "maxBufferPx": "maxBufferPx"; }, { "onLazyLoad": "onLazyLoad"; }, ["header", "footer", "templates"], ["p-header", "p-footer"]>;
}
export declare class VirtualScrollerModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<VirtualScrollerModule, [typeof VirtualScroller], [typeof ɵngcc1.CommonModule, typeof ɵngcc2.ScrollingModule], [typeof VirtualScroller, typeof ɵngcc3.SharedModule, typeof ɵngcc2.ScrollingModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<VirtualScrollerModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbHNjcm9sbGVyLmQudHMiLCJzb3VyY2VzIjpbInZpcnR1YWxzY3JvbGxlci5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQ0E7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEFmdGVyQ29udGVudEluaXQsIEV2ZW50RW1pdHRlciwgUXVlcnlMaXN0LCBUZW1wbGF0ZVJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBIZWFkZXIsIEZvb3RlciB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IENka1ZpcnR1YWxTY3JvbGxWaWV3cG9ydCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zY3JvbGxpbmcnO1xuaW1wb3J0IHsgQmxvY2thYmxlVUkgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBWaXJ0dWFsU2Nyb2xsZXIgaW1wbGVtZW50cyBBZnRlckNvbnRlbnRJbml0LCBCbG9ja2FibGVVSSwgT25DaGFuZ2VzIHtcbiAgICBlbDogRWxlbWVudFJlZjtcbiAgICB2YWx1ZTogYW55W107XG4gICAgaXRlbVNpemU6IG51bWJlcjtcbiAgICBzdHlsZTogYW55O1xuICAgIHN0eWxlQ2xhc3M6IHN0cmluZztcbiAgICBzY3JvbGxIZWlnaHQ6IGFueTtcbiAgICBsYXp5OiBib29sZWFuO1xuICAgIHJvd3M6IG51bWJlcjtcbiAgICBtaW5CdWZmZXJQeDogbnVtYmVyO1xuICAgIG1heEJ1ZmZlclB4OiBudW1iZXI7XG4gICAgdHJhY2tCeTogRnVuY3Rpb247XG4gICAgaGVhZGVyOiBIZWFkZXI7XG4gICAgZm9vdGVyOiBGb290ZXI7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICB2aWV3cG9ydDogQ2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0O1xuICAgIG9uTGF6eUxvYWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBsb2FkaW5nSXRlbVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICAgIF90b3RhbFJlY29yZHM6IG51bWJlcjtcbiAgICBwYWdlOiBudW1iZXI7XG4gICAgX2ZpcnN0OiBudW1iZXI7XG4gICAgbG9hZGVkUGFnZXM6IG51bWJlcltdO1xuICAgIF9jYWNoZTogYm9vbGVhbjtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZik7XG4gICAgdG90YWxSZWNvcmRzOiBudW1iZXI7XG4gICAgZmlyc3Q6IG51bWJlcjtcbiAgICBjYWNoZTogYm9vbGVhbjtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBvblNjcm9sbEluZGV4Q2hhbmdlKGluZGV4OiBudW1iZXIpOiB2b2lkO1xuICAgIGNyZWF0ZVBhZ2VSYW5nZShwYWdlOiBudW1iZXIpOiBudW1iZXJbXTtcbiAgICBsb2FkUGFnZShwYWdlOiBudW1iZXIpOiB2b2lkO1xuICAgIGdldEJsb2NrYWJsZUVsZW1lbnQoKTogSFRNTEVsZW1lbnQ7XG4gICAgc2Nyb2xsVG8oaW5kZXg6IG51bWJlciwgbW9kZT86IFNjcm9sbEJlaGF2aW9yKTogdm9pZDtcbiAgICBzY3JvbGxUb0luZGV4KGluZGV4OiBudW1iZXIsIG1vZGU/OiBTY3JvbGxCZWhhdmlvcik6IHZvaWQ7XG4gICAgY2xlYXJDYWNoZSgpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKHNpbXBsZUNoYW5nZTogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBWaXJ0dWFsU2Nyb2xsZXJNb2R1bGUge1xufVxuIl19