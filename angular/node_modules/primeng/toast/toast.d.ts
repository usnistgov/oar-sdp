import { OnInit, AfterViewInit, AfterContentInit, OnDestroy, ElementRef, EventEmitter, QueryList, TemplateRef, NgZone, ChangeDetectorRef } from '@angular/core';
import { Message } from 'primeng/api';
import { MessageService } from 'primeng/api';
import { Subscription } from 'rxjs';
import { AnimationEvent } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'primeng/api';
export declare class ToastItem implements AfterViewInit, OnDestroy {
    private zone;
    message: Message;
    index: number;
    template: TemplateRef<any>;
    showTransformOptions: string;
    hideTransformOptions: string;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onClose: EventEmitter<any>;
    containerViewChild: ElementRef;
    timeout: any;
    constructor(zone: NgZone);
    ngAfterViewInit(): void;
    initTimeout(): void;
    clearTimeout(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    onCloseIconClick(event: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToastItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToastItem, "p-toastItem", never, { "message": "message"; "index": "index"; "template": "template"; "showTransformOptions": "showTransformOptions"; "hideTransformOptions": "hideTransformOptions"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; }, { "onClose": "onClose"; }, never, never>;
}
export declare class Toast implements OnInit, AfterContentInit, OnDestroy {
    messageService: MessageService;
    private cd;
    key: string;
    autoZIndex: boolean;
    baseZIndex: number;
    style: any;
    styleClass: string;
    position: string;
    modal: boolean;
    preventOpenDuplicates: boolean;
    preventDuplicates: boolean;
    showTransformOptions: string;
    hideTransformOptions: string;
    showTransitionOptions: string;
    hideTransitionOptions: string;
    onClose: EventEmitter<any>;
    containerViewChild: ElementRef;
    templates: QueryList<any>;
    messageSubscription: Subscription;
    clearSubscription: Subscription;
    messages: Message[];
    messagesArchieve: Message[];
    template: TemplateRef<any>;
    mask: HTMLDivElement;
    constructor(messageService: MessageService, cd: ChangeDetectorRef);
    ngOnInit(): void;
    add(messages: Message[]): void;
    canAdd(message: Message): boolean;
    containsMessage(collection: Message[], message: Message): boolean;
    ngAfterContentInit(): void;
    onMessageClose(event: any): void;
    enableModality(): void;
    disableModality(): void;
    onAnimationStart(event: AnimationEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<Toast, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<Toast, "p-toast", never, { "autoZIndex": "autoZIndex"; "baseZIndex": "baseZIndex"; "position": "position"; "preventOpenDuplicates": "preventOpenDuplicates"; "preventDuplicates": "preventDuplicates"; "showTransformOptions": "showTransformOptions"; "hideTransformOptions": "hideTransformOptions"; "showTransitionOptions": "showTransitionOptions"; "hideTransitionOptions": "hideTransitionOptions"; "key": "key"; "style": "style"; "styleClass": "styleClass"; "modal": "modal"; }, { "onClose": "onClose"; }, ["templates"], never>;
}
export declare class ToastModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToastModule, [typeof Toast, typeof ToastItem], [typeof ɵngcc1.CommonModule], [typeof Toast, typeof ɵngcc2.SharedModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToastModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QuZC50cyIsInNvdXJjZXMiOlsidG9hc3QuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9CQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUNBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEFmdGVyVmlld0luaXQsIEFmdGVyQ29udGVudEluaXQsIE9uRGVzdHJveSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBRdWVyeUxpc3QsIFRlbXBsYXRlUmVmLCBOZ1pvbmUsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgTWVzc2FnZVNlcnZpY2UgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEFuaW1hdGlvbkV2ZW50IH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2FzdEl0ZW0gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBtZXNzYWdlOiBNZXNzYWdlO1xuICAgIGluZGV4OiBudW1iZXI7XG4gICAgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgc2hvd1RyYW5zZm9ybU9wdGlvbnM6IHN0cmluZztcbiAgICBoaWRlVHJhbnNmb3JtT3B0aW9uczogc3RyaW5nO1xuICAgIHNob3dUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIGhpZGVUcmFuc2l0aW9uT3B0aW9uczogc3RyaW5nO1xuICAgIG9uQ2xvc2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnRhaW5lclZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICB0aW1lb3V0OiBhbnk7XG4gICAgY29uc3RydWN0b3Ioem9uZTogTmdab25lKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBpbml0VGltZW91dCgpOiB2b2lkO1xuICAgIGNsZWFyVGltZW91dCgpOiB2b2lkO1xuICAgIG9uTW91c2VFbnRlcigpOiB2b2lkO1xuICAgIG9uTW91c2VMZWF2ZSgpOiB2b2lkO1xuICAgIG9uQ2xvc2VJY29uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRvYXN0IGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0LCBPbkRlc3Ryb3kge1xuICAgIG1lc3NhZ2VTZXJ2aWNlOiBNZXNzYWdlU2VydmljZTtcbiAgICBwcml2YXRlIGNkO1xuICAgIGtleTogc3RyaW5nO1xuICAgIGF1dG9aSW5kZXg6IGJvb2xlYW47XG4gICAgYmFzZVpJbmRleDogbnVtYmVyO1xuICAgIHN0eWxlOiBhbnk7XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIHBvc2l0aW9uOiBzdHJpbmc7XG4gICAgbW9kYWw6IGJvb2xlYW47XG4gICAgcHJldmVudE9wZW5EdXBsaWNhdGVzOiBib29sZWFuO1xuICAgIHByZXZlbnREdXBsaWNhdGVzOiBib29sZWFuO1xuICAgIHNob3dUcmFuc2Zvcm1PcHRpb25zOiBzdHJpbmc7XG4gICAgaGlkZVRyYW5zZm9ybU9wdGlvbnM6IHN0cmluZztcbiAgICBzaG93VHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBoaWRlVHJhbnNpdGlvbk9wdGlvbnM6IHN0cmluZztcbiAgICBvbkNsb3NlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjb250YWluZXJWaWV3Q2hpbGQ6IEVsZW1lbnRSZWY7XG4gICAgdGVtcGxhdGVzOiBRdWVyeUxpc3Q8YW55PjtcbiAgICBtZXNzYWdlU3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG4gICAgY2xlYXJTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBtZXNzYWdlczogTWVzc2FnZVtdO1xuICAgIG1lc3NhZ2VzQXJjaGlldmU6IE1lc3NhZ2VbXTtcbiAgICB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBtYXNrOiBIVE1MRGl2RWxlbWVudDtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlU2VydmljZTogTWVzc2FnZVNlcnZpY2UsIGNkOiBDaGFuZ2VEZXRlY3RvclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBhZGQobWVzc2FnZXM6IE1lc3NhZ2VbXSk6IHZvaWQ7XG4gICAgY2FuQWRkKG1lc3NhZ2U6IE1lc3NhZ2UpOiBib29sZWFuO1xuICAgIGNvbnRhaW5zTWVzc2FnZShjb2xsZWN0aW9uOiBNZXNzYWdlW10sIG1lc3NhZ2U6IE1lc3NhZ2UpOiBib29sZWFuO1xuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpOiB2b2lkO1xuICAgIG9uTWVzc2FnZUNsb3NlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGVuYWJsZU1vZGFsaXR5KCk6IHZvaWQ7XG4gICAgZGlzYWJsZU1vZGFsaXR5KCk6IHZvaWQ7XG4gICAgb25BbmltYXRpb25TdGFydChldmVudDogQW5pbWF0aW9uRXZlbnQpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2FzdE1vZHVsZSB7XG59XG4iXX0=