import { EventEmitter, AfterViewInit, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
export declare const TOGGLEBUTTON_VALUE_ACCESSOR: any;
export declare class ToggleButton implements ControlValueAccessor, AfterViewInit {
    onLabel: string;
    offLabel: string;
    onIcon: string;
    offIcon: string;
    ariaLabelledBy: string;
    disabled: boolean;
    style: any;
    styleClass: string;
    inputId: string;
    tabindex: number;
    iconPos: string;
    onChange: EventEmitter<any>;
    checkboxViewChild: ElementRef;
    checkbox: HTMLInputElement;
    checked: boolean;
    focus: boolean;
    onModelChange: Function;
    onModelTouched: Function;
    ngAfterViewInit(): void;
    toggle(event: Event): void;
    onFocus(): void;
    onBlur(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(val: boolean): void;
    readonly hasOnLabel: boolean;
    readonly hasOffLabel: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ToggleButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ToggleButton, "p-toggleButton", never, { "onLabel": "onLabel"; "offLabel": "offLabel"; "iconPos": "iconPos"; "disabled": "disabled"; "onIcon": "onIcon"; "offIcon": "offIcon"; "ariaLabelledBy": "ariaLabelledBy"; "style": "style"; "styleClass": "styleClass"; "inputId": "inputId"; "tabindex": "tabindex"; }, { "onChange": "onChange"; }, never, never>;
}
export declare class ToggleButtonModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToggleButtonModule, [typeof ToggleButton], [typeof ɵngcc1.CommonModule], [typeof ToggleButton]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToggleButtonModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlYnV0dG9uLmQudHMiLCJzb3VyY2VzIjpbInRvZ2dsZWJ1dHRvbi5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBOEJBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgVE9HR0xFQlVUVE9OX1ZBTFVFX0FDQ0VTU09SOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb2dnbGVCdXR0b24gaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciwgQWZ0ZXJWaWV3SW5pdCB7XG4gICAgb25MYWJlbDogc3RyaW5nO1xuICAgIG9mZkxhYmVsOiBzdHJpbmc7XG4gICAgb25JY29uOiBzdHJpbmc7XG4gICAgb2ZmSWNvbjogc3RyaW5nO1xuICAgIGFyaWFMYWJlbGxlZEJ5OiBzdHJpbmc7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgc3R5bGU6IGFueTtcbiAgICBzdHlsZUNsYXNzOiBzdHJpbmc7XG4gICAgaW5wdXRJZDogc3RyaW5nO1xuICAgIHRhYmluZGV4OiBudW1iZXI7XG4gICAgaWNvblBvczogc3RyaW5nO1xuICAgIG9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjaGVja2JveFZpZXdDaGlsZDogRWxlbWVudFJlZjtcbiAgICBjaGVja2JveDogSFRNTElucHV0RWxlbWVudDtcbiAgICBjaGVja2VkOiBib29sZWFuO1xuICAgIGZvY3VzOiBib29sZWFuO1xuICAgIG9uTW9kZWxDaGFuZ2U6IEZ1bmN0aW9uO1xuICAgIG9uTW9kZWxUb3VjaGVkOiBGdW5jdGlvbjtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICB0b2dnbGUoZXZlbnQ6IEV2ZW50KTogdm9pZDtcbiAgICBvbkZvY3VzKCk6IHZvaWQ7XG4gICAgb25CbHVyKCk6IHZvaWQ7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBGdW5jdGlvbik6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IEZ1bmN0aW9uKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKHZhbDogYm9vbGVhbik6IHZvaWQ7XG4gICAgcmVhZG9ubHkgaGFzT25MYWJlbDogYm9vbGVhbjtcbiAgICByZWFkb25seSBoYXNPZmZMYWJlbDogYm9vbGVhbjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFRvZ2dsZUJ1dHRvbk1vZHVsZSB7XG59XG4iXX0=