{"version":3,"file":"organizationchart.d.ts","sources":["organizationchart.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, AfterContentInit, EventEmitter, TemplateRef, QueryList, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { TreeNode } from 'primeng/api';\nimport { Subscription } from 'rxjs';\nexport declare class OrganizationChartNode implements OnDestroy {\n    cd: ChangeDetectorRef;\n    node: TreeNode;\n    root: boolean;\n    first: boolean;\n    last: boolean;\n    chart: OrganizationChart;\n    subscription: Subscription;\n    constructor(chart: any, cd: ChangeDetectorRef);\n    get leaf(): boolean;\n    get colspan(): number;\n    onNodeClick(event: Event, node: TreeNode): void;\n    toggleNode(event: Event, node: TreeNode): void;\n    isSelected(): boolean;\n    ngOnDestroy(): void;\n}\nexport declare class OrganizationChart implements AfterContentInit {\n    el: ElementRef;\n    cd: ChangeDetectorRef;\n    value: TreeNode[];\n    style: any;\n    styleClass: string;\n    selectionMode: string;\n    preserveSpace: boolean;\n    get selection(): any;\n    set selection(val: any);\n    selectionChange: EventEmitter<any>;\n    onNodeSelect: EventEmitter<any>;\n    onNodeUnselect: EventEmitter<any>;\n    onNodeExpand: EventEmitter<any>;\n    onNodeCollapse: EventEmitter<any>;\n    templates: QueryList<any>;\n    templateMap: any;\n    private selectionSource;\n    _selection: any;\n    initialized: boolean;\n    selectionSource$: import(\"rxjs\").Observable<any>;\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\n    get root(): TreeNode;\n    ngAfterContentInit(): void;\n    getTemplateForNode(node: TreeNode): TemplateRef<any>;\n    onNodeClick(event: Event, node: TreeNode): void;\n    findIndexInSelection(node: TreeNode): number;\n    isSelected(node: TreeNode): boolean;\n}\nexport declare class OrganizationChartModule {\n}\n"]}