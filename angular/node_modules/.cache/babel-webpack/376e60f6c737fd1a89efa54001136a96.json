{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction UIMessage_div_0_div_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r4.text, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction UIMessage_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, UIMessage_div_0_div_2_span_1_Template, 1, 1, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.escape);\n  }\n}\n\nfunction UIMessage_div_0_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r5.text);\n  }\n}\n\nfunction UIMessage_div_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, UIMessage_div_0_ng_template_3_span_0_Template, 2, 1, \"span\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.escape);\n  }\n}\n\nconst _c0 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"p-inline-message-info\": a0,\n    \"p-inline-message-warn\": a1,\n    \"p-inline-message-error\": a2,\n    \"p-inline-message-success\": a3,\n    \"p-inline-message-icon-only\": a4\n  };\n};\n\nfunction UIMessage_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵtemplate(2, UIMessage_div_0_div_2_Template, 2, 1, \"div\", 3);\n    i0.ɵɵtemplate(3, UIMessage_div_0_ng_template_3_Template, 1, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r2 = i0.ɵɵreference(4);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.style)(\"ngClass\", i0.ɵɵpureFunction5(7, _c0, ctx_r0.severity === \"info\", ctx_r0.severity === \"warn\", ctx_r0.severity === \"error\", ctx_r0.severity === \"success\", ctx_r0.text == null));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.escape)(\"ngIfElse\", _r2);\n  }\n}\n\nclass UIMessage {\n  constructor() {\n    this.escape = true;\n  }\n\n  get icon() {\n    let icon = null;\n\n    if (this.severity) {\n      switch (this.severity) {\n        case 'success':\n          icon = 'pi pi-check';\n          break;\n\n        case 'info':\n          icon = 'pi pi-info-circle';\n          break;\n\n        case 'error':\n          icon = 'pi pi-times-circle';\n          break;\n\n        case 'warn':\n          icon = 'pi pi-exclamation-triangle';\n          break;\n\n        default:\n          icon = 'pi pi-info-circle';\n          break;\n      }\n    }\n\n    return icon;\n  }\n\n}\n\nUIMessage.ɵfac = function UIMessage_Factory(t) {\n  return new (t || UIMessage)();\n};\n\nUIMessage.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: UIMessage,\n  selectors: [[\"p-message\"]],\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    severity: \"severity\",\n    text: \"text\",\n    escape: \"escape\",\n    style: \"style\",\n    styleClass: \"styleClass\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"aria-live\", \"polite\", \"class\", \"p-inline-message p-component p-inline-message\", 3, \"ngStyle\", \"class\", \"ngClass\", 4, \"ngIf\"], [\"aria-live\", \"polite\", 1, \"p-inline-message\", \"p-component\", \"p-inline-message\", 3, \"ngStyle\", \"ngClass\"], [1, \"p-inline-message-icon\", 3, \"ngClass\"], [4, \"ngIf\", \"ngIfElse\"], [\"escapeOut\", \"\"], [\"class\", \"p-inline-message-text\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"p-inline-message-text\", 3, \"innerHTML\"], [\"class\", \"p-inline-message-text\", 4, \"ngIf\"], [1, \"p-inline-message-text\"]],\n  template: function UIMessage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, UIMessage_div_0_Template, 5, 13, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.severity);\n    }\n  },\n  directives: [i1.NgIf, i1.NgStyle, i1.NgClass],\n  styles: [\".p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UIMessage, [{\n    type: Component,\n    args: [{\n      selector: 'p-message',\n      template: `\n        <div aria-live=\"polite\" class=\"p-inline-message p-component p-inline-message\" *ngIf=\"severity\" [ngStyle]=\"style\" [class]=\"styleClass\"\n        [ngClass]=\"{'p-inline-message-info': (severity === 'info'),\n                'p-inline-message-warn': (severity === 'warn'),\n                'p-inline-message-error': (severity === 'error'),\n                'p-inline-message-success': (severity === 'success'),\n                'p-inline-message-icon-only': this.text == null}\">\n            <span class=\"p-inline-message-icon\" [ngClass]=\"icon\"></span>\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{text}}</span>\n            </ng-template>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./message.css'],\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], null, {\n    severity: [{\n      type: Input\n    }],\n    text: [{\n      type: Input\n    }],\n    escape: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }]\n  });\n})();\n\nclass MessageModule {}\n\nMessageModule.ɵfac = function MessageModule_Factory(t) {\n  return new (t || MessageModule)();\n};\n\nMessageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MessageModule\n});\nMessageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MessageModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [UIMessage],\n      declarations: [UIMessage]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MessageModule, UIMessage };","map":{"version":3,"sources":["/Users/lnc9/clin/sdp_upgrade9/oar-sdp/angular/node_modules/primeng/fesm2015/primeng-message.js"],"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","NgModule","i1","CommonModule","UIMessage","constructor","escape","icon","severity","ɵfac","ɵcmp","NgIf","NgStyle","NgClass","type","args","selector","template","changeDetection","OnPush","encapsulation","None","styleUrls","host","text","style","styleClass","MessageModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass UIMessage {\n    constructor() {\n        this.escape = true;\n    }\n    get icon() {\n        let icon = null;\n        if (this.severity) {\n            switch (this.severity) {\n                case 'success':\n                    icon = 'pi pi-check';\n                    break;\n                case 'info':\n                    icon = 'pi pi-info-circle';\n                    break;\n                case 'error':\n                    icon = 'pi pi-times-circle';\n                    break;\n                case 'warn':\n                    icon = 'pi pi-exclamation-triangle';\n                    break;\n                default:\n                    icon = 'pi pi-info-circle';\n                    break;\n            }\n        }\n        return icon;\n    }\n}\nUIMessage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UIMessage, deps: [], target: i0.ɵɵFactoryTarget.Component });\nUIMessage.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: UIMessage, selector: \"p-message\", inputs: { severity: \"severity\", text: \"text\", escape: \"escape\", style: \"style\", styleClass: \"styleClass\" }, host: { classAttribute: \"p-element\" }, ngImport: i0, template: `\n        <div aria-live=\"polite\" class=\"p-inline-message p-component p-inline-message\" *ngIf=\"severity\" [ngStyle]=\"style\" [class]=\"styleClass\"\n        [ngClass]=\"{'p-inline-message-info': (severity === 'info'),\n                'p-inline-message-warn': (severity === 'warn'),\n                'p-inline-message-error': (severity === 'error'),\n                'p-inline-message-success': (severity === 'success'),\n                'p-inline-message-icon-only': this.text == null}\">\n            <span class=\"p-inline-message-icon\" [ngClass]=\"icon\"></span>\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{text}}</span>\n            </ng-template>\n        </div>\n    `, isInline: true, styles: [\".p-inline-message{display:inline-flex;align-items:center;justify-content:center;vertical-align:top}.p-inline-message-icon-only .p-inline-message-text{visibility:hidden;width:0}.p-fluid .p-inline-message{display:flex}\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UIMessage, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-message',\n                    template: `\n        <div aria-live=\"polite\" class=\"p-inline-message p-component p-inline-message\" *ngIf=\"severity\" [ngStyle]=\"style\" [class]=\"styleClass\"\n        [ngClass]=\"{'p-inline-message-info': (severity === 'info'),\n                'p-inline-message-warn': (severity === 'warn'),\n                'p-inline-message-error': (severity === 'error'),\n                'p-inline-message-success': (severity === 'success'),\n                'p-inline-message-icon-only': this.text == null}\">\n            <span class=\"p-inline-message-icon\" [ngClass]=\"icon\"></span>\n            <div *ngIf=\"!escape; else escapeOut\">\n                <span *ngIf=\"!escape\" class=\"p-inline-message-text\" [innerHTML]=\"text\"></span>\n            </div>\n            <ng-template #escapeOut>\n                <span *ngIf=\"escape\" class=\"p-inline-message-text\">{{text}}</span>\n            </ng-template>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./message.css'],\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], propDecorators: { severity: [{\n                type: Input\n            }], text: [{\n                type: Input\n            }], escape: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }] } });\nclass MessageModule {\n}\nMessageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMessageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessageModule, declarations: [UIMessage], imports: [CommonModule], exports: [UIMessage] });\nMessageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessageModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [UIMessage],\n                    declarations: [UIMessage]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MessageModule, UIMessage };\n"]},"metadata":{},"sourceType":"module"}