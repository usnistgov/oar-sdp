{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate } from 'primeng/api';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\n\nfunction Messages_ng_container_1_div_1_ng_container_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n\n  if (rf & 2) {\n    const msg_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", msg_r4.summary, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction Messages_ng_container_1_div_1_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n\n  if (rf & 2) {\n    const msg_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", msg_r4.detail, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction Messages_ng_container_1_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Messages_ng_container_1_div_1_ng_container_3_span_1_Template, 1, 1, \"span\", 9);\n    i0.ɵɵtemplate(2, Messages_ng_container_1_div_1_ng_container_3_span_2_Template, 1, 1, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r4.summary);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r4.detail);\n  }\n}\n\nfunction Messages_ng_container_1_div_1_ng_template_4_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r4.summary);\n  }\n}\n\nfunction Messages_ng_container_1_div_1_ng_template_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r4 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r4.detail);\n  }\n}\n\nfunction Messages_ng_container_1_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Messages_ng_container_1_div_1_ng_template_4_span_0_Template, 2, 1, \"span\", 13);\n    i0.ɵɵtemplate(1, Messages_ng_container_1_div_1_ng_template_4_span_1_Template, 2, 1, \"span\", 14);\n  }\n\n  if (rf & 2) {\n    const msg_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", msg_r4.summary);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", msg_r4.detail);\n  }\n}\n\nfunction Messages_ng_container_1_div_1_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function Messages_ng_container_1_div_1_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.removeMessage(i_r5);\n    });\n    i0.ɵɵelement(1, \"i\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nconst _c1 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c2 = function (a0, a1, a2, a3) {\n  return {\n    \"pi-info-circle\": a0,\n    \"pi-check\": a1,\n    \"pi-exclamation-triangle\": a2,\n    \"pi-times-circle\": a3\n  };\n};\n\nfunction Messages_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"span\", 6);\n    i0.ɵɵtemplate(3, Messages_ng_container_1_div_1_ng_container_3_Template, 3, 2, \"ng-container\", 1);\n    i0.ɵɵtemplate(4, Messages_ng_container_1_div_1_ng_template_4_Template, 2, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, Messages_ng_container_1_div_1_button_6_Template, 2, 0, \"button\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r4 = ctx.$implicit;\n\n    const _r7 = i0.ɵɵreference(5);\n\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", \"p-message p-message-\" + msg_r4.severity)(\"@messageAnimation\", i0.ɵɵpureFunction1(11, _c1, i0.ɵɵpureFunction2(8, _c0, ctx_r3.showTransitionOptions, ctx_r3.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(\"p-message-icon pi\" + (msg_r4.icon ? \" \" + msg_r4.icon : \"\"));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(13, _c2, msg_r4.severity === \"info\", msg_r4.severity === \"success\", msg_r4.severity === \"warn\", msg_r4.severity === \"error\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.escape)(\"ngIfElse\", _r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.closable);\n  }\n}\n\nfunction Messages_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Messages_ng_container_1_div_1_Template, 7, 18, \"div\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.value);\n  }\n}\n\nfunction Messages_ng_template_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction Messages_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtemplate(2, Messages_ng_template_2_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", \"p-message p-message-\" + ctx_r2.severity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentTemplate);\n  }\n}\n\nclass Messages {\n  constructor(messageService, el, cd) {\n    this.messageService = messageService;\n    this.el = el;\n    this.cd = cd;\n    this.closable = true;\n    this.enableService = true;\n    this.escape = true;\n    this.showTransitionOptions = '300ms ease-out';\n    this.hideTransitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n    this.valueChange = new EventEmitter();\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n\n    if (this.messageService && this.enableService && !this.contentTemplate) {\n      this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n        if (messages) {\n          if (messages instanceof Array) {\n            let filteredMessages = messages.filter(m => this.key === m.key);\n            this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n          } else if (this.key === messages.key) {\n            this.value = this.value ? [...this.value, ...[messages]] : [messages];\n          }\n\n          this.cd.markForCheck();\n        }\n      });\n      this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n        if (key) {\n          if (this.key === key) {\n            this.value = null;\n          }\n        } else {\n          this.value = null;\n        }\n\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  hasMessages() {\n    let parentEl = this.el.nativeElement.parentElement;\n\n    if (parentEl && parentEl.offsetParent) {\n      return this.contentTemplate != null || this.value && this.value.length > 0;\n    }\n\n    return false;\n  }\n\n  clear() {\n    this.value = [];\n    this.valueChange.emit(this.value);\n  }\n\n  removeMessage(i) {\n    this.value = this.value.filter((msg, index) => index !== i);\n    this.valueChange.emit(this.value);\n  }\n\n  get icon() {\n    const severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);\n\n    if (this.hasMessages()) {\n      switch (severity) {\n        case 'success':\n          return 'pi-check';\n          break;\n\n        case 'info':\n          return 'pi-info-circle';\n          break;\n\n        case 'error':\n          return 'pi-times';\n          break;\n\n        case 'warn':\n          return 'pi-exclamation-triangle';\n          break;\n\n        default:\n          return 'pi-info-circle';\n          break;\n      }\n    }\n\n    return null;\n  }\n\n  ngOnDestroy() {\n    if (this.messageSubscription) {\n      this.messageSubscription.unsubscribe();\n    }\n\n    if (this.clearSubscription) {\n      this.clearSubscription.unsubscribe();\n    }\n  }\n\n}\n\nMessages.ɵfac = function Messages_Factory(t) {\n  return new (t || Messages)(i0.ɵɵdirectiveInject(i1.MessageService, 8), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nMessages.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Messages,\n  selectors: [[\"p-messages\"]],\n  contentQueries: function Messages_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    value: \"value\",\n    closable: \"closable\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    enableService: \"enableService\",\n    key: \"key\",\n    escape: \"escape\",\n    severity: \"severity\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\"\n  },\n  outputs: {\n    valueChange: \"valueChange\"\n  },\n  decls: 4,\n  vars: 5,\n  consts: [[\"role\", \"alert\", 1, \"p-messages\", \"p-component\", 3, \"ngStyle\"], [4, \"ngIf\", \"ngIfElse\"], [\"staticMessage\", \"\"], [\"role\", \"alert\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\", 3, \"ngClass\"], [1, \"p-message-wrapper\"], [3, \"ngClass\"], [\"escapeOut\", \"\"], [\"class\", \"p-message-close p-link\", \"type\", \"button\", \"pRipple\", \"\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-message-summary\", 3, \"innerHTML\", 4, \"ngIf\"], [\"class\", \"p-message-detail\", 3, \"innerHTML\", 4, \"ngIf\"], [1, \"p-message-summary\", 3, \"innerHTML\"], [1, \"p-message-detail\", 3, \"innerHTML\"], [\"class\", \"p-message-summary\", 4, \"ngIf\"], [\"class\", \"p-message-detail\", 4, \"ngIf\"], [1, \"p-message-summary\"], [1, \"p-message-detail\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-message-close\", \"p-link\", 3, \"click\"], [1, \"p-message-close-icon\", \"pi\", \"pi-times\"], [4, \"ngTemplateOutlet\"]],\n  template: function Messages_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, Messages_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, Messages_ng_template_2_Template, 3, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate)(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i2.NgStyle, i2.NgIf, i2.NgForOf, i2.NgClass, i3.Ripple, i2.NgTemplateOutlet],\n  styles: [\".p-message-close,.p-message-wrapper{display:flex;align-items:center}.p-message-close{justify-content:center}.p-message-close.p-link{margin-left:auto;overflow:hidden;position:relative}\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('messageAnimation', [transition(':enter', [style({\n      opacity: 0,\n      transform: 'translateY(-25%)'\n    }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n      height: 0,\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      marginRight: 0,\n      overflow: 'hidden',\n      opacity: 0\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Messages, [{\n    type: Component,\n    args: [{\n      selector: 'p-messages',\n      template: `\n        <div class=\"p-messages p-component\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-container *ngIf=\"!contentTemplate; else staticMessage\">\n                <div *ngFor=\"let msg of value; let i=index\" [ngClass]=\"'p-message p-message-' + msg.severity\" role=\"alert\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n                    <div class=\"p-message-wrapper\">\n                       <span [class]=\"'p-message-icon pi' + (msg.icon ? ' ' + msg.icon : '')\" [ngClass]=\"{'pi-info-circle': msg.severity === 'info',\n                            'pi-check': msg.severity === 'success',\n                            'pi-exclamation-triangle': msg.severity === 'warn',\n                            'pi-times-circle': msg.severity === 'error'}\"></span>\n                        <ng-container *ngIf=\"!escape; else escapeOut\">\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\" [innerHTML]=\"msg.summary\"></span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\" [innerHTML]=\"msg.detail\"></span>\n                        </ng-container>\n                        <ng-template #escapeOut>\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\">{{msg.summary}}</span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\">{{msg.detail}}</span>\n                        </ng-template>\n                        <button class=\"p-message-close p-link\" (click)=\"removeMessage(i)\" *ngIf=\"closable\" type=\"button\" pRipple>\n                            <i class=\"p-message-close-icon pi pi-times\"></i>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #staticMessage>\n                <div [ngClass]=\"'p-message p-message-' + severity\" role=\"alert\">\n                    <div class=\"p-message-wrapper\">\n                        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                    </div>\n                </div>\n            </ng-template>\n            </div>\n    `,\n      animations: [trigger('messageAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'translateY(-25%)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        height: 0,\n        marginTop: 0,\n        marginBottom: 0,\n        marginLeft: 0,\n        marginRight: 0,\n        overflow: 'hidden',\n        opacity: 0\n      }))])])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./messages.css'],\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i1.MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    closable: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    enableService: [{\n      type: Input\n    }],\n    key: [{\n      type: Input\n    }],\n    escape: [{\n      type: Input\n    }],\n    severity: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MessagesModule {}\n\nMessagesModule.ɵfac = function MessagesModule_Factory(t) {\n  return new (t || MessagesModule)();\n};\n\nMessagesModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MessagesModule\n});\nMessagesModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, RippleModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MessagesModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule],\n      exports: [Messages],\n      declarations: [Messages]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Messages, MessagesModule };","map":{"version":3,"sources":["/Users/lnc9/clin/sdp_upgrade9/oar-sdp/angular/node_modules/primeng/fesm2015/primeng-messages.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Input","ContentChildren","Output","NgModule","i2","CommonModule","trigger","transition","style","animate","i1","PrimeTemplate","i3","RippleModule","Messages","constructor","messageService","el","cd","closable","enableService","escape","showTransitionOptions","hideTransitionOptions","valueChange","ngAfterContentInit","templates","forEach","item","getType","contentTemplate","template","messageSubscription","messageObserver","subscribe","messages","Array","filteredMessages","filter","m","key","value","markForCheck","clearSubscription","clearObserver","hasMessages","parentEl","nativeElement","parentElement","offsetParent","length","clear","emit","removeMessage","i","msg","index","icon","severity","ngOnDestroy","unsubscribe","ɵfac","MessageService","ElementRef","ChangeDetectorRef","ɵcmp","NgStyle","NgIf","NgForOf","NgClass","Ripple","NgTemplateOutlet","opacity","transform","height","marginTop","marginBottom","marginLeft","marginRight","overflow","type","args","selector","animations","changeDetection","OnPush","encapsulation","None","styleUrls","host","decorators","styleClass","MessagesModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate } from 'primeng/api';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\n\nclass Messages {\n    constructor(messageService, el, cd) {\n        this.messageService = messageService;\n        this.el = el;\n        this.cd = cd;\n        this.closable = true;\n        this.enableService = true;\n        this.escape = true;\n        this.showTransitionOptions = '300ms ease-out';\n        this.hideTransitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n        this.valueChange = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n        if (this.messageService && this.enableService && !this.contentTemplate) {\n            this.messageSubscription = this.messageService.messageObserver.subscribe((messages) => {\n                if (messages) {\n                    if (messages instanceof Array) {\n                        let filteredMessages = messages.filter(m => this.key === m.key);\n                        this.value = this.value ? [...this.value, ...filteredMessages] : [...filteredMessages];\n                    }\n                    else if (this.key === messages.key) {\n                        this.value = this.value ? [...this.value, ...[messages]] : [messages];\n                    }\n                    this.cd.markForCheck();\n                }\n            });\n            this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n                if (key) {\n                    if (this.key === key) {\n                        this.value = null;\n                    }\n                }\n                else {\n                    this.value = null;\n                }\n                this.cd.markForCheck();\n            });\n        }\n    }\n    hasMessages() {\n        let parentEl = this.el.nativeElement.parentElement;\n        if (parentEl && parentEl.offsetParent) {\n            return this.contentTemplate != null || this.value && this.value.length > 0;\n        }\n        return false;\n    }\n    clear() {\n        this.value = [];\n        this.valueChange.emit(this.value);\n    }\n    removeMessage(i) {\n        this.value = this.value.filter((msg, index) => index !== i);\n        this.valueChange.emit(this.value);\n    }\n    get icon() {\n        const severity = this.severity || (this.hasMessages() ? this.value[0].severity : null);\n        if (this.hasMessages()) {\n            switch (severity) {\n                case 'success':\n                    return 'pi-check';\n                    break;\n                case 'info':\n                    return 'pi-info-circle';\n                    break;\n                case 'error':\n                    return 'pi-times';\n                    break;\n                case 'warn':\n                    return 'pi-exclamation-triangle';\n                    break;\n                default:\n                    return 'pi-info-circle';\n                    break;\n            }\n        }\n        return null;\n    }\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n    }\n}\nMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Messages, deps: [{ token: i1.MessageService, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMessages.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Messages, selector: \"p-messages\", inputs: { value: \"value\", closable: \"closable\", style: \"style\", styleClass: \"styleClass\", enableService: \"enableService\", key: \"key\", escape: \"escape\", severity: \"severity\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\" }, outputs: { valueChange: \"valueChange\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div class=\"p-messages p-component\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-container *ngIf=\"!contentTemplate; else staticMessage\">\n                <div *ngFor=\"let msg of value; let i=index\" [ngClass]=\"'p-message p-message-' + msg.severity\" role=\"alert\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n                    <div class=\"p-message-wrapper\">\n                       <span [class]=\"'p-message-icon pi' + (msg.icon ? ' ' + msg.icon : '')\" [ngClass]=\"{'pi-info-circle': msg.severity === 'info',\n                            'pi-check': msg.severity === 'success',\n                            'pi-exclamation-triangle': msg.severity === 'warn',\n                            'pi-times-circle': msg.severity === 'error'}\"></span>\n                        <ng-container *ngIf=\"!escape; else escapeOut\">\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\" [innerHTML]=\"msg.summary\"></span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\" [innerHTML]=\"msg.detail\"></span>\n                        </ng-container>\n                        <ng-template #escapeOut>\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\">{{msg.summary}}</span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\">{{msg.detail}}</span>\n                        </ng-template>\n                        <button class=\"p-message-close p-link\" (click)=\"removeMessage(i)\" *ngIf=\"closable\" type=\"button\" pRipple>\n                            <i class=\"p-message-close-icon pi pi-times\"></i>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #staticMessage>\n                <div [ngClass]=\"'p-message p-message-' + severity\" role=\"alert\">\n                    <div class=\"p-message-wrapper\">\n                        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                    </div>\n                </div>\n            </ng-template>\n            </div>\n    `, isInline: true, styles: [\".p-message-close,.p-message-wrapper{display:flex;align-items:center}.p-message-close{justify-content:center}.p-message-close.p-link{margin-left:auto;overflow:hidden;position:relative}\"], directives: [{ type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.Ripple, selector: \"[pRipple]\" }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('messageAnimation', [\n            transition(':enter', [\n                style({ opacity: 0, transform: 'translateY(-25%)' }),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition(':leave', [\n                animate('{{hideTransitionParams}}', style({ height: 0, marginTop: 0, marginBottom: 0, marginLeft: 0, marginRight: 0, overflow: 'hidden', opacity: 0 }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Messages, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-messages',\n                    template: `\n        <div class=\"p-messages p-component\" role=\"alert\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-container *ngIf=\"!contentTemplate; else staticMessage\">\n                <div *ngFor=\"let msg of value; let i=index\" [ngClass]=\"'p-message p-message-' + msg.severity\" role=\"alert\"\n                    [@messageAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\">\n                    <div class=\"p-message-wrapper\">\n                       <span [class]=\"'p-message-icon pi' + (msg.icon ? ' ' + msg.icon : '')\" [ngClass]=\"{'pi-info-circle': msg.severity === 'info',\n                            'pi-check': msg.severity === 'success',\n                            'pi-exclamation-triangle': msg.severity === 'warn',\n                            'pi-times-circle': msg.severity === 'error'}\"></span>\n                        <ng-container *ngIf=\"!escape; else escapeOut\">\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\" [innerHTML]=\"msg.summary\"></span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\" [innerHTML]=\"msg.detail\"></span>\n                        </ng-container>\n                        <ng-template #escapeOut>\n                            <span *ngIf=\"msg.summary\" class=\"p-message-summary\">{{msg.summary}}</span>\n                            <span *ngIf=\"msg.detail\" class=\"p-message-detail\">{{msg.detail}}</span>\n                        </ng-template>\n                        <button class=\"p-message-close p-link\" (click)=\"removeMessage(i)\" *ngIf=\"closable\" type=\"button\" pRipple>\n                            <i class=\"p-message-close-icon pi pi-times\"></i>\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-template #staticMessage>\n                <div [ngClass]=\"'p-message p-message-' + severity\" role=\"alert\">\n                    <div class=\"p-message-wrapper\">\n                        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                    </div>\n                </div>\n            </ng-template>\n            </div>\n    `,\n                    animations: [\n                        trigger('messageAnimation', [\n                            transition(':enter', [\n                                style({ opacity: 0, transform: 'translateY(-25%)' }),\n                                animate('{{showTransitionParams}}')\n                            ]),\n                            transition(':leave', [\n                                animate('{{hideTransitionParams}}', style({ height: 0, marginTop: 0, marginBottom: 0, marginLeft: 0, marginRight: 0, overflow: 'hidden', opacity: 0 }))\n                            ])\n                        ])\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./messages.css'],\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i1.MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { value: [{\n                type: Input\n            }], closable: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], enableService: [{\n                type: Input\n            }], key: [{\n                type: Input\n            }], escape: [{\n                type: Input\n            }], severity: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MessagesModule {\n}\nMessagesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessagesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMessagesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessagesModule, declarations: [Messages], imports: [CommonModule, RippleModule], exports: [Messages] });\nMessagesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessagesModule, imports: [[CommonModule, RippleModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: MessagesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule],\n                    exports: [Messages],\n                    declarations: [Messages]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Messages, MessagesModule };\n"]},"metadata":{},"sourceType":"module"}