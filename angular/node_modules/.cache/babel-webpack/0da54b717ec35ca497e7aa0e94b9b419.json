{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i1 from 'primeng/menu';\nimport { MenuModule } from 'primeng/menu';\nconst _c0 = [\"container\"];\nconst _c1 = [\"defaultbtn\"];\nconst _c2 = [\"menu\"];\n\nclass SplitButton {\n  constructor() {\n    this.iconPos = 'left';\n    this.onClick = new EventEmitter();\n    this.onDropdownClick = new EventEmitter();\n    this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    this.hideTransitionOptions = '.1s linear';\n  }\n\n  onDefaultButtonClick(event) {\n    this.onClick.emit(event);\n  }\n\n  onDropdownButtonClick(event) {\n    this.onDropdownClick.emit(event);\n    this.menu.toggle({\n      currentTarget: this.containerViewChild.nativeElement,\n      relativeAlign: this.appendTo == null\n    });\n  }\n\n}\n\nSplitButton.ɵfac = function SplitButton_Factory(t) {\n  return new (t || SplitButton)();\n};\n\nSplitButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SplitButton,\n  selectors: [[\"p-splitButton\"]],\n  viewQuery: function SplitButton_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonViewChild = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    model: \"model\",\n    icon: \"icon\",\n    iconPos: \"iconPos\",\n    label: \"label\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    menuStyle: \"menuStyle\",\n    menuStyleClass: \"menuStyleClass\",\n    disabled: \"disabled\",\n    tabindex: \"tabindex\",\n    appendTo: \"appendTo\",\n    dir: \"dir\",\n    expandAriaLabel: \"expandAriaLabel\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    onDropdownClick: \"onDropdownClick\"\n  },\n  decls: 7,\n  vars: 19,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"type\", \"button\", \"pButton\", \"\", 1, \"p-splitbutton-defaultbutton\", 3, \"icon\", \"iconPos\", \"label\", \"disabled\", \"click\"], [\"defaultbtn\", \"\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-chevron-down\", 1, \"p-splitbutton-menubutton\", 3, \"disabled\", \"click\"], [3, \"popup\", \"model\", \"styleClass\", \"appendTo\", \"showTransitionOptions\", \"hideTransitionOptions\"], [\"menu\", \"\"]],\n  template: function SplitButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵelementStart(2, \"button\", 2, 3);\n      i0.ɵɵlistener(\"click\", function SplitButton_Template_button_click_2_listener($event) {\n        return ctx.onDefaultButtonClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function SplitButton_Template_button_click_4_listener($event) {\n        return ctx.onDropdownButtonClick($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"p-menu\", 5, 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-splitbutton p-component\")(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"icon\", ctx.icon)(\"iconPos\", ctx.iconPos)(\"label\", ctx.label)(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"tabindex\", ctx.tabindex);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.disabled);\n      i0.ɵɵattribute(\"aria-label\", ctx.expandAriaLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleMap(ctx.menuStyle);\n      i0.ɵɵproperty(\"popup\", true)(\"model\", ctx.model)(\"styleClass\", ctx.menuStyleClass)(\"appendTo\", ctx.appendTo)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n    }\n  },\n  directives: [i2.NgClass, i2.NgStyle, i3.ButtonDirective, i1.Menu],\n  styles: [\".p-splitbutton{display:inline-flex;position:relative}.p-splitbutton .p-splitbutton-defaultbutton{flex:1 1 auto;border-top-right-radius:0;border-bottom-right-radius:0;border-right:0}.p-splitbutton-menubutton{display:flex;align-items:center;justify-content:center;border-top-left-radius:0;border-bottom-left-radius:0}.p-splitbutton .p-menu{min-width:100%}.p-fluid .p-splitbutton{display:flex}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButton, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitButton',\n      template: `\n        <div #container [ngClass]=\"'p-splitbutton p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button #defaultbtn class=\"p-splitbutton-defaultbutton\" type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"></button>\n            <button type=\"button\" pButton class=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\" [attr.aria-label]=\"expandAriaLabel\"></button>\n            <p-menu #menu [popup]=\"true\" [model]=\"model\" [style]=\"menuStyle\" [styleClass]=\"menuStyleClass\" [appendTo]=\"appendTo\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-menu>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      styleUrls: ['./splitbutton.css'],\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], null, {\n    model: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    iconPos: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onDropdownClick: [{\n      type: Output\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    menuStyle: [{\n      type: Input\n    }],\n    menuStyleClass: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    dir: [{\n      type: Input\n    }],\n    expandAriaLabel: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    buttonViewChild: [{\n      type: ViewChild,\n      args: ['defaultbtn']\n    }],\n    menu: [{\n      type: ViewChild,\n      args: ['menu']\n    }]\n  });\n})();\n\nclass SplitButtonModule {}\n\nSplitButtonModule.ɵfac = function SplitButtonModule_Factory(t) {\n  return new (t || SplitButtonModule)();\n};\n\nSplitButtonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SplitButtonModule\n});\nSplitButtonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ButtonModule, MenuModule], ButtonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitButtonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ButtonModule, MenuModule],\n      exports: [SplitButton, ButtonModule],\n      declarations: [SplitButton]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { SplitButton, SplitButtonModule };","map":{"version":3,"sources":["/Users/lnc9/clin/sdp_upgrade9/oar-sdp/angular/node_modules/primeng/fesm2015/primeng-splitbutton.js"],"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","ViewChild","NgModule","i2","CommonModule","i3","ButtonModule","i1","MenuModule","SplitButton","constructor","iconPos","onClick","onDropdownClick","showTransitionOptions","hideTransitionOptions","onDefaultButtonClick","event","emit","onDropdownButtonClick","menu","toggle","currentTarget","containerViewChild","nativeElement","relativeAlign","appendTo","ɵfac","ɵcmp","NgClass","NgStyle","ButtonDirective","Menu","type","args","selector","template","changeDetection","OnPush","encapsulation","None","styleUrls","host","model","icon","label","style","styleClass","menuStyle","menuStyleClass","disabled","tabindex","dir","expandAriaLabel","buttonViewChild","SplitButtonModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i1 from 'primeng/menu';\nimport { MenuModule } from 'primeng/menu';\n\nclass SplitButton {\n    constructor() {\n        this.iconPos = 'left';\n        this.onClick = new EventEmitter();\n        this.onDropdownClick = new EventEmitter();\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n    }\n    onDefaultButtonClick(event) {\n        this.onClick.emit(event);\n    }\n    onDropdownButtonClick(event) {\n        this.onDropdownClick.emit(event);\n        this.menu.toggle({ currentTarget: this.containerViewChild.nativeElement, relativeAlign: this.appendTo == null });\n    }\n}\nSplitButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SplitButton, deps: [], target: i0.ɵɵFactoryTarget.Component });\nSplitButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: SplitButton, selector: \"p-splitButton\", inputs: { model: \"model\", icon: \"icon\", iconPos: \"iconPos\", label: \"label\", style: \"style\", styleClass: \"styleClass\", menuStyle: \"menuStyle\", menuStyleClass: \"menuStyleClass\", disabled: \"disabled\", tabindex: \"tabindex\", appendTo: \"appendTo\", dir: \"dir\", expandAriaLabel: \"expandAriaLabel\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\" }, outputs: { onClick: \"onClick\", onDropdownClick: \"onDropdownClick\" }, host: { classAttribute: \"p-element\" }, viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }, { propertyName: \"buttonViewChild\", first: true, predicate: [\"defaultbtn\"], descendants: true }, { propertyName: \"menu\", first: true, predicate: [\"menu\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"'p-splitbutton p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button #defaultbtn class=\"p-splitbutton-defaultbutton\" type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"></button>\n            <button type=\"button\" pButton class=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\" [attr.aria-label]=\"expandAriaLabel\"></button>\n            <p-menu #menu [popup]=\"true\" [model]=\"model\" [style]=\"menuStyle\" [styleClass]=\"menuStyleClass\" [appendTo]=\"appendTo\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-menu>\n        </div>\n    `, isInline: true, styles: [\".p-splitbutton{display:inline-flex;position:relative}.p-splitbutton .p-splitbutton-defaultbutton{flex:1 1 auto;border-top-right-radius:0;border-bottom-right-radius:0;border-right:0}.p-splitbutton-menubutton{display:flex;align-items:center;justify-content:center;border-top-left-radius:0;border-bottom-left-radius:0}.p-splitbutton .p-menu{min-width:100%}.p-fluid .p-splitbutton{display:flex}\"], components: [{ type: i1.Menu, selector: \"p-menu\", inputs: [\"model\", \"popup\", \"style\", \"styleClass\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\"], outputs: [\"onShow\", \"onHide\"] }], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SplitButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-splitButton',\n                    template: `\n        <div #container [ngClass]=\"'p-splitbutton p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <button #defaultbtn class=\"p-splitbutton-defaultbutton\" type=\"button\" pButton [icon]=\"icon\" [iconPos]=\"iconPos\" [label]=\"label\" (click)=\"onDefaultButtonClick($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"></button>\n            <button type=\"button\" pButton class=\"p-splitbutton-menubutton\" icon=\"pi pi-chevron-down\" (click)=\"onDropdownButtonClick($event)\" [disabled]=\"disabled\" [attr.aria-label]=\"expandAriaLabel\"></button>\n            <p-menu #menu [popup]=\"true\" [model]=\"model\" [style]=\"menuStyle\" [styleClass]=\"menuStyleClass\" [appendTo]=\"appendTo\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-menu>\n        </div>\n    `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./splitbutton.css'],\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], propDecorators: { model: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], iconPos: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], onClick: [{\n                type: Output\n            }], onDropdownClick: [{\n                type: Output\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], menuStyle: [{\n                type: Input\n            }], menuStyleClass: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], appendTo: [{\n                type: Input\n            }], dir: [{\n                type: Input\n            }], expandAriaLabel: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], buttonViewChild: [{\n                type: ViewChild,\n                args: ['defaultbtn']\n            }], menu: [{\n                type: ViewChild,\n                args: ['menu']\n            }] } });\nclass SplitButtonModule {\n}\nSplitButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SplitButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSplitButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SplitButtonModule, declarations: [SplitButton], imports: [CommonModule, ButtonModule, MenuModule], exports: [SplitButton, ButtonModule] });\nSplitButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SplitButtonModule, imports: [[CommonModule, ButtonModule, MenuModule], ButtonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SplitButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ButtonModule, MenuModule],\n                    exports: [SplitButton, ButtonModule],\n                    declarations: [SplitButton]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SplitButton, SplitButtonModule };\n"]},"metadata":{},"sourceType":"module"}